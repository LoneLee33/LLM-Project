{"input": "A fishery wants to transport their catch. They can either use local <var>sled dogs</var> or <var>trucks</var>. Local <var>sled dogs</var> can take <param>100</param> <obj_name>fish</obj_name> per trip while <var>trucks</var> can take <param>300</param> <obj_name>fish</obj_name> per trip. The cost per trip for <var>sled dogs</var> is $<param>50</param> while the cost per trip for a <var>truck</var> is $<param>100</param>. The <const_dir>budget</const_dir> is at most $<limit>1000</limit> and the number of <var>sled dog</var> trips must be <const_dir>less than</const_dir> the number of <var>truck</var> trips. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of fish</obj_name> that can be transported.", "output": "max: 100 sled_dogs + 300 trucks\nst: 50 sled_dogs + 100 truck <= 1000\n     sled_dog <= truck"}
{"input": "An office supply company makes two types of printers: <var>color printers</var> and <var>black and white printers</var>. Different sections of the factory with different teams produce each printer. The color printer team can produce <const_dir>at most</const_dir> <limit>20</limit> <var>color printers</var> per day while the black and white printer team can produce <const_dir>at most</const_dir> <limit>30</limit> <var>black and white printers</var> per day. Both teams require use of the same paper tray installing machine and this machine can make <const_dir>at most</const_dir> <limit>35</limit> printers of either type each day. <var>Color printers</var> generate a <obj_name>profit</obj_name> of $<param>200</param> per printer while <var>black and white printers</var> generate a <obj_name>profit</obj_name> of $<param>70</param> per printer. How many of each printer should be made to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 200 Color_printers + 70 black_and_white_printers\nst: color_printers <= 20\n     black_and_white_printers <= 30\n     Color_printers + black_and_white_printers <= 35"}
{"input": "A lighting company makes <var>desk-lamps</var> and <var>night-lamps</var>. There is an expected demand of <const_dir>at least</const_dir> <limit>30</limit> <var>desk-lamps</var> and <limit>50</limit> <var>night-lamps</var> each day. However, due to the size of their factory, they can make <const_dir>at most</const_dir> <limit>150</limit> <var>desk-lamps</var> and <limit>180</limit> <var>night-lamps</var> per day. To satisfy a contract, a <const_dir>minimum</const_dir> of <limit>100</limit> lamps must be made each day. If the <obj_name>profit</obj_name> per <var>desk-lamp</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>night-lamp</var> sold is $<param>8</param>, how many lamps of each type should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 night-lamp + 5 desk-lamp\nst: desk-lamps >= 30\n     night-lamps >= 50\n     desk-lamps <= 150\n     night-lamps <= 180\n     night-lamp + desk-lamp <= 100"}
{"input": "A audio company make two types of headphones: <var>wired headphones</var> and <var>wireless headphones</var>. Two different teams make each type of headphones. The wired team can make <const_dir>at most</const_dir> <limit>100</limit> <var>wired headphones</var> per day and the wireless team can make <const_dir>at most</const_dir> <limit>170</limit> <var>wireless headphones</var> per day. Both teams require use of a shared audio testing machine, and this machine can be used to make a <const_dir>maximum</const_dir> of <limit>150</limit> headphones per day. The <obj_name>profit</obj_name> per <var>wired headphone</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>wireless headphone</var> $<param>20</param>. How many of each headphone should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 wired_headphone + 20 wireless_headphone\nst: wired_headphones <= 100\n     wireless_headphones <= 170\n     wired_headphone + wireless_headphone <= 150"}
{"input": "A farmer wants to manufacture a special plant nutrition using fertilizers <var>A</var> and <var>B.</var> Each kg of <var>fertilizer A</var> contains <param>13</param> units of nitrogen, <param>5</param> units of phosphoric acid, <param>6</param> units of vitamin A and <param>5</param> units of <obj_name>vitamin D.</obj_name> Each kg of <var>fertilizer B</var> contains <param>8</param> units of nitrogen, <param>14</param> units of phosphoric acid, <param>6</param> units of vitamin A and <param>9</param> units of <obj_name>vitamin D.</obj_name> To be effective, the plant nutrition requires a <const_dir>minimum</const_dir> <limit>220</limit> units of nitrogen, a <const_dir>minimum</const_dir> of <limit>160</limit> units of phosphoric acid, and <const_dir>no more than</const_dir> <limit>350</limit> units of vitamin A. How many kg of each fertilizer should be used to <obj_dir>minimize</obj_dir> the <obj_name>amount of vitamin D</obj_name> in the nutrition? What is the minimum amount of vitamin D?", "output": "min: 5 fertilizer_A + 9 fertilizer_B\nst: 13 fertilizer_A + 8 fertilizer_B >= 220\n     5 fertilizer_A + 14 fertilizer_B >= 160\n     6 fertilizer_A + 6 fertilizer_B <= 350"}
{"input": "A breakfast joint makes two different sandwiches: a <var>regular</var> and a <var>special</var>. Both need eggs and bacon. Each <var>regular sandwich</var> requires <param>2</param> eggs and <param>3</param> slices of bacon. Each <var>special sandwich</var> requires <param>3</param> eggs and <param>5</param> slices of bacon. The joint <const_dir>has</const_dir> a total of <limit>40</limit> eggs and <limit>70</limit> slices of bacon. It makes a <obj_name>profit</obj_name> of $<param>3</param> per <var>regular sandwich</var> and a <obj_name>profit</obj_name> of $<param>4</param> per <var>special sandwich</var>. How many of each sandwich should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 regular_sandwich + 4 special_sandwich\nst: 2 regular_sandwich + 3 special_sandwich <= 40\n     3 regular_sandwich + 5 special_sandwich <= 70"}
{"input": "A cleaning company located in Edmonton wants to get the best exposure possible for promoting their new dishwashing detergent <const_dir>without exceeding</const_dir> their $<limit>250,000</limit> advertising budget. To do so, the company decides to spend their money on two forms of advertising: (1) <var>radio ads</var> and (2) <var>social media ads</var>. Each <var>radio ad</var> costs $<param>5,000</param>; each <var>social media ad</var> costs $<param>9,150</param>. The expected <obj_name>exposure</obj_name>, based on industry ratings, is <param>60,500</param> viewers for each <var>radio ad</var>. Additionally, the expected <obj_name>exposure</obj_name> for each <var>social media ad</var> is <param>50,000</param> viewers. The company decides that <const_dir>at least</const_dir> <limit>15</limit> but <const_dir>no more than</const_dir> <limit>40</limit> <var>radio ads</var> should be ordered, and that <const_dir>at least</const_dir> <limit>35</limit> <var>social media ads</var> should be contracted. How many ads of each type should be run to obtain <obj_dir>maximum</obj_dir> <obj_name>exposure</obj_name> while staying within the budget?", "output": "max: 60,500 radio_ad + 50,000 social_media_ad\nst: 5,000 radio_ad + 9,150 social_media_ad <= 250,000\n     radio_ads >= 15\n     radio_ads <= 40\n     social_media_ads >= 35"}
{"input": "A <var>chair</var> produced by Elm Furniture yields a <obj_name>profit</obj_name> of $<param>43</param>, while every <var>dresser</var> yields a $<param>52</param> <obj_name>profit</obj_name>. Each week, <limit>17</limit> gallons of stain and <limit>11</limit> lengths of oak wood are <const_dir>available</const_dir>. Each <var>chair</var> requires <param>1.4</param> gallons of stain and <param>2</param> lengths of oak wood, while each <var>dresser</var> requires <param>1.1</param> gallons of stain and <param>3</param> lengths of oak wood. Determine the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 43 chair + 52 dresser\nst: 1.4 chair + 1.1 dresser <= 17\n     2 chair + 3 dresser <= 11"}
{"input": "A farmer wants to mix his animal feeds, <var>Feed A</var> and <var>Feed B</var>, in such a way that the mixture will contain a <const_dir>minimum</const_dir> of <limit>30</limit> units of protein and <limit>50</limit> units of fat. <var>Feed A</var> <obj_name>costs</obj_name> $<param>100</param> per kilogram and contains <param>10</param> units of protein and <param>8</param> units of fat. <var>Feed B</var> <obj_name>costs</obj_name> $<param>80</param> per kilogram and contains <param>7</param> units of protein and <param>15</param> units of fat. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of the mixture.", "output": "min: 100 Feed_A + 80 Feed_B\nst: 10 Feed_A + 7 Feed_B >= 30\n     8 Feed_A + 15 Feed_B >= 50"}
{"input": "An artisan makes two types of terracotta jars: a <var>thin jar</var> and a <var>stubby jar</var>. Each <var>thin jar</var> requires <param>50</param> minutes of shaping time and <param>90</param> minutes of baking time. Each <var>stubby jar</var> requires <param>30</param> minutes of shaping time and <param>150</param> minutes of baking time. Per week, there are <limit>3000</limit> minutes <const_dir>available</const_dir> for shaping and <limit>4000</limit> minutes <const_dir>available</const_dir> for baking. The <obj_name>profit</obj_name> per <var>thin jar</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>stubby jar</var> is $<param>9</param>. How many jars of each type should the artisan make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 9 stubby_jar + 5 thin_jar\nst: 50 thin_jar + 30 stubby_jar <= 3000\n     90 thin_jar + 150 stubby_jar <= 4000"}
{"input": "A grocery store wants to liquidate its <const_dir>stock</const_dir> of <limit>10</limit> apples, <limit>20</limit> bananas, and <limit>80</limit> grapes. Given past experience, the store knows that they can propose a <var>banana-haters package</var> with <param>6</param> apples and <param>30</param> grapes and that this package will bring a <obj_name>profit</obj_name> of <param>six</param> euros. Similarly, they can prepare a <var>combo package</var> with <param>5</param> apples, <param>6</param> bananas, and <param>20</param> grapes, yielding a <obj_name>profit</obj_name> of <param>seven</param> euros. They know they can sell any quantity of these two packages within the availability of its stock. What quantity of each package, <var>banana-haters packages</var> and <var>combo packages</var>, should the store prepare to <obj_dir>maximize</obj_dir> <obj_name>net profit</obj_name>?", "output": "max: six banana-haters_package + seven combo_package\nst: 6 banana-haters_package + 5 combo_package <= 10\n     6 combo_package <= 20\n     30 banana-haters_package + 20 combo_package <= 80"}
{"input": "A bakery uses a stand-mixer and a slow bake oven to make <var>bread</var> and <var>cookies</var>. Each machine can run for <const_dir>at most</const_dir> <limit>3000</limit> hours per year. To bake a loaf of <var>bread</var> takes <param>1</param> hour in the stand mixer and <param>3</param> hours in the oven. A batch of <var>cookies</var> requires <param>0.5</param> hours in the mixer and <param>1</param> hour in the oven. The <obj_name>profit</obj_name> per loaf of <var>bread</var> is $<param>5</param> and the <obj_name>profit</obj_name> per batch of <var>cookies</var> is $<param>3</param>. How should the bakery operate to <obj_dir>maximize</obj_dir> total <obj_name>profit</obj_name>?", "output": "max: 5 bread + 3 cookies\nst: 1 bread + 0.5 cookies <= 3000\n     3 bread + 1 cookies <= 3000"}
{"input": "A glass factory makes two types of glass panes: a <var>regular glass pane</var> and a <var>tempered glass pane</var>. Both require time on a heating and cooling machine. Both machines are available for a <const_dir>maximum</const_dir> of <limit>300</limit> minutes per day. It takes <param>3</param> minutes in the heating machine and <param>5</param> minutes in the cooling machine to make one <var>regular glass pane</var>. It takes <param>5</param> minutes in the heating machine and <param>8</param> minutes in the cooling machine to make one <var>tempered glass pane</var>. The <obj_name>profit</obj_name> per pane of <var>regular glass</var> is $<param>8</param> and the <obj_name>profit</obj_name> per pane of <var>tempered glass</var> is $<param>10</param>. How many panes of each glass type should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is the maximum profit?", "output": "max: 8 regular_glass + 10 tempered_glass\nst: 3 regular_glass_pane + 5 tempered_glass_pane <= 300\n     5 regular_glass_pane + 8 tempered_glass_pane <= 300"}
{"input": "A souvenir shop makes wooden <var>elephants</var> and <var>tigers</var> with plastic ornaments. Each <var>elephant</var> requires <param>50</param> grams of wood and <param>20</param> grams of plastic. Each <var>tiger</var> requires <param>40</param> grams of wood and <param>30</param> grams of plastic. In a week, <limit>5000</limit> grams of wood and <limit>4000</limit> grams of plastic are <const_dir>available</const_dir>. The <obj_name>profit</obj_name> per <var>elephant</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>tiger</var> sold is $<param>4</param>. How many of each should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 elephant + 4 tiger\nst: 50 elephant + 40 tiger <= 5000\n     20 elephant + 30 tiger <= 4000"}
{"input": "An art store makes <var>large</var> and <var>small art pieces</var>. The store has <const_dir>available</const_dir> <limit>100</limit> units of paint, <limit>50</limit> units of glitter, and <limit>70</limit> units of glue. To make a <var>large art piece</var> requires <param>4</param> units of paint, <param>3</param> units of glitter, and <param>5</param> units of glue. To make a <var>small art piece</var> requires <param>2</param> units of paint, <param>1</param> unit of glitter, and <param>2</param> units of glue. The store must make <const_dir>at least</const_dir> <limit>5</limit> units of each <var>large</var> and <var>small art pieces</var>. If the <obj_name>profit</obj_name> per <var>large art piece</var> is $<param>30</param> and the <obj_name>profit</obj_name> per <var>small art piece</var> is $<param>15</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 large_art_piece + 15 small_art_piece\nst: 4 large_art_piece + 2 small_art_piece <= 100\n     3 large_art_piece + 1 small_art_piece <= 50\n     5 large_art_piece + 2 small_art_piece <= 70\n     large >= 5\n     large >= 5"}
{"input": "My grandma is required to take two medicines Z1 and D3 everyday. She needs to take <const_dir>at least</const_dir> <limit>5</limit> grams of Z1 and <limit>10</limit> grams of D3 everyday. These medicines are available in two pills named <var>Zodiac</var> and <var>Sunny</var>. One pill of <var>Zodiac</var> contains <param>1.3</param> grams of Z1 while one pill of <var>Sunny</var> contains <param>1.2</param> grams of Z1. On the other hand, one pill of <var>Zodiac</var> contains <param>1.5</param> grams of D3 and one pill of <var>Sunny</var> contains <param>5</param> grams of D3. The <obj_name>cost</obj_name> per pill of <var>Zodiac</var> is $<param>1</param> and the <obj_name>cost</obj_name> per pill of <var>Sunny</var> is $<param>3</param>. Formulate a LP such that the medicine requirement can be fulfilled at the <obj_dir>lowest</obj_dir> <obj_name>cost</obj_name>.", "output": "low: 1 Zodiac + 3 Sunny\nst: 1.3 Zodiac + 1.2 Sunny >= 5\n     1.5 Zodiac + 5 Sunny >= 10"}
{"input": "A hobbyist makes <var>model trains</var> and <var>planes</var> using wood and paint. A <var>model train</var> requires <param>3</param> units of wood and <param>3</param> units of paint. A <var>model plane</var> requires <param>4</param> units of wood and <param>2</param> units of paint. The hobbyist has <const_dir>available</const_dir> <limit>120</limit> units of wood and <limit>90</limit> units of paint. If the <obj_name>profit</obj_name> per <var>model train</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>model plane</var> is $<param>10</param>, how many of each should be made to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 8 model_train + 10 model_plane\nst: 3 model_train + 4 model_plane <= 120\n     3 model_train + 2 model_plane <= 90"}
{"input": "A candy store mixes regular candy and sour candy to prepare two products, <var>regular mix</var> and <var>sour surprise mix</var>. Each kilogram of the <var>regular mix</var> contains <param>0.8</param> kg of regular candy and <param>0.2</param> kg of sour candy. The <obj_name>profit</obj_name> per kilogram of the <var>regular mix</var> is $<param>3</param>. Each kilogram of the <var>sour surprise mix</var> contains <param>0.1</param> kg of regular candy and <param>0.9</param> kg of sour candy. The <obj_name>profit</obj_name> per kilogram of the <var>sour surprise mix</var> is $<param>5</param>. The candy store has <limit>80</limit> kg of regular candy and <limit>60</limit> kg of sour candy <const_dir>available</const_dir>. How many kilograms of each type of candy mix should be created to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 3 regular_mix + 5 sour_surprise_mix\nst: 0.8 regular_mix + 0.1 sour_surprise_mix <= 80\n     0.2 regular_mix + 0.9 sour_surprise_mix <= 60"}
{"input": "A suspicious factory <const_dir>has</const_dir> <limit>100</limit> sq. feet of space. It makes bootleg <var>phones</var> and <var>laptops</var>. <var>Phones</var> require <param>2</param> hours of labor and cost $<param>12</param> for each sq. foot of space allocated for <var>phone</var> production (cost of electricity and equipment). <var>Laptops</var> require <param>3</param> hours of labor and cost $<param>15</param> for each sq. foot of space allocated for <var>laptop</var> production. <var>Phones</var> produce a <obj_name>net revenue</obj_name> of $<param>50</param> per sq. foot while <var>laptops</var> produce a <obj_name>net revenue</obj_name> of $<param>70</param> per sq. foot. The factory wants to spend <const_dir>at most</const_dir> $<limit>5000</limit> and <limit>2000</limit> hours of labor. What is the optimal factory layout to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 50 Phones + 70 laptops\nst: 12 Phones + 15 Laptops <= 5000\n     2 Phones + 3 Laptops <= 2000\n     Phones + laptops <= 100"}
{"input": "A electronics store sells <var>premium desktops</var> with more power as well as <var>regular desktops</var> for everyday use. Each <var>premium desktop</var> costs the store $<param>2000</param> to make and yields a <obj_name>profit</obj_name> of $<param>500</param>. Each <var>regular desktop</var> costs the store $<param>1000</param> to make and yields a <obj_name>profit</obj_name> of $<param>300</param>. The store sells <const_dir>at most</const_dir> <limit>200</limit> desktops each month and wants to spend <const_dir>at most</const_dir> $<limit>300000</limit> on making the desktops. How many of each should be made and sold to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 premium_desktop + 300 regular_desktop\nst: premium_desktop + regular_desktop <= 200\n     2000 premium_desktop + 1000 regular_desktop <= 300000"}
{"input": "A car manufacturer makes two versions of the same car, a <var>regular model</var> and a <var>premium model</var>. They make x1 <var>regular models</var> per day and x2 <var>premium models</var> per day. The <obj_name>profit</obj_name> per <var>regular model</var> is $<param>5000</param> and the <obj_name>profit</obj_name> per <var>premium model</var> is $<param>8500</param> (x1 and x2 are unknown values both greater than or equal to 0). The daily demand for these cars is limited to and <const_dir>most</const_dir> <limit>8</limit> <var>regular models</var> and <limit>6</limit> <var>premium models</var>. In addition, the manufacturer can make a <const_dir>maximum</const_dir> of <limit>12</limit> cars of either type per day. How many cars of each model should the manufacturer make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8500 premium_model + 5000 regular_model\nst: regular_models <= 8\n     premium_models <= 6\n     premium_model + regular_model <= 12"}
{"input": "You are designing an office space with two types of desks: <var>long desks</var> and <var>short desks</var>. You can spend <const_dir>at most</const_dir> $<limit>2000</limit>. <var>Long desks</var> cost $<param>300</param>, take up <param>10</param> square feet of space, and <obj_name>seat</obj_name> <param>6</param> employees. <var>Short desks</var> cost $<param>100</param>, take up <param>4</param> square feet of space, and <obj_name>seat</obj_name> <param>2</param> employees. The office can have <const_dir>at most</const_dir> <limit>200</limit> square feet of desks. How many of each desk should you buy in order to <obj_dir>maximize</obj_dir> the <obj_name>seating availability</obj_name>?", "output": "max: 6 Long_desks + 2 Short_desks\nst: 300 Long_desks + 100 Short_desks <= 2000\n     10 Long_desks + 4 Short_desks <= 200"}
{"input": "Ayse produces a plant growth compound by mixing two types of fertilizer: <var>C</var> and <var>Y.</var> This growth compound must contain <const_dir>at least</const_dir> <limit>5</limit> units of nitrous oxide and <limit>8</limit> units of vitamin mix. <var>Fertilizer C</var> and <var>Y</var> <obj_name>cost</obj_name> $<param>2</param> and $<param>3</param> per kg respectively. <var>Fertilizer C</var> contains <param>1.5</param> units of nitrous oxide per kg and <param>3</param> units of vitamin mix per kg. <var>Fertilizer Y</var> contains <param>5</param> units of nitrous oxide per kg and <param>1</param> unit of vitamin mix per kg. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of Ayse's compound.", "output": "min: 2 Fertilizer_C + 3 Y\nst: 1.5 Fertilizer_C + 5 Fertilizer_Y >= 5\n     3 Fertilizer_C + 1 Fertilizer_Y >= 8"}
{"input": "Sleep inducing medicine and anti-inflammatory medicine is found in two pills, <var>pill A</var> and <var>pill B.</var> One <var>pill A</var> contains <param>3</param> units of sleep inducing medicine and <param>5</param> units of anti-inflammatory medicine. One <var>pill B</var> contains <param>6</param> units of sleep-inducing medicine and <param>1</param> unit of anti-inflammatory medicine. The <obj_name>cost</obj_name> per pill for <var>pill A</var> is $<param>4</param> and the <obj_name>cost</obj_name> per pill for <var>pill B</var> is $<param>5</param>. A patient must consume these two pills to get <const_dir>at least</const_dir> <limit>40</limit> units of sleep-inducing medicine and <limit>50</limit> units of anti-inflammatory medicine. Formulate a LP to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> for the patient.", "output": "min: 4 pill_A + 5 pill_B\nst: 3 pill_A + 6 pill_B >= 40\n     5 pill_A + 1 pill_B >= 50"}
{"input": "A car manufacturer makes two types of car oils: <var>Oil Max</var> and <var>Oil Max Pro</var>. A container of <var>Oil Max</var> contains <param>46</param> grams of substance A, <param>43</param> grams of substance B and <param>56</param> grams of substance C. A container of <var>Oil Max Pro</var> contains <param>13</param> grams of substance A, <param>4</param> grams of substance B and <param>45</param> grams of substance C. The car manufacturer <const_dir>has</const_dir> <limit>1345</limit> grams of substance A, <limit>346</limit> grams of substance B, <limit>1643</limit> grams of substance C. In addition, the <obj_name>profit</obj_name> per container of <var>Oil Max</var> is $<param>10</param> and the <obj_name>profit</obj_name> per container of <var>Oil Max Pro</var> is $<param>15</param>. How many containers of each of oil should the car manufacturer make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 Oil_Max + 15 Oil_Max_Pro\nst: 46 Oil_Max + 13 Oil_Max_Pro <= 1345\n     43 Oil_Max + 4 Oil_Max_Pro <= 346\n     56 Oil_Max + 45 Oil_Max_Pro <= 1643"}
{"input": "A nutritionist is making a special vitamin mix using two drinks: <var>A</var> and <var>B.</var> The vitamin mix must contain <const_dir>at least</const_dir> <limit>150</limit> units of Vitamin A, <const_dir>at least</const_dir> <limit>300</limit> units of vitamin D, and <const_dir>at most</const_dir> <limit>400</limit> units of vitamin E. A cup of <var>drink A</var> contains <param>8</param> units of Vitamin A, <param>6</param> units of Vitamin D, <param>10</param> units of Vitamin E, and <param>4</param> units of <obj_name>Vitamin K.</obj_name> A cup of <var>drink B</var> contains <param>15</param> units of Vitamin A, <param>2</param> units of Vitamin D, <param>20</param> units of Vitamin E, and <param>12</param> units of <obj_name>Vitamin K.</obj_name> How many cups of each drink should be used to make the vitamin mix in order to <obj_dir>minimize</obj_dir> the <obj_name>amount of Vitamin K</obj_name>?", "output": "min: 12 drink_B + 4 drink_A\nst: 8 drink_A + 15 drink_B >= 150\n     6 drink_A + 2 drink_B >= 300\n     10 drink_A + 20 drink_B <= 400"}
{"input": "An ice cream store makes <var>chocolate</var> and <var>vanilla ice cream</var> by the gallon. In a week, they must make <const_dir>at least</const_dir> <limit>5</limit> gallons of each type but <const_dir>at most</const_dir> <limit>10</limit> gallons of <var>chocolate ice cream</var> and <const_dir>at most</const_dir> <limit>8</limit> gallons of <var>vanilla ice cream</var>. It takes <param>1</param> hour to produce a gallon of <var>chocolate ice cream</var> and <param>2</param> hours to produce a gallon of <var>vanilla ice cream</var>. In a week, <limit>30</limit> hours are <const_dir>available</const_dir> to make ice cream. In addition <const_dir>at least</const_dir> <limit>6</limit> workers are needed with <param>1</param> working on the <var>chocolate ice cream</var> and <param>2</param> on the <var>vanilla ice cream</var> at any time. If the <obj_name>profit</obj_name> per gallon of <var>chocolate ice cream</var> is $<param>200</param> and the <obj_name>profit</obj_name> per gallon of <var>vanilla ice cream</var> is $<param>300</param>, how many gallons of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 vanilla_ice_cream + 200 chocolate_ice_cream\nst: chocolate_ice_cream >= 5\n     vanilla_ice_cream >= 5\n     chocolate_ice_cream <= 10\n     vanilla_ice_cream <= 8\n     1 chocolate_ice_cream + 2 vanilla_ice_cream <= 30\n     1 chocolate_ice_cream + 2 vanilla_ice_cream >= 6"}
{"input": "A flooring company produces engineered <var>hardwood</var> and <var>vinyl planks</var>. Their sales forecasts show an expected demand of <const_dir>at least</const_dir> <limit>20,000</limit> square foot of <var>hardwood</var> and <limit>10,000</limit> square feet of <var>vinyl planks</var> each week. To satisfy a shipping contract, a total of <const_dir>at least</const_dir> <limit>60,000</limit> square feet of flooring much be shipped each week. Due to a labor shortage issue, <const_dir>no more than</const_dir> <limit>50,000</limit> square feet of <var>hardwood</var> and <limit>30,000</limit>  square feet of <var>vinyl  </var>can be produced weekly. If a square foot of <var>hardwood</var> flooring yields a <obj_name>profit</obj_name> of $<param>2.5</param> and a square foot of <var>vinyl planks</var> produces a $<param>3</param> <obj_name>profit</obj_name>, how many of each type of flooring should be made weekly to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 2.5 hardwood + 3 vinyl_planks\nst: hardwood >= 20,000\n     vinyl_planks >= 10,000\n     hardwood + vinyl_planks <= 60,000\n     hardwood <= 50,000\n     vinyl__ <= 30,000"}
{"input": "A berry farmer has two farms, an <var>old</var> and <var>new farm</var>, where he grows raspberries, blueberries, and strawberries. He has a contract to <const_dir>provide</const_dir> a local store with <limit>10</limit> kg of raspberries, <limit>9</limit> kg of blueberries, and <limit>15</limit> kg of strawberries. At his <var>old farm</var>, it <obj_name>cost</obj_name> $<param>300</param> to operate per day and he can harvest and deliver <param>2</param> kg of raspberries, <param>2</param> kg of blueberries, and <param>4</param> kg of strawberries in a day. At his <var>new farm</var>, it <obj_name>costs</obj_name> $<param>200</param> to operate per day and he can harvest and deliver <param>4</param> kg of raspberries, <param>1</param> kg of blueberries, and <param>2</param> kg of strawberries in a day. Formulate a LP to meet his contract while <obj_dir>minimizing</obj_dir> his <obj_name>cost</obj_name>.", "output": "min: 300 old_farm + 200 new_farm\nst: 2 old_farm + 4 new_farm >= 10\n     2 old_farm + 1 new_farm >= 9\n     4 old_farm + 2 new_farm >= 15"}
{"input": "Jordan is a chef. He wants to design a diet consisting of <var>Kebabs</var> and <var>Rice</var>.  Assume that each serving of <var>Rice</var> <obj_name>costs</obj_name> $<param>3</param> and contains <param>300</param> calories and <param>4.5</param> grams of protein. Assume that each serving of <var>Kebab</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>200</param> calories and <param>4</param> grams of protein. He's interested in spending as little money as possible but he wants to ensure that his meals have <const_dir>at least</const_dir> <limit>2200</limit> calories and <const_dir>at least</const_dir> <limit>30</limit> grams of protein per day. Formulate a linear programming problem that will help <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of the diet.", "output": "min: 3 Rice + 2 Kebab\nst: 300 Rice + 200 Kebab >= 2200\n     4.5 Rice + 4 Kebab >= 30"}
{"input": "A company sells custom <var>scooters</var> and <var>bikes</var> for customers. The <obj_name>profit</obj_name> per <var>scooter</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>bike</var> is $<param>300</param>. Each product requires time with the design team and engineering team. Each <var>scooter</var> needs <param>2</param> hours with the design team and <param>3</param> hours with the engineering team. Each <var>bike</var> needs <param>4</param> hours with the design team and <param>5</param> hours with the engineering team. Per month, there are <limit>5000</limit> hours <const_dir>available</const_dir> on the design team and <limit>6000</limit> hours <const_dir>available</const_dir> on the engineering team. How many of each should the company make per month to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 scooter + 300 bike\nst: 2 scooter + 4 bike <= 5000\n     3 scooter + 5 bike <= 6000"}
{"input": "John <const_dir>has</const_dir> a <limit>300</limit> acre berry farm on which to plant <var>blueberries</var> and <var>raspberries.</var> John has $<limit>10000</limit> to spend on watering and <limit>575</limit> days worth of labor <const_dir>available</const_dir>. For each acre of <var>blueberries</var>, <param>6</param> days worth of labor and $<param>22</param> in watering costs is required. For each acre of <var>raspberries,</var> <param>3</param> days worth of labor and $<param>25</param> in watering costs is required. The <obj_name>profit</obj_name> per acre of <var>blueberries</var> is $<param>56</param> and the <obj_name>profit</obj_name> per acre of <var>raspberries</var> is $<param>75</param>. Formulate an LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 56 blueberries + 75 raspberries\nst: blueberries + raspberries <= 300\n     22 blueberries + 25 raspberries, <= 10000\n     6 blueberries + 3 raspberries, <= 575"}
{"input": "A man  only eats <var>vegetable</var> and <var>fruits</var>. A serving of <var>vegetables</var> contains <param>2</param> units of vitamins and <param>3</param> units of minerals. A serving of <var>fruit</var> contains <param>4</param> units of vitamins and <param>1</param> unit of minerals. He wants to eat <const_dir>at least</const_dir> <limit>20</limit> units of vitamins and <limit>30</limit> units of minerals. If <var>vegetables</var> <obj_name>cost</obj_name> $<param>3</param> per serving and <var>fruits</var> <obj_name>cost</obj_name> $<param>5</param> per serving, how many servings of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 vegetables + 5 fruits\nst: 2 vegetables + 4 fruit >= 20\n     3 vegetables + 1 fruit >= 30"}
{"input": "A bakery bakes <var>bagels</var> and <var>croissants</var>. A batch of <var>bagels</var> can be made using <param>2</param> hours of oven time and <param>0.25</param> hours of pastry chef time. A batch of <var>croissants</var> is more complicated, so while they take <param>1</param> hour of oven time, they take <param>2</param> hours of pastry chef time. In a day, the bakery has <const_dir>at most</const_dir> <limit>70</limit> hours <const_dir>available</const_dir> for the oven and <limit>32</limit> pastry chef hours <const_dir>available</const_dir>. Using all the available capacity, what is the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name> the bakery can generate assuming the <obj_name>profit</obj_name> per batch is $<param>20</param> and $<param>40</param> respectively for a batch of <var>bagels</var> and a batch of <var>croissants</var>.", "output": "max: 20 bagels + 40 croissants\nst: 2 bagels + 1 croissants <= 70\n     0.25 bagels + 2 croissants <= 32"}
{"input": "A teddy bear company produces three different colored bears: black, white, and brown. These bears are made in two different factories. Running <var>factory 1</var> for 1 hour <obj_name>costs</obj_name> $<param>300</param> and produces <param>5</param> black teddy bears, <param>6</param> white teddy bears, and <param>3</param> brown ones. Running <var>factory 2</var> for 1 hour <obj_name>costs</obj_name> $<param>600</param> and produces <param>10</param> black teddy bears and <param>10</param> white teddy bears. (but no brown ones). To meet children's demand, <const_dir>at least</const_dir> <limit>20</limit> black teddy bears, <limit>5</limit> white teddy bears, and <limit>15</limit> brown teddy bears must be made daily. Given this information, develop a linear programming problem assuming the teddy bear company wants to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of production.", "output": "min: 300 factory_1 + 600 factory_2\nst: 5 factory_1 + 10 factory_2 >= 20\n     6 factory_1 + 10 factory_2 >= 5\n     3 factory_1 >= 15"}
{"input": "A farmer <const_dir>has</const_dir> <limit>500</limit> acres of land to grow <var>turnips</var> and <var>pumpkins</var>. <var>Turnips</var> require <param>50</param> minutes of watering and $<param>80</param> worth of pesticide per acre. <var>Pumpkins</var> require <param>90</param> minutes of watering and $<param>50</param> worth of pesticide per acre. The farmer has <limit>40000</limit> minutes <const_dir>available</const_dir> for watering and $<limit>34000</limit> <const_dir>available</const_dir> to spend on pesticide. If the <obj_name>revenue</obj_name> per acre of <var>turnips</var> is $<param>300</param> and the <obj_name>revenue</obj_name> per acre of <var>pumpkins</var> is $<param>450</param>, how many acres of each should he grow to <obj_dir>maximize</obj_dir> his <obj_name>revenue</obj_name>.", "output": "max: 300 turnips + 450 pumpkins\nst: turnips + pumpkins <= 500\n     50 Turnips + 90 Pumpkins <= 40000\n     80 Turnips + 50 Pumpkins <= 34000"}
{"input": "A school employs <var>staff</var> and <var>substitute teachers</var>. Per shift, <var>staff teachers</var> work <param>6</param> hours and get paid $<param>300</param>. Per shift, <var>substitute teachers</var> work <param>3</param> hours and get paid $<param>100</param>. For the summer term, the school <const_dir>requires</const_dir> <limit>1000</limit> hours of teaching availability. If the school has a <const_dir>budget</const_dir> of $<limit>40000</limit>, how many of each teacher should be hired to <obj_dir>minimize</obj_dir> the <obj_name>total number of teachers</obj_name>?", "output": "min: \nst: 6 staff_teachers + 3 substitute_teachers >= 1000\n     300 staff_teachers + 100 substitute_teachers <= 40000"}
{"input": "A sandwich company can open two types of stores, a <var>dine-in place</var> and a <var>food-truck</var>. A <var>dine-in place</var> can make <param>100</param> sandwiches per day and requires <param>8</param> employees to operate. A <var>food-truck</var> can make <param>50</param> sandwiches per day and requires <param>3</param> employees to operate. The company must make <const_dir>at least</const_dir> <limit>500</limit> sandwiches per day but they only have <const_dir>available</const_dir> <limit>35</limit> employees. How many of each type of store should the company open to <obj_dir>minimize</obj_dir> the <obj_name>total number of stores</obj_name>?", "output": "min: \nst: 100 dine-in_place + 50 food-truck >= 500\n     8 dine-in_place + 3 food-truck <= 35"}
{"input": "There are two processes, <var>process A</var> and <var>process B</var>, to plate a coin with gold. <var>Process A</var> requires <param>3</param> units of gold, <param>2</param> wires, and can plate <param>5</param> <obj_name>coins</obj_name>. <var>Process B</var> requires <param>5</param> units of gold, <param>3</param> wires, and can plate <param>7</param> <obj_name>coins</obj_name>. There are <limit>500</limit> units of gold and <limit>300</limit> wires <const_dir>available</const_dir>. How many processes of each type should be run to <obj_dir>maximize</obj_dir> the total <obj_name>number of coins</obj_name> that can be plated?", "output": "max: 5 Process_A + 7 Process_B\nst: 3 Process_A + 5 Process_B <= 500\n     2 Process_A + 3 Process_B <= 300"}
{"input": "A woodshop can purchase two types of saws, a <var>miter saw</var> and a <var>circular saw</var>. A <var>miter saw</var> can cut <param>50</param> planks of wood and produces <param>60</param> units of sawdust per day. A <var>circular saw</var> can cut <param>70</param> planks of wood and produces <param>100</param> units of sawdust per day. The woodshop must cut <const_dir>at least</const_dir> <limit>1500</limit> planks of wood per day. However, to avoid too much pollution in the woodshop they can produce <const_dir>at most</const_dir> <limit>2000</limit> units of sawdust per day. How many of each type of saw should be purchased to <obj_dir>minimize</obj_dir> the total <obj_name>number of saws</obj_name> needed?", "output": "min: \nst: 50 miter_saw + 70 circular_saw >= 1500\n     60 miter_saw + 100 circular_saw <= 2000"}
{"input": "A farmer <const_dir>has</const_dir> <limit>200</limit> acres of land on which he must process hay using either a <var>windrower</var> or <var>hay harvester</var>. For each acre of land, the <var>windrower</var> can process <param>10</param> kg of <obj_name>hay</obj_name> while the <var>hay harvester</var> can process <param>8</param> kg of <obj_name>hay</obj_name>. Per acre, the <var>windrower</var> produces <param>5</param> kg of methane gas and requires <param>2</param> kg of fuel. On the other hand, the <var>hay harvester</var> produces <param>3</param> kg of methane gas per acre and requires <param>1</param> kg of fuel. There are <limit>300</limit> kg of fuel <const_dir>available</const_dir> and the farmer can produce <const_dir>at most</const_dir> <limit>800</limit> kg of methane gas. For how many acres should each machine be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of hay</obj_name> processed?", "output": "max: 10 windrower + 8 hay_harvester\nst: windrower + hay_harvester <= 200\n     2 windrower + 1 hay_harvester <= 300\n     5 windrower + 3 hay_harvester <= 800"}
{"input": "An amusement park is installing ticket machines, both <var>cash-based</var> and <var>card-only</var> machines. A <var>cash-based machine</var> can process <param>20</param> people per hour while a <var>card-only machine</var> can process <param>30</param> people per hour. The <var>cash-based machine</var> needs <param>4</param> rolls of paper per hour while the <var>card-only machine</var> requires <param>5</param> rolls of paper per hour. The amusement park needs to be able to process <const_dir>at least</const_dir> <limit>500</limit> people per hour but can use <const_dir>at most</const_dir> <limit>90</limit> rolls of paper per hour. Since most people prefer to pay by cash, the number of <var>card-only machines</var> <const_dir>must not exceed</const_dir> the number of <var>cash-based machines</var>. How many of each machine should be bought to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name> in the park?", "output": "min: \nst: 20 cash-based_machine + 30 card-only_machine >= 500\n     4 cash-based_machine + 5 card-only_machine <= 90\n     card-only_machines <= cash-based_machines"}
{"input": "A city employs <var>seasonal</var> and <var>permanent</var> snow removers. A <var>seasonal snow remover</var> works <param>6</param> hours per shift and gets paid $<param>120</param>. A <var>permanent snow remover</var> works <param>10</param> hours per shift and gets paid $<param>250</param>. Currently the city <const_dir>needs</const_dir> <limit>300</limit> hours of snow remover labor after a heavy snowfall. If the city has a <const_dir>budget</const_dir> of $<limit>6500</limit>, how many of each type of worker should be hired to <obj_dir>minimize</obj_dir> the total <obj_name>number of snow removers</obj_name>?", "output": "min: \nst: 6 seasonal_snow_remover + 10 permanent_snow_remover >= 300\n     120 seasonal_snow_remover + 250 permanent_snow_remover <= 6500"}
{"input": "A cell phone company is building <var>rural</var> and <var>urban</var> factories. A <var>rural factory</var> can make <param>100</param> phones per day and requires <param>8</param> managers. An <var>urban factory</var> can make <param>200</param> phones per day and requires <param>20</param> managers. The company has <const_dir>available</const_dir> <limit>260</limit> managers and must make <const_dir>at least</const_dir> <limit>3000</limit> phones per day. How many of each factory type should be built to <obj_dir>minimize</obj_dir> the total <obj_name>number of factories</obj_name>?", "output": "min: \nst: 8 rural_factory + 20 urban_factory <= 260\n     100 rural_factory + 200 urban_factory >= 3000"}
{"input": "An ice cream store can buy two machines, a <var>counter-top sized</var> one and a <var>fridge sized one</var>, to make ice cream. The <var>counter-top sized</var> one can produce <param>80</param> cones worth of ice cream every day while the <var>fridge sizes one</var> can produce <param>150</param> cones worth of ice cream every day. The <var>counter-top sized</var> machine outputs <param>50</param> units of heat while the <var>fridge sized one</var> outputs <param>70</param> units of heat. The ice cream store can output <const_dir>at most</const_dir> <limit>500</limit> units of heat per day and must produce <const_dir>at least</const_dir> <limit>1000</limit> cones worth of ice cream. How many of each machine should they buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name> needed?", "output": "min: \nst: 50 counter-top_sized + 70 fridge_sized_one <= 500\n     80 counter-top_sized + 150 fridge_sizes_one >= 1000"}
{"input": "There are two specialized containers, a <var>small</var> and <var>large</var> one, that are used to make a pharmaceutical paste. The <var>small container</var> requires <param>10</param> units of water and <param>15</param> units of the powdered pill to make <param>20</param> units of the <obj_name>paste</obj_name>. The <var>large container</var> requires <param>20</param> units of water and <param>20</param> units of the powdered pill to make <param>30</param> units of the <obj_name>paste</obj_name>. The pharmacy has <const_dir>available</const_dir> <limit>500</limit> units of water and <limit>700</limit> units of the powdered pill. How many of each container should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of paste</obj_name> that can be made?", "output": "max: 20 small_container + 30 large_container\nst: 10 small_container + 20 large_container <= 500\n     15 small_container + 20 large_container <= 700"}
{"input": "An oil and gas company <const_dir>operates on</const_dir> <limit>300</limit> acres of land where they use oil wells of <var>small</var> and <var>large</var> size. Per acre of land, a <var>small oil well</var> can produce <param>2</param> barrels of <obj_name>oil</obj_name>. Per acre of land, a <var>large oil well</var> can produce <param>5</param> barrels of <obj_name>oil</obj_name>. However, a <var>small oil well</var> produces <param>10</param> units of pollution and requires <param>5</param> drill bits per acre and a <var>large oil well</var> produces <param>20</param> units of pollution and requires <param>10</param> drill bits per acre. The company has <const_dir>available</const_dir> <limit>2500</limit> drill bits and due to strict environmental laws can produce <const_dir>at most</const_dir> <limit>4500</limit> units of pollution. For how many acres should each oil well be used to <obj_dir>maximize</obj_dir> the <obj_name>total production of oil</obj_name>?", "output": "max: 2 small_oil_well + 5 large_oil_well\nst: 5 small_oil_well + 10 large_oil_well <= 2500\n     10 small_oil_well + 20 large_oil_well <= 4500\n     small_oil_well + large_oil_well <= 300"}
{"input": "A burger chain is buying both <var>gas</var> and <var>electric</var> grills to make burger patties. A <var>gas grill</var> can cook <param>20</param> patties per minute while an <var>electric grill</var> can cook <param>30</param> patties per minute. The <var>gas grill</var> requires <param>20</param> units of cooking oil per minute while the <var>electric grill</var> requires <param>25</param> units of cooking oil per minute. Since the <var>gas grill</var> patties taste better, the number of <var>electric grills</var> must be <const_dir>less than</const_dir> the number of <var>gas grills</var>. Further, the burger chain wants to be able to make <const_dir>at least</const_dir> <limit>150</limit> patties per minute and use <const_dir>at most</const_dir> <limit>140</limit> units of cooking oil per minute. How many of each grill should be bought to <obj_dir>minimize</obj_dir> the total <obj_name>number of grills</obj_name> in the store?", "output": "min: \nst: electric_grills <= gas_grills\n     20 gas_grill + 30 electric_grill >= 150\n     20 gas_grill + 25 electric_grill <= 140"}
{"input": "A clinic employs <var>nurses</var> and <var>pharmacists</var> to deliver shots to patients. A <var>nurse</var> works <param>5</param> hours per shift while a <var>pharmacist</var> works <param>7</param> hours per shift. <var>Nurses</var> are paid $<param>250</param> per shift while <var>pharmacists</var> are paid $<param>300</param> per shift. Currently, the clinic <const_dir>needs</const_dir> <param>200</param> hours of healthcare labor to meet needs. If the firm has a <const_dir>budget</const_dir> of $<limit>9000</limit>, how many of each healthcare worker should be scheduled to <obj_dir>minimize</obj_dir> the total <obj_name>number of workers</obj_name>?", "output": "min: \nst: 5 nurse + 7 pharmacist >= 200\n     250 Nurses + 300 pharmacists <= 9000"}
{"input": "A bank can build <var>small</var> and <var>large branches</var> to serve their customers. A <var>small branch</var> can serve <param>50</param> customers per day and requires <param>10</param> bank tellers. A <var>large branch</var> can serve <param>100</param> customers per day and requires <param>15</param> bank tellers. The bank has <const_dir>available</const_dir> <limit>200</limit> bank tellers and needs to be able to serve <const_dir>at least</const_dir> <limit>1200</limit> customers per day. How many of each branch size should they build to <obj_dir>minimize</obj_dir> the <obj_name>total number of branches</obj_name> needed?", "output": "min: \nst: 10 small_branch + 15 large_branch <= 200\n     50 small_branch + 100 large_branch >= 1200"}
{"input": "A shipping company can purchase <var>regular</var> and <var>hybrid</var> vans to make deliveries. A <var>regular van</var> can deliver <param>500</param> packages per day and produces <param>200</param> units of pollutants. A <var>hybrid van</var> can deliver <param>300</param> packages per day and produces <param>100</param> units of pollutants. Due to a new environmental law, they can produce <const_dir>at most</const_dir> <limit>7000</limit> units of pollutants per day. However, the company needs to be able to deliver <const_dir>at least</const_dir> <limit>20000</limit> packages per day. How many of each type of van should they buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of vans</obj_name> needed?", "output": "min: \nst: 200 regular_van + 100 hybrid_van <= 7000\n     500 regular_van + 300 hybrid_van >= 20000"}
{"input": "In order to make carbon dioxide, wood is burned using two processes, <var>with a catalyst</var> and <var>without a catalyst</var>. The <var>process with a catalyst</var> requires <param>10</param> units of wood and <param>20</param> units of oxygen to make <param>15</param> units of <obj_name>carbon dioxide</obj_name>. The <var>process without a catalyst</var> requires <param>15</param> units of wood and <param>12</param> units of oxygen to make <param>18</param> units of <obj_name>carbon dioxide</obj_name>. There are <limit>300</limit> units of wood and <limit>300</limit> units of oxygen <const_dir>available</const_dir>. How many of each process should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of carbon dioxide</obj_name> produced?", "output": "max: 15 process_with_a_catalyst + 18 process_without_a_catalyst\nst: 10 process_with_a_catalyst + 15 process_without_a_catalyst <= 300\n     20 process_with_a_catalyst + 12 process_without_a_catalyst <= 300"}
{"input": "A tea estate has <const_dir>available</const_dir> <limit>500</limit> acres of land and they need to pick the tea leaves either using a <var>traditional machine</var> or <var>modern machine</var>. For each acre of land, the <var>traditional machine</var> can pick <param>30</param> kg of <obj_name>tea leaves</obj_name>, creates <param>10</param> kg of waste, and requires <param>20</param> liters of fuel. For each acre of land, the <var>modern machine</var> can pick <param>40</param> kg of <obj_name>tea leaves</obj_name>, creates <param>15</param> kg of waste, and requires <param>15</param> liters of fuel. The estate has <const_dir>available</const_dir> <limit>9000</limit> liters of fuel can handle <const_dir>at most</const_dir> <limit>6000</limit> kg of waste. For how many acres should each machine be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of tea leaves</obj_name> that can be picked?", "output": "max: 30 traditional_machine + 40 modern_machine\nst: 20 traditional_machine + 15 modern_machine <= 9000\n     10 traditional_machine + 15 modern_machine <= 6000"}
{"input": "A post office is buying stamping machines and they can buy a <var>dual</var> or <var>single</var> model stamping machine. A <var>dual model stamping</var> machine can stamp <param>50</param> letters per minute while a <var>single model stamping</var> machine can stamp <param>30</param> letters per minute. The <var>dual model stamping</var> machine requires <param>20</param> units of glue per minute while the <var>single model stamping</var> machine requires <param>15</param> units of glue per minute. Since the <var>single model stamping</var> machine is quieter, the number of <var>single model stamping</var> machines must be <const_dir>more than</const_dir> the number of <var>dual model stamping</var> machines. Further, the post office wants to make sure they can stamp <const_dir>at least</const_dir> <limit>300</limit> letters per minute and use <const_dir>at most</const_dir> <limit>135</limit> units of glue per minute. How many of each stamping machine should they purchase to <obj_dir>minimize</obj_dir> the <obj_name>total number of stamping machines</obj_name>?", "output": "min: \nst: single_model_stamping <= dual_model_stamping\n     50 dual_model_stamping + 30 single_model_stamping >= 300\n     20 dual_model_stamping + 15 single_model_stamping <= 135"}
{"input": "A fire department employs <var>regular</var> and <var>emergency fire</var> fighters. A <var>regular fire fighter</var> works <param>10</param> hours per shift and earns $<param>300</param>. An <var>emergency fire fighter</var> works <param>6</param> hours per shift and earns $<param>100</param>. Due to wildfires in the region, the fire department needs <const_dir>at least</const_dir> <limit>300</limit> hours of fire fighter time. If the fire department has a <const_dir>budget</const_dir> of $<limit>7000</limit>, how many of each should the fire department hire to <obj_dir>minimize</obj_dir> the total <obj_name>number of fire fighters</obj_name>?", "output": "min: \nst: 10 regular_fire_fighter + 6 emergency_fire_fighter >= 300\n     300 regular_fire_fighter + 100 emergency_fire_fighter <= 7000"}
{"input": "A hot dog company can build two types of butcher shops, a <var>small shop</var> and a <var>large shop</var>. A <var>small shop</var> can make <param>30</param> hot dogs per day and requires <param>2</param> workers. A <var>large shop</var> can make <param>70</param> hot dogs per day and requires <param>4</param> workers. The company must make <const_dir>at least</const_dir> <limit>500</limit> hot dogs per day but they only have <const_dir>available</const_dir> <limit>30</limit> workers. How many of each butcher shop should the company build to <obj_dir>minimize</obj_dir> the total <obj_name>number of butcher shops</obj_name>?", "output": "min: \nst: 30 small_shop + 70 large_shop >= 500\n     2 small_shop + 4 large_shop <= 30"}
{"input": "An airport buys two types of vehicles, a <var>4-wheeler</var> and <var>3-wheeler,</var> to help move luggage. A <var>4-wheeler vehicle</var> can move <param>60</param> luggage per day and produces <param>30</param> units of pollutant per day. A <var>3-wheeler vehicle</var> can move <param>40</param> luggage per day and produces <param>15</param> units of pollutant per day. The airport needs to be able to move <const_dir>at least</const_dir> <limit>1000</limit> luggage per day. To avoid over-polluting the airport, they can produce <const_dir>at most</const_dir> <limit>430</limit> units of pollutant per day. How many of each vehicle should the airport buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of vehicles</obj_name> needed.", "output": "min: \nst: 60 4-wheeler_vehicle + 40 3-wheeler_vehicle >= 1000\n     30 4-wheeler_vehicle + 15 3-wheeler_vehicle <= 430"}
{"input": "A scientist is conducting two experiments to produce electricity, <var>experiment alpha</var> and <var>experiment beta</var>. In <var>experiment alpha</var>, <param>3</param> units of metal and <param>5</param> units of acid are required to produce <param>8</param> units of <obj_name>electricity</obj_name>. In <var>experiment beta</var>, <param>5</param> units of metal and <param>4</param> units of acid are required to produced <param>10</param> units of <obj_name>electricity</obj_name>. The lab has <limit>800</limit> units of metal and <limit>750</limit> units of acid <const_dir>available</const_dir>. How many of each experiment should the scientist conduct to <obj_dir>maximize</obj_dir> the total <obj_name>amount of electricity</obj_name> produced?", "output": "max: 8 experiment_alpha + 10 experiment_beta\nst: 3 experiment_alpha + 5 experiment_beta <= 800\n     5 experiment_alpha + 4 experiment_beta <= 750"}
{"input": "A man fishes <const_dir>in a</const_dir> <limit>250</limit> acre lake and can catch fish either using a <var>net</var> or <var>fishing line</var>. For each acre of the lake, using a <var>net</var> will catch <param>8</param> <obj_name>fish</obj_name> and requires <param>4</param> units of bait but also causes <param>2</param> units of pain for the fisherman. For each acre of the lake, using a <var>fishing line</var> will catch <param>5</param> <obj_name>fish</obj_name> and requires <param>3</param> units of bait but also causes <param>1</param> unit of pain for the fisherman. The fisherman has <const_dir>available</const_dir> <limit>800</limit> units of bait and can tolerate <const_dir>at most</const_dir> <limit>350</limit> units of pain. For how many acres each should he use each fishing method to <obj_dir>maximize</obj_dir> the <obj_name>amount of fish</obj_name> he can catch?", "output": "max: 8 net + 5 fishing_line\nst: net + fishing_line <= 250\n     4 net + 3 fishing_line <= 800\n     2 net + 1 fishing_line <= 350"}
{"input": "A butcher shop is buying meat slicers for their shop, a <var>manual</var> and <var>automatic</var> slicer. The <var>manual slicer</var> can cut <param>5</param> slices per minute while the <var>automatic slicer</var> can cut <param>8</param> slices per minute. In addition, to make sure all the parts operate smoothly, the <var>manual slicer</var> requires <param>3</param> units of grease per minute while the <var>automatic slicer</var> requires <param>6</param> units of grease per minute. Since the <var>automatic slicer</var> does not need someone to operate it, the number of <var>manual slicers</var> must be <const_dir>less than</const_dir> the number of <var>automatic slicers</var>. In addition, the butcher shop needs to be able to cut <const_dir>at least</const_dir> <limit>50</limit> slices per minute but can use <const_dir>at most</const_dir> <limit>35</limit> units of grease per minute. How many of each slicer should the butcher shop buy to <obj_dir>minimize</obj_dir> <obj_name>the total number of slicers</obj_name> in the shop?", "output": "min: \nst: manual_slicers <= automatic_slicers\n     5 manual_slicer + 8 automatic_slicer >= 50\n     3 manual_slicer + 6 automatic_slicer <= 35"}
{"input": "An accounting firm employs <var>part time workers</var> and <var>full time workers</var>. <var>Full time workers</var> work <param>8</param> hours per shift while <var>part time workers</var> work <param>4</param> hours per shift. In addition, <var>full time workers</var> are paid $<param>300</param> per shift while <var>part time workers</var> are paid $<param>100</param> per shift. Currently, the accounting firm has a project <const_dir>requiring</const_dir> <limit>500</limit> hours of labor. If the firm has a <const_dir>budget</const_dir> of $<limit>15000</limit>, how many of each type of worker should be scheduled to <obj_dir>minimize</obj_dir> the <obj_name>total number of workers</obj_name>.", "output": "min: \nst: 8 Full_time_workers + 4 part_time_workers >= 500\n     300 full_time_workers + 100 part_time_workers <= 15000"}
{"input": "A toy company can build two factory types, a <var>medium sized factory</var> and a <var>small factory</var>. A <var>medium sized factory</var> can make <param>50</param> toys per day and requires <param>3</param> operators. A <var>small factory</var> can make <param>35</param> toys per day and requires <param>2</param> operators. The company must make <const_dir>at least</const_dir> <limit>250</limit> toys per day but they only have <const_dir>available</const_dir> <limit>16</limit> operators. How many of each factory should the company build to <obj_dir>minimize</obj_dir> the total <obj_name>number of factories</obj_name>?", "output": "min: \nst: 50 medium_sized_factory + 35 small_factory >= 250\n     3 medium_sized_factory + 2 small_factory <= 16"}
{"input": "A chemical plant can buy two types of generators, <var>generator A</var> and <var>generator B</var>, which use two different processes to generate hydrogen. <var>Generator A</var> uses an electrolysis process and produces <param>40</param> cubic meters of hydrogen as well as <param>300</param> units of pollutants every day. <var>Generator B</var> uses a fermentation process to produce <param>30</param> cubic meters of hydrogen per day while outputting <param>200</param> units of pollutants. The chemical plant must make a <const_dir>minimum</const_dir> of <limit>1000</limit> cubic meters of hydrogen per day but due to environmental restrictions they can produce <const_dir>at most</const_dir> <limit>3000</limit> units of pollutant. How many of each type of generator should they buy to <obj_dir>minimize</obj_dir> the <obj_name>number of generators</obj_name> needed?", "output": "min: \nst: 40 Generator_A + 30 Generator_B >= 1000\n     300 Generator_A + 200 Generator_B <= 3000"}
{"input": "There are two chemical reactions, <var>chemical reaction A</var> and <var>chemical reaction B.</var> <var>Chemical reaction A</var> requires <param>5</param> units of rare inert gas and <param>6</param> units of treated water to produce <param>10</param> units of a <obj_name>rare compound</obj_name>. <var>Chemical reaction B</var> requires <param>7</param> units of rare inert gas and <param>3</param> units of treater water to produce <param>8</param> units of a <obj_name>rare compound</obj_name>. There are <limit>1000</limit> units of the rare inert gas and <limit>800</limit> units of treated water <const_dir>available</const_dir> in the lab. How many reactions of each type should be done to <obj_dir>maximize</obj_dir> the <obj_name>amount of rare compound</obj_name> produced?", "output": "max: 10 Chemical_reaction_A + 8 Chemical_reaction_B\nst: 5 Chemical_reaction_A + 7 Chemical_reaction_B <= 1000\n     6 Chemical_reaction_A + 3 Chemical_reaction_B <= 800"}
{"input": "A mining company has <const_dir>available</const_dir> a total of <limit>100</limit> square miles of mining sites and considering the use of two mining techniques: <var>heap leaching</var> and <var>vat leaching</var>. For each square mile of land, <var>heap leaching</var> technique can have a daily production of <param>3</param> tons of <obj_name>rare earth oxide</obj_name> per square miles but it also creates <param>8</param> tons of polluted wastewater and requires <param>10</param> extraction machines. On the other hand, <var>vat leaching</var> technique produces <param>5</param> tons of <obj_name>rare earth oxide</obj_name> per square miles per day while creating <param>17</param> tons of polluted wastewater and requiring <param>20</param> extraction machines. There are <limit>100</limit> machines <const_dir>available</const_dir> and due to environmental regulations, the amount of polluted wastewater must be <const_dir>at most</const_dir> <limit>90</limit> tons daily. Find the proportion of lands that use each mining technique in order to <obj_dir>maximize</obj_dir> the daily production of <obj_name>rare earth oxide</obj_name>.", "output": "max: 3 heap_leaching + 5 vat_leaching\nst: 10 heap_leaching + 20 vat_leaching <= 100\n     8 heap_leaching + 17 vat_leaching <= 90\n     heap_leaching + vat_leaching <= 100"}
{"input": "An office is buying printers for their headquarters, a <var>premium model</var> and <var>regular model</var>. The <var>premium model</var> can print <param>30</param> pages per minute while the <var>regular model</var> can print <param>20</param> pages per minute. In addition, the <var>premium model</var> requires <param>4</param> units of ink per minute while the <var>regular model</var> requires <param>3</param> units of ink per minute. The office wants to make sure that <const_dir>at least</const_dir> <limit>200</limit> pages can be printed per minute and that <const_dir>at most</const_dir> <limit>35</limit> units of ink are used per minute.  Since the <var>premium model</var> is more user friendly, the number <var>regular printers</var> must be <const_dir>less than</const_dir> the number of <var>premium printers</var>. How many of each printer should be bought to <obj_dir>minimize</obj_dir> the <obj_name>total number of printers</obj_name> in the office?", "output": "min: \nst: 30 premium_model + 20 regular_model >= 200\n     4 premium_model + 3 regular_model <= 35\n     regular_printers <= premium_printers"}
{"input": "A patient in the hospital can take two pills, <var>Pill 1</var> and <var>Pill 2</var>. Per pill, <var>pill 1</var> provides <param>0.2</param> units of pain medication and <param>0.3</param> units of anxiety medication. Per pill, <var>pill 2</var> provides <param>0.6</param> units of pain medication and <param>0.2</param> units of anxiety medication. In addition, <var>pill 1</var> causes <param>0.3</param> units of <obj_name>discharge</obj_name> while <var>pill 2</var> causes <param>0.1</param> units of <obj_name>discharge</obj_name>. <const_dir>At most</const_dir> <limit>6</limit> units of pain medication can be provided and <const_dir>at least</const_dir> <limit>3</limit> units of anxiety medication must be provided. How many pills of each should the patient be given to <obj_dir>minimize</obj_dir> the total <obj_name>amount of discharge</obj_name>?", "output": "min: 0.3 pill_1 + 0.1 pill_2\nst: 0.2 pill_1 + 0.6 pill_2 <= 6\n     0.3 pill_1 >= 3"}
{"input": "A summer camps does science experiments in two pre filled beakers, <var>beaker 1</var> and <var>beaker 2</var>. <var>Beaker 1</var> uses <param>4</param> units of flour and <param>6</param> units of special liquid to make <param>5</param> units of <obj_name>slime</obj_name>. <var>Beaker 2</var> uses <param>6</param> units of flour and <param>3</param> units of special liquid to make <param>3</param> units of <obj_name>slime</obj_name>.  However, <var>beaker 1</var> creates <param>4</param> units of waste while <var>beaker 2</var> creates <param>2</param> units of waste. The summer camp has <const_dir>available</const_dir> <limit>150</limit> units of flour and <limit>100</limit> units of special liquid. If <const_dir>at most</const_dir> <limit>30</limit> units of waste can be produced, how many of each beaker should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of slime</obj_name> produced?", "output": "max: 5 Beaker_1 + 3 Beaker_2\nst: 4 Beaker_1 + 6 Beaker_2 <= 150\n     6 Beaker_1 + 3 Beaker_2 <= 100\n     4 beaker_1 + 2 beaker_2 <= 30"}
{"input": "A drug company is making allergy pills and fever reducing pills in two factories, <var>factory 1</var> and <var>factory 2</var>. <var>Factory 1</var> produces <param>20</param> allergy pills and <param>15</param> fever reducing pills per hour. <var>Factory 2</var> produces <param>10</param> allergy pills and <param>30</param> fever reducing pills per hour.  <var>Factory 1</var> is much more efficient and only requires <param>20</param> units of a rare compound while <var>factory 2</var> requires <param>30</param> units of a rare compound. The company only has <const_dir>available</const_dir> <limit>1000</limit> units of the rare compound. If the company must make <const_dir>at least</const_dir> <limit>700</limit> allergy pills and <limit>600</limit> fever reducing pills, how many hours should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 20 Factory_1 + 30 factory_2 <= 1000\n     20 Factory_1 + 10 Factory_2 >= 700\n     15 Factory_1 + 30 Factory_2 >= 600"}
{"input": "A pharmaceutical company makes skin cream in batches, a <var>regular batch</var> and <var>premium batch</var>, to sell to hospitals. The <var>regular batch</var> requires <param>50</param> units of medicinal ingredients and <param>40</param> units of rehydration product. A <var>premium batch</var> requires <param>40</param> units of medicinal ingredients and <param>60</param> units of rehydration product. The company has <const_dir>available</const_dir> <limit>3000</limit> units of medicinal ingredients and <limit>3500</limit> units of rehydration product. Since the <var>premium batch</var> sells better, the number of <var>regular batches</var> must be <const_dir>less than</const_dir> the number of <var>premium batches</var>. In addition, the company must make <const_dir>at least</const_dir> <limit>10</limit> <var>regular batches</var>. If a <var>regular batch</var> can treat <param>50</param> <obj_name>people</obj_name> and a <var>premium batch</var> can treat <param>30</param> <obj_name>people</obj_name>, how many of each batch should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 50 regular_batch + 30 premium_batch\nst: 50 regular_batch + 40 premium_batch <= 3000\n     40 regular_batch + 60 premium_batch <= 3500\n     regular_batches <= premium_batches\n     regular_batches >= 10"}
{"input": "A patient with a sore throat can drink two syrups, <var>syrup 1</var> and <var>syrup 2</var> for treatment. Per serving, <var>syrup 1</var> delivers <param>0.5</param> units of medicine to the throat and <param>0.4</param> units of medicine to the lungs. Per serving, <var>syrup 2</var> delivers <param>0.2</param> units of medicine to the throat and <param>0.5</param> units of medicine to the lungs. Furthermore, <var>syrup 1</var> contains <param>0.5</param> units of <obj_name>sugar</obj_name> while <var>syrup 2</var> contains <param>0.3</param> units of <obj_name>sugar</obj_name> per serving. The patient can get <const_dir>at most</const_dir> <limit>5</limit> units of medicine for the throat and <const_dir>at least</const_dir> <limit>4</limit> units of medicine to the lungs. How many servings of each should the patient take to <obj_dir>minimize</obj_dir> his <obj_name>sugar intake</obj_name>?", "output": "min: 0.5 syrup_1 + 0.3 syrup_2\nst: 0.5 syrup_1 + 0.2 syrup_2 <= 5\n     0.4 syrup_1 + 0.5 syrup_2 >= 4"}
{"input": "A science show preforms two different demonstrations, <var>demonstration 1</var> and <var>demonstration 2</var>. In <var>demonstration 1</var>, <param>10</param> units of mint and <param>20</param> units of the active ingredient is used to make <param>25</param> units of <obj_name>minty foam</obj_name>. In <var>demonstration 2</var>, <param>12</param> units of mint and <param>15</param> units of the active ingredient is used to make <param>18</param> units of <obj_name>minty foam</obj_name>. In addition, <var>demonstration 1</var> creates <param>5</param> units of black tar while <var>demonstration 2</var> creates <param>3</param> units of black tar. The show has <const_dir>available</const_dir> <limit>120</limit> units of mint and <limit>100</limit> units of active ingredients. If <const_dir>at most</const_dir> <limit>50</limit> units of black tar can be produced, how many of each demonstration should be done to <obj_dir>maximize</obj_dir> the <obj_name>amount of minty foam</obj_name> produced?", "output": "max: 25 demonstration_1 + 18 demonstration_2\nst: 10 demonstration_1 + 12 demonstration_2 <= 120\n     20 demonstration_1 + 15 demonstration_2 <= 100\n     5 demonstration_1 + 3 demonstration_2 <= 50"}
{"input": "A pharmacy has two factories, <var>factory 1</var> and <var>factory 2</var>, where they make acne cream and anti-bacterial cream. <var>Factory 1</var> produces <param>12</param> units of acne cream and <param>15</param> units of anti-bacterial cream per hour. <var>Factory 2</var> produces <param>20</param> units of acne cream and <param>10</param> units of anti-bacterial cream per hour. <var>Factory 1</var> requires <param>30</param> units of base gel per hour while <var>factory 2</var> requires <param>45</param> units of base gel per hour. The pharmacy has <const_dir>available</const_dir> <limit>5000</limit> units of base gel. Further, they must make <const_dir>at least</const_dir> <limit>800</limit> units of acne cream and <limit>1000</limit> units of anti-bacterial cream. How many hours should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 30 Factory_1 + 45 factory_2 <= 5000\n     12 Factory_1 + 20 Factory_2 >= 800\n     15 Factory_1 + 10 Factory_2 >= 1000"}
{"input": "A clinic makes batches of <var>vitamin shots</var> and <var>pills</var>. Each batch of <var>vitamin shots</var> requires <param>30</param> units of vitamin C and <param>40</param> units of vitamin D. Each batch of <var>vitamin pills</var> requires <param>50</param> units of vitamin C and <param>30</param> units of vitamin D. Since pills are more popular, the number of batches of <var>vitamin pills</var> must be <const_dir>larger than</const_dir> the number of batches of <var>vitamin shots</var>. Further, the clinic can make <const_dir>at most</const_dir> <limit>10</limit> batches of <var>vitamin shots</var>. The clinic has <const_dir>available</const_dir> <limit>1200</limit> units of vitamin C and <limit>1500</limit> units of vitamin D. If each batch of <var>vitamin shots</var> can supply <param>10</param> <obj_name>people</obj_name> and each batch of <var>vitamin pills</var> can supply <param>7</param> <obj_name>people</obj_name>, how many batches of each should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be supplied?", "output": "max: 10 vitamin_shots + 7 vitamin_pills\nst: vitamin_pills <= vitamin_shots\n     vitamin_shots <= 10\n     30 vitamin_shots + 50 vitamin_pills <= 1200\n     40 vitamin_shots + 30 vitamin_pills <= 1500"}
{"input": "A patient can be hooked up to two machines to have medicine delivered, <var>machine 1</var> and <var>machine 2</var>. <var>Machine 1</var> delivers <param>0.5</param> units of medicine to the heart per minute and <param>0.8</param> units of medicine per minute to the brain. <var>Machine 2</var> delivers <param>0.3</param> units of medicine per minute to the heart and <param>1</param> unit of medicine per minute to the brain. In addition however, <var>machine 1</var> creates <param>0.3</param> units of <obj_name>waste</obj_name> per minute while <var>machine 2</var> creates <param>0.5</param> units of <obj_name>waste</obj_name> per minute. If <const_dir>at most</const_dir> <limit>8</limit> units of medicine can be received by the heart and <const_dir>at least</const_dir> <limit>4</limit> units of medicine should be received by the brain, how many minutes should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>total amount of waste</obj_name> produced?", "output": "min: 0.3 machine_1 + 0.5 machine_2\nst: 0.5 Machine_1 + 0.3 Machine_2 <= 8\n     0.8 Machine_1 + 1 Machine_2 >= 4"}
{"input": "A science store makes two boxes, a <var>cheap</var> and <var>expensive box</var>. The <var>cheap box</var> contains <param>3</param> units of metal and <param>5</param> units of acid which can be mixed to create <param>8</param> units of <obj_name>foam</obj_name>. The <var>expensive box</var> contains <param>5</param> units of metal and <param>8</param> units of acid which can be mixed to create <param>10</param> units of <obj_name>foam</obj_name>. The <var>cheap box</var> however gives off <param>2</param> units of heat while the <var>expensive box</var> gives off <param>3</param> units of heat. The science store has <const_dir>available</const_dir> <limit>200</limit> units of metal and <limit>300</limit> units of acid. If <const_dir>at most</const_dir> <limit>50</limit> units of heat can be given off, how many of each box should the store make to <obj_dir>maximize</obj_dir> the <obj_name>amount of foam</obj_name> produced?", "output": "max: 8 cheap_box + 10 expensive_box\nst: 3 cheap_box + 5 expensive_box <= 200\n     5 cheap_box + 8 expensive_box <= 300\n     2 cheap_box + 3 expensive_box <= 50"}
{"input": "A pharmacy makes eye cream and foot cream using two different machines, <var>machine 1</var> and <var>machine 2</var>. <var>Machine 1</var> can  make <param>30</param> ml of eye cream and <param>60</param> ml of foot cream per hour. <var>Machine 2</var> can make <param>45</param> ml of eye cream and <param>30</param> ml of foot cream per hour. Furthermore, <var>machine 1</var> requires <param>20</param> ml of distilled water per hour while <var>machine 2</var> requires <param>15</param> ml of distilled water per hour. The pharmacy has <const_dir>available</const_dir> <limit>1200</limit> ml of distilled water. If the pharmacy needs to make <const_dir>at least</const_dir> <limit>1300</limit> ml of eye cream and <limit>1500</limit> ml of foot cream, how many hours should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 20 machine_1 + 15 machine_2 <= 1200\n     30 Machine_1 + 45 Machine_2 >= 1300\n     60 Machine_1 + 30 Machine_2 >= 1500"}
{"input": "A company make both <var>liquid</var> and <var>foam hand sanitizer</var>. <var>Liquid hand sanitizer</var> requires <param>40</param> units of water and <param>50</param> units of alcohol. <var>Foam hand sanitizer</var> requires <param>60</param> units of water and <param>40</param> units of alcohol. The company has <const_dir>available</const_dir> <limit>2000</limit> units of water and <limit>2100</limit> units of alcohol. The number of <var>foam hand sanitizers</var> made <const_dir>must exceed</const_dir> the number of <var>liquid hand sanitizers</var>. In addition, <const_dir>at most</const_dir> <limit>30</limit> <var>liquid hand sanitizers</var> can be made. If each <var>liquid hand sanitizer</var> can clean <param>30</param> <obj_name>hands</obj_name> and each <var>foam hand sanitizer</var> can clean <param>20</param> <obj_name>hands</obj_name>, how many of each should the company make to <obj_dir>maximize</obj_dir> the <obj_name>number of hands</obj_name> that can be cleaned?", "output": "max: 30 liquid_hand_sanitizer + 20 foam_hand_sanitizer\nst: 40 Liquid_hand_sanitizer + 60 Foam_hand_sanitizer <= 2000\n     50 Liquid_hand_sanitizer + 40 Foam_hand_sanitizer <= 2100\n     foam_hand_sanitizers <= liquid_hand_sanitizers\n     liquid_hand_sanitizers <= 30"}
{"input": "A patient in the hospital can take two different pain killers, <var>pain killer 1</var> and <var>pain killer 2</var>. Per dose, <var>pain killer 1</var> delivers <param>0.5</param> units of medicine to the legs and <param>0.8</param> units of medicine to the <obj_name>back</obj_name>. Per dose, <var>pain killer 2</var> delivers <param>0.7</param> units of medicine to the legs and <param>0.4</param> units of medicine to the <obj_name>back</obj_name>. In, addition <var>pain killer 1</var> deliver <param>0.3</param> units of sleeping medicine and <var>pain killer 2</var> delivers <param>0.6</param> units of sleeping medicine. <const_dir>At most</const_dir> <limit>8</limit> units of sleep medicine should be delivered and <const_dir>at least</const_dir> <limit>4</limit> units of medicine should be delivered to the legs. How many doses of each should be taken to <obj_dir>maximize</obj_dir> the <obj_name>amount of medicine delivered to the back</obj_name>?", "output": "max: 0.8 pain_killer_1 + 0.4 pain_killer_2\nst: 0.3 pain_killer_1 + 0.6 pain_killer_2 <= 8\n     0.5 pain_killer_1 + 0.7 pain_killer_2 >= 4"}
{"input": "In a science club, there are two tables that can be set up to make slime. At <var>table 1</var>, <param>3</param> units of powder and <param>5</param> units of glue are used to make <param>4</param> units of <obj_name>slime</obj_name>. At <var>table 2</var>, <param>8</param> units of powder and <param>6</param> units of glue are used to make <param>5</param> units of <obj_name>slime</obj_name>. However, <var>table 1</var> produces <param>2</param> units of mess while <var>table 2</var> produces <param>4</param> units of mess. The science club has <const_dir>available</const_dir> <limit>100</limit> units of powder and <limit>90</limit> units of glue.  If <const_dir>at most</const_dir> <limit>30</limit> units of mess can be made, how many of each table should be set up to <obj_dir>maximize</obj_dir> the <obj_name>amount of slime</obj_name> produced?", "output": "max: 4 table_1 + 5 table_2\nst: 3 table_1 + 8 table_2 <= 100\n     5 table_1 + 6 table_2 <= 90\n     2 table_1 + 4 table_2 <= 30"}
{"input": "A pharmaceutical company has two labs, <var>lab 1</var> and <var>lab 2</var>, where they make heart and lung medication in pill form. At <var>lab 1</var>, they can produce <param>20</param> heart medication pills and <param>30</param> lung medication pills per hour. At <var>lab 2</var>, they can produce <param>30</param> heart medication pills and <param>40</param> lung medication pills per hour. Each session at <var>lab 1</var> requires <param>3</param> hours of worker labor while each session at <var>lab 2</var> requires <param>5</param> hours of worker labor. The company has <limit>1500</limit> worker hours <const_dir>available</const_dir> and must make <const_dir>at least</const_dir> <limit>20000</limit> heart medication pills and <const_dir>at least</const_dir> <limit>30000</limit> lung medication pills. How many hours at each lab should be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 3 lab_1 + 5 lab_2 <= 1500\n     20 lab_1 + 30 lab_2 >= 20000\n     30 lab_1 + 40 lab_2 >= 30000"}
{"input": "A university research lab can make two types of diabetes medicine, <var>medicine A</var> and <var>medicine B.</var> Per dose, <var>medicine A</var> takes <param>30</param> units of imported material and <param>50</param> units of mRNA to make. Per dose, <var>medicine B</var> takes <param>40</param> units of imported material and <param>30</param> units of mRNA to take. The lab has available <const_dir>at most</const_dir> <limit>300</limit> units of imported material and <limit>400</limit> units of mRNA. The lab can make <const_dir>at most</const_dir> <limit>5</limit> doses of <var>medicine A</var> and the number of doses of <var>medicine B</var> must be <const_dir>larger than</const_dir> the number of dosed of <var>medicine A.</var> If one dose of <var>medicine A</var> can treat <param>12</param> <obj_name>people</obj_name> and one dose of <var>medicine B</var> can treat <param>8</param> <obj_name>people</obj_name>, how many doses of each should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 12 medicine_A + 8 medicine_B\nst: 30 medicine_A + 40 medicine_B <= 300\n     50 medicine_A + 30 medicine_B <= 400\n     medicine_A <= 5\n     medicine_B <= medicine_A."}
{"input": "A patient is undergoing radiation treatment involving two beams, <var>Beam 1</var> and <var>Beam 2</var>. <var>Beam 1</var> delivers a dose of <param>0.3</param> units of medicine per minute to the benign area of the <obj_name>pancreas</obj_name> and <param>0.2</param> units of medicine per minute to the benign area of the skin. <var>Beam 2</var> delivers <param>0.2</param> units of medicine per minute to the benign area of the <obj_name>pancreas</obj_name> and <param>0.1</param> units of medicine per minute to the benign area of the skin.  In addition, <var>beam 1</var> delivers <param>0.6</param> units of medicine per minute to the tumor and <var>beam 2</var> delivers <param>0.4</param> units of medicine per minute to the tumor. <const_dir>At most</const_dir> <limit>4</limit> units of medicine should be received by the skin and <const_dir>at least</const_dir> <limit>3</limit> units of medicine should be delivered to the tumor.  How many minutes of each beam should be used to <obj_dir>minimize</obj_dir> the <obj_name>total radiation received by the pancreas</obj_name>?", "output": "min: 0.3 Beam_1 + 0.2 Beam_2\nst: 0.2 Beam_1 + 0.1 Beam_2 <= 4\n     0.6 beam_1 + 0.4 beam_2 >= 3"}
{"input": "A chemistry teacher teaches her students two experiments, <var>experiment 1</var> and <var>experiment 2</var>. In <var>experiment 1</var>, <param>3</param> units of the red liquid and <param>4</param> units of the blue liquid mix to create <param>5</param> units of <obj_name>green gas</obj_name>. In <var>experiment 2</var>, <param>5</param> units of the red liquid and <param>3</param> units of the blue liquid mix to create <param>6</param> units of the <obj_name>green gas</obj_name>. In addition, <var>experiment 1</var> produces <param>1</param> units of smelly gas while <var>experiment 2</var> produces <param>2</param> units of smelly gas.  The lab has <const_dir>available</const_dir> <limit>80</limit> units of red liquid and <limit>70</limit> units of blue liquid. If <const_dir>at most</const_dir> <limit>10</limit> units of smelly gas can be produced, how many experiments of each should be done to <obj_dir>maximize</obj_dir> the total <obj_name>amount of green gas</obj_name> produced?", "output": "max: 5 experiment_1 + 6 experiment_2\nst: 3 experiment_1 + 5 experiment_2 <= 80\n     4 experiment_1 + 3 experiment_2 <= 70\n     1 experiment_1 + 2 experiment_2 <= 10"}
{"input": "A drug company is making pain killers and sleeping pills using two processes, <var>process 1</var> and <var>process 2</var>. <var>Process 1</var> produces <param>35</param> units of pain killers and <param>12</param> units of sleeping pills per hour. <var>Process 2</var> produces <param>50</param> units of pain killers and <param>30</param> units of sleeping pills per hour. <var>Process 1</var> requires <param>50</param> units of preliminary material while <var>process 2</var> requires <param>60</param> units of preliminary material. The drug company has <const_dir>available</const_dir> <limit>2000</limit> units of preliminary material and must make <const_dir>at least</const_dir> <limit>1200</limit> units of pain killers and <limit>1200</limit> units of sleeping pills. How many of each process should be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 50 Process_1 + 60 process_2 <= 2000\n     35 Process_1 + 50 Process_2 >= 1200\n     12 Process_1 + 30 Process_2 >= 1200"}
{"input": "An engineering school has a bridge building competition where students must build as many <var>beam bridges</var> and <var>truss bridges</var> as they can using Popsicle sticks and glue. A <var>beam bridge</var> requires <param>30</param> Popsicle sticks and <param>5</param> units of glue while a <var>truss bridge</var> requires <param>50</param> Popsicle sticks and <param>8</param> units of glue. Each team has <const_dir>at most</const_dir> <limit>600</limit> Popsicle sticks and <limit>100</limit> units of glue. In addition, each team can build <const_dir>at most</const_dir> <limit>5</limit> <var>truss bridges</var> and the number of <var>beam bridges</var> <const_dir>must be larger</const_dir> than the number of <var>truss bridges</var>. If a <var>beam bridge</var> can hold <param>40</param> <obj_name>grams</obj_name> and a <var>truss bridge</var> can hold <param>60</param> <obj_name>grams</obj_name>, how many of each bridge should a team build to <obj_dir>maximize</obj_dir> the <obj_name>total mass</obj_name> that can be supported?", "output": "max: 40 beam_bridge + 60 truss_bridge\nst: 30 beam_bridge + 50 truss_bridge <= 600\n     5 beam_bridge + 8 truss_bridge <= 100\n     truss_bridges <= 5\n     beam_bridges <= truss_bridges"}
{"input": "A chocolate company can transport their boxes of chocolate either using their own <var>vans</var> or by renting <var>trucks</var>. Their <var>vans</var> can transport <param>50</param> boxes per trip while a <var>truck</var> can transport <param>80</param> boxes per trip. Since they own their <var>vans</var>, the cost per <var>van</var> trip is $<param>30</param> while the cost per <var>truck</var> trip is $<param>50</param>. The company needs to transport <const_dir>at least</const_dir> <limit>1500</limit> boxes of chocolate and they have a <const_dir>budget</const_dir> of $<limit>1000</limit>. Since the <var>vans</var> also provide advertising, the number of trips by <var>van</var> <const_dir>must be larger than</const_dir> the number of trips by <var>trucks</var>. How many of trip by each should be done to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst: 50 vans + 80 truck >= 1500\n     30 van + 50 truck <= 1000\n     van <= trucks"}
{"input": "A soda company sends bottles of their soda to stores around the city in <var>old</var> and <var>new vans</var>. An <var>old van</var> can take <param>100</param> soda bottles while a <var>new van</var> can take <param>80</param> soda bottles. An <var>old van</var> produces <param>50</param> units of <obj_name>pollution</obj_name> while a <var>new van</var> only produces <param>30</param> units of <obj_name>pollution</obj_name>. The company needs to send <const_dir>at least</const_dir> <limit>5000</limit> bottles. In addition, <const_dir>at most</const_dir> <limit>30</limit> <var>new vans</var> can be used. How many of each van should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 50 old_van + 30 new_van\nst: 100 old_van + 80 new_van >= 5000\n     new_vans <= 30"}
{"input": "A shoe company supplies shoes to stores via <var>vans</var> and <var>trucks</var>. A <var>van</var> can transport <param>50</param> pairs of shoes while a <var>truck</var> can transport <param>100</param> pairs of shoes. The company must supply a <const_dir>minimum</const_dir> of <limit>2000</limit> pairs of shoes around the city. Since most stores are small, the number of <var>trucks</var> used <const_dir>cannot exceed</const_dir> the number of <var>vans</var> used.  Find the <obj_dir>minimum</obj_dir> <obj_name>number of vans</obj_name> that can be used?", "output": "min: \nst: 50 van + 100 truck >= 2000\n     trucks <= vans"}
{"input": "A meat shop ships their burger patties using refrigerated <var>trucks</var> and <var>vans</var>. Each <var>truck</var> can take <param>1000</param> patties at a cost of $<param>300</param> per trip. Each <var>van</var> can take <param>500</param> patties at a cost of $<param>100</param> per trip. Because the <var>trucks</var> have difficulty moving around in the city, the number of <var>trucks</var> <const_dir>must not exceed</const_dir> the number of <var>vans</var>. The meat shop has to ship <const_dir>at least</const_dir> <limit>50000</limit> patties and they have a <const_dir>budget</const_dir> of $<limit>12500</limit>. How should they plan their shipment to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst: trucks <= vans\n     1000 truck + 500 van >= 50000\n     300 truck + 100 van <= 12500"}
{"input": "A farmer decides to move his cows to a nearby farm using <var>helicopters</var> and <var>trucks</var>. A <var>helicopter</var> can take <param>3</param> cows per trip and creates <param>5</param> units of <obj_name>pollution</obj_name>. A <var>truck</var> can take <param>7</param> cows per trip and creates <param>10</param> units of <obj_name>pollution</obj_name>. The farmer <const_dir>needs to transport</const_dir> <limit>80</limit> cows and he only has enough money for <const_dir>at most</const_dir> <limit>8</limit> <var>truck</var> trips. How many of each type of trip should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 5 helicopter + 10 truck\nst: 3 helicopter + 7 truck >= 80\n     truck <= 8"}
{"input": "A car manufacturer ships their cars on <var>large</var> and <var>small</var> planes. A <var>large plane</var> can carry <param>30</param> cars while a <var>small plane</var> can carry <param>10</param> cars. Since <var>large planes</var> cause more pollution, the number of <var>large planes</var> must be <const_dir>less than</const_dir> the number of <var>small planes</var>. If the manufacturer wants to deliver <const_dir>at least</const_dir> <limit>300</limit> cars, find the <obj_dir>minimum</obj_dir> <obj_name>number of planes</obj_name> that can be used.", "output": "min: \nst: large_planes <= small_planes\n     30 large_plane + 10 small_plane >= 300"}
{"input": "A company in the middle east delivers their packages to customers on <var>camels</var> and <var>horses</var>. A <var>camel</var> can carry <param>50</param> packages while a <var>horse</var> can carry <param>60</param> packages. A <var>camel</var> requires <param>20</param> units of food while a <var>horse</var> requires <param>30</param> units of food. The company needs to deliver <const_dir>at least</const_dir> <limit>1000</limit> packages and they have <limit>450</limit> units of food <const_dir>available</const_dir>. Since <var>horses</var> are not as suited for the hot climate, the number of <var>horses</var> <const_dir>cannot exceed</const_dir> the number of <var>camels</var>. How many of each animal should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of animals</obj_name>?", "output": "min: \nst: 50 camel + 60 horse >= 1000\n     20 camel + 30 horse <= 450\n     horses <= camels"}
{"input": "Children can go to school either by <var>van</var> or by <var>minibus</var>. A <var>van</var> can take <param>6</param> kids and produces <param>7</param> units of <obj_name>pollution</obj_name>. A <var>minibus</var> can take <param>10</param> kids and produced <param>10</param> units of <obj_name>pollution</obj_name>. There are <const_dir>at least</const_dir> <limit>150</limit> kids than need to go to school and <const_dir>at most</const_dir> <limit>10</limit> <var>minibuses</var> can be used. In addition, the number of <var>vans</var> used <const_dir>must exceed</const_dir> the number of <var>minibuses</var>. How many of each should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 7 van + 10 minibus\nst: 6 van + 10 minibus >= 150\n     minibuses <= 10\n     vans <= minibuses"}
{"input": "A jam company sends its product out in <var>small</var> and <var>large</var> jars. A <var>small jar</var> can hold <param>50</param> ml of jam while a <var>large jar</var> can hold <param>200</param> ml of jam. Most store prefer the smaller size and so the number of <var>large jars</var> <const_dir>cannot exceed</const_dir> the number of <var>small jars</var>. If the company wants to ship <const_dir>at least</const_dir> <limit>100000</limit> ml of jam, find the <obj_dir>minimum</obj_dir> <obj_name>number of jars</obj_name> that can be used.", "output": "min: \nst: large_jars <= small_jars\n     50 small_jar + 200 large_jar >= 100000"}
{"input": "An industrial tire company delivers large tires for equipment to remote engineering sites either by <var>cargo planes</var> or <var>ultrawide trucks</var>. Each <var>cargo plane</var> can transport <param>10</param> tires per trip and costs $<param>1000</param>. Each <var>ultrawide truck</var> can transport <param>6</param> tires per trip and costs $<param>700</param>. The company needs to transport <const_dir>at least</const_dir> <limit>200</limit> tires and has <const_dir>available</const_dir> $<limit>22000</limit>. Because most remote sites don't have proper airports, the number of <var>plane</var> trips <const_dir>cannot exceed</const_dir> the number of <var>ultrawide truck</var> trips. How many trips of each should be done to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst: 10 cargo_plane + 6 ultrawide_truck >= 200\n     1000 cargo_plane + 700 ultrawide_truck <= 22000\n     plane <= ultrawide_truck"}
{"input": "A tourist spot in the mountains allows visitors to travel to the top either by <var>hot-air balloon</var> or <var>gondola lift</var>. A <var>hot air balloon</var> can carry <param>4</param> visitors while a <var>gondola lift</var> can carry <param>6</param> visitors. Each <var>hot air balloon</var> produces <param>10</param> units of <obj_name>pollution</obj_name> while each <var>gondola lift</var> produces <param>15</param> units of <obj_name>pollution</obj_name>. There can be <const_dir>at most</const_dir> <limit>10</limit> <var>hot-air balloon</var> rides and <const_dir>at least</const_dir> <limit>70</limit> visitors need to be transported. How many of each type of transport method should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>pollution</obj_name> produced?", "output": "min: 10 hot_air_balloon + 15 gondola_lift\nst: hot-air_balloon <= 10\n     4 hot_air_balloon + 6 gondola_lift >= 70"}
{"input": "A chemical company is transporting their hydrogen using two different methods, <var>high pressure tube</var> trailers and <var>liquefied hydrogen tankers</var>. The first method is a <var>high-pressure tube</var> trailer which can transport <param>50</param> cubic meters each per trip at a cost of $<param>500</param>. The second method is using <var>liquefied hydrogen tankers</var> which can transport <param>30</param> cubic meters each per trip at a cost of $<param>200</param>. The company needs to transport <const_dir>at least</const_dir> <limit>1000</limit> cubic meters of hydrogen and they have <const_dir>budget</const_dir> of $<limit>3750</limit> available. In addition, the number of transports done by the <var>high pressure tube trailer</var> method has to be <const_dir>less than</const_dir> the number of transports done by the <var>liquefied hydrogen tanker</var> method. How many of each transportation method should they use to <obj_dir>minimize</obj_dir> the <obj_name>total number of trips</obj_name>?", "output": "min: \nst: 50 high-pressure_tube + 30 liquefied_hydrogen_tankers >= 1000\n     500 high-pressure_tube + 200 liquefied_hydrogen_tankers <= 3750\n     high_pressure_tube_trailer <= liquefied_hydrogen_tanker"}
{"input": "Employees have the option of <var>car</var>-pooling to work or taking the company <var>bus</var>. A <var>car</var> can take <param>4</param> employees and produces <param>10</param> units of <obj_name>pollution</obj_name>, while a <var>bus</var> can take <param>20</param> employees and produces <param>30</param> units of <obj_name>pollution</obj_name>. <const_dir>At least</const_dir> <limit>300</limit> employees need to be transported and <const_dir>at most</const_dir> <limit>4</limit> <var>buses</var> can be used. How many of each type of transport should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>pollution</obj_name> produced.", "output": "min: 10 car + 30 bus\nst: 4 car + 20 bus >= 300\n     buses <= 4"}
{"input": "An international shipping company uses <var>large</var> and <var>small ships</var> to transport containers around the world. A <var>large ship</var> can carry <param>500</param> containers while a <var>small ship</var> can carry <param>200</param> containers. Because most ports are small, the number of <var>large ships</var> <const_dir>cannot exceed</const_dir> the number of <var>small ships</var>. If the company is under contract needs to transport <const_dir>at least</const_dir> <limit>3000</limit> containers, find the <obj_dir>minimum</obj_dir> <obj_name>number of ships</obj_name> that can be used.", "output": "min: \nst: large_ships <= small_ships\n     500 large_ship + 200 small_ship >= 3000"}
{"input": "A car manufacturing company makes <var>hamburgers</var> and <var>chicken wraps</var> for workers. They need to ensure workers get <const_dir>at least</const_dir> <limit>2200</limit> calories, <limit>50</limit> grams of protein, and <limit>70</limit> grams of carbs. One <var>hamburger</var> <obj_name>costs</obj_name> $<param>6.5</param> and contains <param>800</param> calories, <param>19</param> grams of protein, and <param>20</param> grams of carbs. One <var>chicken wrap</var> <obj_name>costs</obj_name> $<param>4</param> and contains <param>450</param> calories, <param>12</param> grams of protein, and <param>10</param> grams of carbs. What is the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> diet that the company can provide for its workers?", "output": "min: 6.5 hamburger + 4 chicken_wrap\nst: 800 hamburger + 450 chicken_wrap >= 2200\n     12 chicken_wrap + 19 hamburger >= 50\n     10 chicken_wrap + 20 hamburger >= 70"}
{"input": "A meat processing plant uses two machines, a meat slicer and a meat packer, to make their <var>hams</var> and <var>pork ribs</var>. To produce one batch of <var>hams</var> requires <param>4</param> hours on the meat slicer and <param>2.5</param> hours on the meat packer. To produce one batch of <var>pork ribs</var> requires <param>2</param> hours on the meat slicer and <param>3.5</param> hours on the meat packer. Each machine runs for <const_dir>at most</const_dir> <limit>4000</limit> hours per year. If the <obj_name>profit</obj_name> per batch of <var>hams</var> is $<param>150</param> and the <obj_name>profit</obj_name> per batch of <var>pork ribs</var> is $<param>300</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 hams + 300 pork_ribs\nst: 4 hams + 2 pork_ribs <= 4000\n     2.5 hams + 3.5 pork_ribs <= 4000"}
{"input": "An appliance company sells and installs <var>refrigerators</var> and <var>stoves</var>. Each <var>refrigerator</var> takes <param>60</param> minutes of mover time and <param>20</param> minutes of setup time. Each <var>stove</var> takes <param>45</param> minutes of mover time and <param>25</param> minutes of setup time. The company has <const_dir>available</const_dir> <limit>20000</limit> minutes of mover time and <limit>13000</limit> minutes of setup time. If the <obj_name>profit</obj_name> per <var>refrigerator</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>stove</var> is $<param>260</param>, how many of each should they sell in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 260 stove + 400 refrigerator\nst: 60 refrigerator + 45 stove <= 20000\n     20 refrigerator + 25 stove <= 13000"}
{"input": "An office company makes <var>desks</var> and <var>drawers</var>. Each <var>desk</var> requires <param>40</param> minutes of assembly and <param>20</param> minutes of sanding. Each <var>drawer</var> requires <param>30</param> minutes of assembly and <param>10</param> minutes of sanding. The company has <const_dir>available</const_dir> <limit>4000</limit> minutes for assembly and <limit>3500</limit> minutes for sanding. If the <obj_name>profit</obj_name> per <var>desk</var> is $<param>100</param> and the <obj_name>profit</obj_name> per <var>drawer</var> is $<param>90</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 desk + 90 drawer\nst: 40 desk + 30 drawer <= 4000\n     20 desk + 10 drawer <= 3500"}
{"input": "A milk tea shop owner would like to sell two different milk teas: <var>black milk tea</var> and <var>matcha milk tea</var>. Each contains both milk and honey. A bottle of <var>black milk tea</var> contains <param>600</param> grams of milk and <param>10</param> grams of honey, whereas a bottle of <var>matcha milk tea</var> contains <param>525</param> grams of milk and <param>5</param> grams of honey. The <obj_name>profit</obj_name> from each bottle of <var>black milk tea</var> sold is $<param>7.5</param> and the <obj_name>profit</obj_name> from each bottle of <var>matcha milk tea</var> sold is $<param>5</param>. If his total production must not exceed his <const_dir>available</const_dir> stock of <limit>30000</limit> grams of milk and <limit>500</limit> grams of honey, how many bottles of each type of milk tea should be made to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 5 matcha_milk_tea + 7.5 black_milk_tea\nst: 600 black_milk_tea + 525 matcha_milk_tea <= 30000\n     10 black_milk_tea + 5 matcha_milk_tea <= 500"}
{"input": "A young boy is trying to grow taller by drinking <var>milk</var> and eating <var>vegetables</var>. He wants to get a <const_dir>minimum</const_dir> of <limit>100</limit> units of calcium and <limit>50</limit> units of iron per day. A glass of <var>milk</var> <obj_name>costs</obj_name> $<param>1</param> and contains <param>40</param> units of calcium and <param>25</param> units of iron. A plate of <var>vegetables</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>15</param> units of calcium and <param>30</param> units of iron. How many of each should he consume to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 1 milk + 2 vegetables\nst: 40 milk + 15 vegetables >= 100\n     25 milk + 30 vegetables >= 50"}
{"input": "Bob wants to design a diet consisting of <var>protein bars</var> and <var>noodles</var>. Assume that each serving of <var>noodles</var> <obj_name>costs</obj_name> $<param>5</param> and contains <param>600</param> calories and <param>1.5</param> grams of protein. Assume that each serving of <var>protein bar</var> <obj_name>costs</obj_name> $<param>2.5</param> and contains <param>250</param> calories and <param>5</param> grams of protein. He's interested in spending as little money as possible but he wants to ensure that his meals have <const_dir>at least</const_dir> <limit>2000</limit> calories and <const_dir>at least</const_dir> <limit>16</limit> grams of protein per day. Formulate a linear programming problem that will help <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of the diet.", "output": "min: 5 noodles + 2.5 protein_bar\nst: 600 noodles + 250 protein_bar >= 2000\n     1.5 noodles + 5 protein_bar >= 16"}
{"input": "Forest Paper makes two types of products: <var>graph paper</var> and <var>music paper</var>. Each type of paper requires the use of two machines, a printing machine and a scanning machine. It takes <param>3</param> minutes on the printing machine and <param>5.5</param> minutes on the scanning machine to make a ream of <var>graph paper</var>. On the other hand, it takes <param>1.5</param> minutes on the printing machine and <param>3</param> minutes on the scanning machine to make a ream of <var>music paper</var>. Each machine is available for a <const_dir>maximum</const_dir> of <limit>350</limit> minutes per day. The company sells a package of <var>graph paper</var> at a <obj_name>profit</obj_name> of $<param>4</param> and a package of <var>music paper</var> at a <obj_name>profit</obj_name> of $<param>2.5</param>. The company can sell all the paper it makes. How many reams of each type should the company produce in a day in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is that profit?", "output": "max: 4 graph_paper + 2.5 music_paper\nst: 3 graph_paper + 1.5 music_paper <= 350\n     5.5 graph_paper + 3 music_paper <= 350"}
{"input": "Calcium and Magnesium are found in two health supplements, <var>health supplement A</var> and <var>health supplement B.</var> One serving of <var>health supplement A</var> contains <param>30</param> grams of Calcium and <param>50</param> grams of Magnesium. One serving of <var>health supplement B</var> contains <param>60</param> grams of Calcium and <param>10</param> grams of Magnesium. The <obj_name>cost</obj_name> per health supplement for <var>health supplement A</var> is $<param>14</param> and the <obj_name>cost</obj_name> per health supplement for <var>health supplement B</var> is $<param>25</param>. A patient must consume these two health supplements every day to get <const_dir>at least</const_dir> <limit>400</limit> grams of Calcium and <limit>50</limit> grams of Magnesium. Determine how much servings of each supplement the patient needs to <obj_dir>minimize</obj_dir> her daily <obj_name>cost</obj_name>.", "output": "min: 14 health_supplement_A + 25 health_supplement_B\nst: 30 health_supplement_A + 60 health_supplement_B >= 400\n     50 health_supplement_A + 10 health_supplement_B >= 50"}
{"input": "Lucy has a dog and she wants his food to be mixed.  In order to keep the dog healthy but also keep the food tasty, the mix needs to have a <const_dir>minimum</const_dir> of <limit>15</limit> units of calcium, <limit>20</limit> units of vitamin mix, and <limit>20</limit> units of protein. A <var>regular brand</var> <obj_name>costs</obj_name> $<param>20</param> per bag and contains <param>4</param> units of calcium, <param>7</param> units of vitamin mix, and <param>10</param> units of protein. A <var>premium brand</var> <obj_name>costs</obj_name> $<param>35</param> per bag and contains <param>12</param> units of calcium, <param>10</param> units of vitamin mix, and <param>16</param> units of protein. How many bags of each brand should Lucy mix in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while also meeting the taste and health requirements.", "output": "min: 35 premium_brand + 20 regular_brand\nst: 4 regular_brand + 12 premium_brand >= 15\n     7 regular_brand + 10 premium_brand >= 20\n     10 regular_brand + 16 premium_brand >= 20"}
{"input": "Maple Oil processes three types of crude oil: <var>light oil</var>, <var>non-sticky oil</var> and <var>heavy oil</var>. Each tank of <var>light oil</var> produces a <obj_name>net revenue</obj_name> of $<param>550</param>, each tank of <var>non-sticky oil</var> produces a <obj_name>net revenue</obj_name> of $<param>750</param>, and each tank of <var>heavy oil</var> produces a <obj_name>net revenue</obj_name> of $<param>950</param>. To process a tank of <var>light oil</var>, <param>3</param> units of compound A and <param>3</param> units of compound B are required. To process a tank of <var>non-sticky oil</var>, <param>6</param> units of compound A and <param>2</param> units of compound B are required. To process a tank of <var>heavy oil</var>, <param>9</param> units of compound A and <param>3</param> units of compound B are required. Currently the company <const_dir>has</const_dir> <limit>250</limit> units of compound A and <limit>150</limit> units of compound B to process. How many full or partial tanks of each oil should the company process so that <obj_name>net revenue</obj_name> is <obj_dir>maximized</obj_dir>?", "output": "max: 550 light_oil + 750 non-sticky_oil + 950 heavy_oil\nst: 3 light_oil + 6 non-sticky_oil + 9 heavy_oil <= 250\n     3 heavy_oil + 2 non-sticky_oil + 3 light_oil <= 150"}
{"input": "A flooring company produces engineered <var>laminate planks</var> and <var>carpets</var>. The chief marketer reports an expected demand of <const_dir>at least</const_dir> <limit>15,000</limit> square feet of <var>laminate planks</var> and <limit>5,000</limit> square feet of <var>carpets</var> each week. The shipping contract requires a <const_dir>total of at least</const_dir> <limit>50,000</limit> square feet of products each week. However, due to a shortage of raw materials, <const_dir>no more than</const_dir> <limit>40,000</limit> square feet of <var>laminate planks</var> and <limit>20,000</limit> square feet of <var>carpets</var> can be produced weekly. If a square foot of <var>laminate planks</var> produces a $<param>2.1</param> <obj_name>profit</obj_name> and a square foot of <var>carpets</var> yields a $<param>3.3</param> <obj_name>profit</obj_name>, how many of each type of product should be made weekly to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 2.1 laminate_planks + 3.3 carpets\nst: laminate_planks >= 15,000\n     carpets >= 5,000\n     laminate_planks + carpets <= 50,000\n     laminate_planks <= 40,000\n     carpets <= 20,000"}
{"input": "A man takes two supplements to get his daily iron and calcium requirements. A pill of <var>supplement A</var> has <param>5</param> units of iron and <param>10</param> units of calcium. A pill of <var>supplement B</var> contains <param>4</param> units of iron and <param>15</param> units of calcium.  The man needs a <const_dir>minimum</const_dir> of <limit>40</limit> units of iron and <limit>50</limit> units of calcium per day. If the <obj_name>cost</obj_name> per pill of <var>supplement A</var> is $<param>2</param> and the <obj_name>cost</obj_name> per pill of <var>supplement B</var> is  $<param>3</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 3 supplement_B + 2 supplement_A\nst: 5 supplement_A + 4 supplement_B >= 40\n     10 supplement_A + 15 supplement_B >= 50"}
{"input": "A fashion company sells <var>regular handbags</var> and <var>premium handbags</var> made of higher quality material. They can sell <var>regular handbags</var> at a <obj_name>profit</obj_name> of $<param>30</param> each and <var>premium handbags</var> at a <obj_name>profit</obj_name> of $<param>180</param> each. The total monthly cost of manufacturing is $<param>200</param> per <var>regular handbag</var> and $<param>447</param> per <var>premium handbag</var>. The company has a total <const_dir>budget</const_dir> of $<limit>250000</limit> and can sell <const_dir>at most</const_dir> <limit>475</limit> handbags of either type per month. How many of each handbag should they sell to <obj_dir>maximize</obj_dir> its monthly <obj_name>profit</obj_name>?", "output": "max: 30 regular_handbags + 180 premium_handbags\nst: 447 premium_handbag + 200 regular_handbag <= 250000\n     regular_handbags + premium_handbags <= 475"}
{"input": "A woman <const_dir>has</const_dir> $<limit>100000</limit> to gamble on two sports bets: a <var>basketball tournament</var>, a <var>horse race</var>, and a <var>soccer game</var>. Based on simple analysis, the woman determines her chance of losing her money would be <param>50%</param> for <var>basketball tournament</var>, <param>25%</param> for <var>horse race</var>, and <param>10%</param> for the <var>soccer game</var>. The <obj_name>payout</obj_name> for each dollar put on each bet will be $<param>1.2</param> for <var>basketball tournament</var>, $<param>0.5</param> for <var>horse race</var>, and $<param>0.1</param> for the <var>soccer game</var>. Knowing herself, she limits her average chance of losing her money should be <const_dir>at most</const_dir> <limit>30%</limit>. Could you help her determine how much to money to put on each sport bet to <obj_dir>maximize</obj_dir> her average <obj_name>payout</obj_name>?", "output": "max: 1.2 basketball_tournament + 0.5 horse_race + 0.1 soccer_game\nst: basketball_tournament + horse_race + soccer_game <= 100000\n     50% basketball_tournament + 25% horse_race + 10% soccer_game <= 30%"}
{"input": "A repairman fixes washing machines and <var>freezers</var>. Each <var>washing machine</var> takes <param>30</param> minutes of inspection and <param>90</param> minutes of fixing time. Each <var>freezer</var> takes <param>20</param> minutes of inspection and <param>125</param> minutes of fixing time. The repairman has <limit>5000</limit> minutes <const_dir>available</const_dir> for inspection and <limit>20000</limit> minutes <const_dir>available</const_dir> in his schedule. If each <var>washing machine</var> repaired <obj_name>earns</obj_name> him $<param>250</param> and each <var>freezer</var> repaired <obj_name>earns</obj_name> his $<param>375</param>, how many of each appliance should he fix to <obj_dir>maximize</obj_dir> his <obj_name>earnings</obj_name>?", "output": "max: 250 washing_machine + 375 freezer\nst: 30 washing_machine + 20 freezer <= 5000\n     90 washing_machine + 125 freezer <= 20000"}
{"input": "A small bakery <const_dir>has</const_dir> <limit>20000</limit> grams of batter and <limit>14000</limit> grams of milk to make their <var>crepe cakes</var>, <var>sponge cakes</var>, and <var>birthday cakes</var>. A <var>crepe cake</var> needs <param>400</param> grams of batter and <param>200</param> grams of milk. A <var>sponge cake</var> requires <param>500</param> grams of batter and <param>300</param> grams of milk. A <var>birthday cake</var> requires <param>450</param> grams of batter and <param>350</param> grams of milk. If the <obj_name>profit</obj_name> per <var>crepe cake</var> is $<param>12</param>, the <obj_name>profit</obj_name> per <var>sponge cake</var> is $<param>10</param>, and the <obj_name>profit</obj_name> per <var>birthday cake</var> is $<param>15</param>, how many of each should the bakery make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 12 crepe_cake + 10 sponge_cake + 15 birthday_cake\nst: 200 crepe_cake + 300 sponge_cake + 350 birthday_cake <= 20000"}
{"input": "Super Shop sells cat paw snacks and gold shark snacks in bulk. It plans to sell them into two snack mix products. The <var>first mix</var> contains <param>20%</param> cat paw snacks and <param>80%</param> gold shark snacks. The <var>second mix</var> contains <param>35%</param> cat paw snacks and <param>65%</param> gold shark snacks. The store <const_dir>has on hand</const_dir> <limit>20</limit> kg of cat paw snacks and <limit>50</limit> kg of gold shark snacks. If the <obj_name>profit</obj_name> per kg of the <var>first mix</var> is $<param>12</param> and the <obj_name>profit</obj_name> per kg of the <var>second mix</var> is $<param>15</param>, how many kg of each should be prepared to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 first_mix + 15 second_mix\nst: 20% first_mix + 35% second_mix <= 20\n     80% first_mix + 65% second_mix <= 50"}
{"input": "A taco stand sells <var>regular tacos</var> and <var>deluxe tacos</var> with extra meat. The stand makes x1 <var>regular tacos</var> at a <obj_name>profit</obj_name> of $<param>2.50</param> each and x2 <var>deluxe tacos</var> at a <obj_name>profit</obj_name> of $<param>3.55</param> each (x1 and x2 are unknown variables both greater than or equal to 0). There is a demand for <const_dir>at most</const_dir> <limit>50</limit> <var>regular tacos</var> and <const_dir>at most</const_dir> <limit>40</limit> <var>deluxe tacos</var>. The stand only has enough supplies to sell <const_dir>at most</const_dir> <limit>70</limit> tacos of either type. How many of each taco should the stand make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.55 deluxe_tacos + 2.50 regular_tacos\nst: regular_tacos <= 50\n     deluxe_tacos <= 40\n     deluxe_tacos + regular_tacos <= 70"}
{"input": "A printing company sells <var>math workbooks</var> and <var>English workbooks</var>. To meet demand, they must make <const_dir>at least</const_dir> <limit>40</limit> <var>math workbooks</var> and <const_dir>at least</const_dir> <limit>60</limit> <var>English workbooks</var>. However, they can make <const_dir>at most</const_dir> <limit>140</limit> <var>math workbooks</var> and <const_dir>at most</const_dir> <limit>170</limit> <var>English workbooks</var>. The company has a contract with a school to send <const_dir>at least</const_dir> <limit>200</limit> workbooks of either type. If the <obj_name>profit</obj_name> per <var>math workbook</var> is $<param>15</param> and the <obj_name>profit</obj_name> per <var>English workbook</var> is $<param>17</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 17 English_workbook + 15 math_workbook\nst: math_workbooks >= 40\n     English_workbooks >= 60\n     math_workbooks <= 140\n     English_workbooks <= 170\n     English_workbook + math_workbook <= 200"}
{"input": "A music company produces two types of digital keyboards, one is <var>full-weighted</var> and another is <var>semi-weighted</var>. Both keyboards are <obj_name>sold</obj_name> for $<param>2800</param> and $<param>2400</param> respectively. There are about <limit>3500</limit> oscillator chips <const_dir>available</const_dir> every day from which the <var>full-weighted version</var> requires <param>20</param> chips while the <var>semi-weighted version</var> requires <param>15</param> chips. The company has <const_dir>a total of</const_dir> <limit>6</limit> working hours a day. Both of these keyboards require a production time of <param>1.2</param> hours. What should be the manufacturing quantity for each of the keyboards to <obj_dir>maximize</obj_dir> the <obj_name>total revenue</obj_name>?", "output": "max: 2800 full-weighted + 2400 semi-weighted\nst: 20 full-weighted_version + 15 semi-weighted_version <= 3500\n     1.2 full-weighted_version + 1.2 semi-weighted_version >= 6"}
{"input": "Platinum Database sells two types of subscription software packages: a <var>personal license</var> and a <var>commercial license</var> which will cost $<param>550</param> and $<param>2000</param> to generate respectively. The marketing department estimates that they can sell <const_dir>at most</const_dir> <limit>300</limit> licenses for both versions combined a month. The <obj_name>profit</obj_name> per <var>personal license</var> is $<param>450</param> and the <obj_name>profit</obj_name> per <var>commercial version</var> is $<param>1200</param>. If the company does not want to spend <const_dir>more than</const_dir> $<limit>400000</limit>, how many of each software package should they produce to <obj_dir>maximize</obj_dir> the <obj_name>profits</obj_name>.", "output": "max: 450 personal_license + 1200 commercial_version\nst: 550 personal_license + 2000 commercial_license <= 400000\n     personal_license + commercial_version <= 300"}
{"input": "Zeta Bakery sells two types of cookies. They sell a <var>strawberry cookie</var> and a <var>sugar cookie</var>. Let's say they make x1 <var>strawberry cookies</var>, at a <obj_name>profit</obj_name> of $<param>5.5</param> each, and x2 <var>sugar cookies</var>, at a <obj_name>profit</obj_name> of $<param>12</param> each (x1 and x2 are unknowns both greater than or equal to 0). The daily demand for these cookies is <const_dir>at most</const_dir> <limit>100</limit> <var>strawberry cookies</var> and <const_dir>at most</const_dir> <limit>80</limit> <var>sugar cookies</var>. The bakery is short staffed and can make a <const_dir>maximum</const_dir> of <limit>100</limit> cookies of either type per day. How much of each cookie should the bakery make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5.5 strawberry_cookies + 12 sugar_cookies\nst: strawberry_cookies <= 100\n     sugar_cookies <= 80\n     strawberry_cookies + sugar_cookies <= 100"}
{"input": "An extremely large ski resort is looking into purchasing two types of <obj_name>ski lifts</obj_name>, a <var>densely-seated one</var> and a <var>loosely-seated one</var>. The <var>densely-seated ski lift</var> is able to bring <param>45</param> guests up the slopes every minute whereas the <var>loosely-seated ski</var> lift can transport <param>20</param> guests every minute.  The <var>densely-seated ski</var> lift uses <param>30</param> units of electricity and the <var>loosely-seated lift</var> uses <param>22</param> units of electricity. There must be <const_dir>at least</const_dir> <limit>five</limit> <var>loosely-seated ski</var> lifts because they move slower and are friendlier for beginners. The ski resort needs <const_dir>at least</const_dir> <limit>1000</limit> guests every minute to make a profit and has <const_dir>available</const_dir> <limit>940</limit> units of electricity. How many of each type of <obj_name>ski lifts</obj_name> should they plan to install to <obj_dir>minimize</obj_dir> <obj_name>the total number of ski lifts</obj_name> needed?", "output": "min: \nst: loosely-seated_ski >= five\n     20 loosely-seated_ski + 45 densely-seated_ski_lift >= 1000\n     30 densely-seated_ski + 22 loosely-seated_lift <= 940"}
{"input": "A student takes <var>calcium pills</var> and <var>vitamin D pills</var> one after the other. Each <var>calcium pill</var> takes <param>5</param> <obj_name>minutes</obj_name> to be effective while each <var>vitamin D pill</var> takes <param>6</param> <obj_name>minutes</obj_name> to be effective. Over a month, the student must take <const_dir>at least</const_dir> <limit>130</limit> pills of medication and <const_dir>at least</const_dir> <limit>40</limit> should be <var>vitamin D pills</var> because they enhance the absorption of calcium in the body. Since <var>vitamin D</var> is complimentary to calcium, the student must take <const_dir>more</const_dir> <var>calcium pills</var> than <var>vitamin D pills</var>. How many pills of each should the student take to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for the medication to be effective?", "output": "min: 5 calcium_pill + 6 vitamin_D_pill\nst: calcium_pill + vitamin_D_pill <= 130\n     vitamin_D_pills >= 40\n     calcium_pills <= vitamin_D_pills"}
{"input": "In a science fair, there are two types of tables that can be used to display the children\u2019s science experiments. At the <var>circular tables</var>, <param>4</param> poster boards and <param>5</param> participants can fit around the table to cater to <param>8</param> <obj_name>guests</obj_name>. At the <var>rectangular tables</var>, <param>4</param> poster boards and <param>4</param> participants can fit around the table to cater to <param>12</param> <obj_name>guests</obj_name>. However, each <var>circular table</var> takes up <param>15</param> units of space while each <var>rectangular table</var> takes up <param>20</param> units of space. The science fair has must be able to fit <const_dir>at least</const_dir> <limit>500</limit> participants and <limit>300</limit> poster boards. If the science fair has <const_dir>available</const_dir> <limit>1900</limit> units of space, how many of each type of table should be set up to <obj_dir>maximize</obj_dir> the <obj_name>number of catered guests</obj_name>?", "output": "max: 8 circular_tables + 12 rectangular_tables\nst: 4 circular_tables + 4 rectangular_tables >= 300\n     5 circular_tables + 4 rectangular_tables >= 500\n     15 circular_table + 20 rectangular_table <= 1900"}
{"input": "A food delivery person can either have shifts on <var>bikes</var> or <var>scooters</var>. A shift on a <var>bike</var> can deliver <param>10</param> orders, takes <param>5</param> units of energy, and brings in $<param>50</param> on <obj_name>tips</obj_name> because it is faster. A shift on a <var>scooter</var> can deliver <param>7</param> orders, takes <param>6</param> units of energy, and brings in $<param>43</param> on <obj_name>tips</obj_name>.  The delivery person has <const_dir>available</const_dir> <limit>40</limit> shifts a month and <const_dir>has</const_dir> <limit>230</limit> units of energy and must bring <const_dir>at least</const_dir> <limit>320</limit> orders. He must have <const_dir>at least</const_dir> <limit>5</limit> shifts on a <var>scooter</var> because <var>bikes</var> are harder to get. How many shifts on each type of transportation should the delivery person schedule to <obj_dir>maximize</obj_dir> <obj_name>tips received</obj_name>?", "output": "max: 50 bike + 43 scooter\nst: bike + scooter <= 40\n     5 bike + 6 scooter <= 230\n     7 scooter + 10 bike >= 320\n     scooter >= 5"}
{"input": "A restaurant has two combos available to their customers, an <var>original</var> and an <var>experimental meal</var>. The <var>original meal</var> typically generates <param>20</param> units of food waste and <param>45</param> units of wrapping waste and takes <param>10</param> <obj_name>minutes to cook</obj_name>. In comparison, the <var>experimental meal</var> generates <param>25</param> units of food waste and <param>35</param> units of wrapping waste and takes <param>15</param> <obj_name>minutes to cook</obj_name>. The restaurant can have <const_dir>at most</const_dir> <limit>900</limit> units of wrapping waste and can have <const_dir>at most</const_dir> <limit>800</limit> units of food waste as regulated by the government. How many of each combo should be pushed for by the waiting staff to <obj_dir>minimize</obj_dir> the <obj_name>cooking time</obj_name>?", "output": "min: 15 experimental_meal + 10 original_meal\nst: 35 experimental_meal + 45 original_meal <= 900\n     20 original_meal + 25 experimental_meal <= 800"}
{"input": "A metal-working shop has access to two types of <obj_name>metal-working equipment</obj_name>, a <var>chop saw</var> and a <var>steel cutter</var>. A <var>chop saw</var> can work <param>25</param> pounds of steel and generates <param>25</param> units of waste every day. A <var>steel cutter</var> can only cut <param>5</param> pounds of steel and generates <param>3</param> units of waste every day.  The metal-working shop is expecting an increase in demand and <const_dir>must cut</const_dir> <limit>520</limit> pounds of metal every day. However, there is a waste limitation due to the fines that may be in place if too much heavy metal is discarded and they may <const_dir>at most</const_dir> produce <limit>400</limit> units of waste every day. How should the metal-working shop purchase their <obj_name>metal-working equipment</obj_name> to <obj_dir>decrease</obj_dir> the total <obj_name>number of metal-working equipment</obj_name> needed?", "output": "dec: \nst: 25 chop_saw + 5 steel_cutter >= 520\n     3 steel_cutter + 25 chop_saw <= 400"}
{"input": "A clothing company can sell their product in two types of stores, a <var>retail store</var> and a <var>factory outlet</var>. A <var>retail store</var> brings in <param>200</param> customers every day and requires <param>6</param> employees to operate. A <var>factory outlet</var> brings in <param>80</param> customers every day and due to the lower traffic and being in more remote areas, requires <param>4</param> employees to run. Company executives decided that there must be <const_dir>at least</const_dir> <limit>1200</limit> customers every day, and can make <const_dir>available</const_dir> <limit>50</limit> employees. How should the company distribute their product to the two types of store to <obj_dir>reduce</obj_dir> the <obj_name>number of stores</obj_name> that must be open?", "output": "red: \nst: 80 factory_outlet + 200 retail_store >= 1200\n     4 factory_outlet + 6 retail_store <= 50"}
{"input": "An autobody shop needs to purchase two types of car jacks, an <var>automatic electric one</var>, or a <var>gas-powered one</var>. The <var>automatic electric one</var> can process <param>5</param> <obj_name>cars every hour</obj_name> and uses <param>6</param> units of electricity whereas the <var>gas-powered one</var> can process <param>4</param> <obj_name>cars each hour</obj_name> using <param>7</param> units of gas. Since there is a limit to how many <var>automatic electric ones</var> there can be due to the limited number of power outlets, the shop must use <const_dir>less than</const_dir> <limit>15</limit> <var>automatic electric ones</var>. The shop can use <const_dir>at most</const_dir> <limit>50</limit> units of electricity and <limit>80</limit> units of gas. How many of each type of jack should the shop purchase to <obj_dir>maximize</obj_dir> the <obj_name>amount of cars processed every hour</obj_name>?", "output": "max: 4 gas-powered_one + 5 automatic_electric_one\nst: automatic_electric_ones <= 15\n     6 automatic_electric_one <= 50\n     7 gas-powered_one <= 80"}
{"input": "Platinum in combination with palladium has been used as a catalyst in cars and it changes carbon monoxide, which is toxic, into <obj_name>carbon dioxide</obj_name>. An automotive company is comparing two different catalysts, a <var>palladium-heavy catalyst</var> and a <var>platinum-heavy catalyst</var>. The process with a <var>palladium-heavy catalyst</var> requires <param>15</param> units of platinum and <param>25</param> units of palladium and can perform the conversion to carbon dioxide at a rate of <param>5</param> <obj_name>units per second</obj_name>. A <var>platinum-heavy catalyst</var> requires <param>20</param> units of platinum and <param>14</param> units of palladium and converts to carbon dioxide at a rate of <param>4</param> <obj_name>units per second</obj_name>. There are <limit>450</limit> units of platinum and <limit>390</limit> units of palladium <const_dir>available</const_dir>. How many of each catalyst should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount converted into carbon dioxide</obj_name>?", "output": "max: 5 palladium-heavy_catalyst + 4 platinum-heavy_catalyst\nst: 14 platinum-heavy_catalyst + 25 palladium-heavy_catalyst <= 390\n     15 palladium-heavy_catalyst + 20 platinum-heavy_catalyst <= 450"}
{"input": "There are two ways to extract a metal from mined ores. The first way is to use <var>process J</var> and the second is <var>process P.</var> <var>Process J</var> can extract <param>5</param> units of <obj_name>metal</obj_name> using <param>8</param> units of water and produces <param>3</param> units of pollution. <var>Process P</var> can extract <param>9</param> units of <obj_name>metal</obj_name> using <param>6</param> units of water and produces <param>5</param> units of pollution. There can be <const_dir>at most</const_dir> <limit>1500</limit> units of water <limit>1350</limit> units of pollution. How many of each type of processes should be performed to <obj_dir>maximize</obj_dir> the <obj_name>amount of metal</obj_name> extracted?", "output": "max: 5 Process_J + 9 Process_P\nst: 8 Process_J + 6 Process_P <= 1500\n     3 Process_J + 5 Process_P <= 1350"}
{"input": "A research group is making fabric and plastic using two methods, <var>method A</var> and <var>method B.</var> <var>Method A</var> produces <param>25</param> units of fabric and <param>14</param> units of plastic per <obj_name>hour</obj_name>. <var>Method B</var> produces <param>45</param> units of fabric and <param>25</param> units of plastic per <obj_name>hour</obj_name>. <var>Method A</var> requires <param>60</param> units of a special element while <var>method B</var> requires <param>65</param> units of the same special element. The research group has <const_dir>available</const_dir> <limit>3500</limit> units of the special element and must make <const_dir>at least</const_dir> <limit>1400</limit> units of fabric and <limit>1000</limit> units of plastic. How many of each method should be executed to <obj_dir>minimize</obj_dir> the total <obj_name>time</obj_name> needed?", "output": "min: \nst: 25 Method_A + 45 Method_B >= 1400\n     14 Method_A + 25 Method_B >= 1000\n     60 Method_A + 65 method_B <= 3500"}
{"input": "A researcher is outsourcing annotations and has two options: a <var>specialized third-party</var> or a <var>common third-party annotation company</var>. The <var>specialized company</var> can annotate at a rate of <param>60</param> images per hour whereas the <var>common company</var> can annotate at a rate of <param>40</param> images per hour. However, the <var>specialized company</var> charges $<param>100</param> <obj_name>per hour</obj_name> and the <var>common company</var> charges $<param>72</param> <obj_name>per hour</obj_name>. The researcher has deadlines to meet and must complete a dataset of <const_dir>at least</const_dir> <limit>10,000</limit> images. They also have some special images that only the <var>specialized company</var> can annotate. Therefore, <const_dir>at least</const_dir> a <limit>third</limit> of work must be allocated to the <var>specialized company</var>. How should the researcher distribute the annotations to the two companies to <obj_dir>minimize</obj_dir> the <obj_name>cost of annotating the whole dataset</obj_name>?", "output": "min: 100 specialized_company + 72 common_company\nst: 60 specialized_company + 40 common_company >= 10,000\n     specialized_company >= third"}
{"input": "A researcher must perform two types of experiments, <var>in-vivo</var> and <var>ex-vivo</var>. <var>In-vivo experiments</var> requires <param>30</param> minutes to prepare and <param>60</param> minutes to execute. <var>Ex-vivo experiments</var> require <param>45</param> minutes to prepare and <param>30</param> minutes to execute. In addition, <var>in-vivo experiments</var> gives the researcher <param>2</param> units of <obj_name>radiation</obj_name> while <var>ex-vivo experiments</var> give the researcher <param>3</param> unites of <obj_name>radiation</obj_name>. <const_dir>At most</const_dir> <limit>400</limit> minutes can be used for preparation and <limit>500</limit> minutes for execution of the experiment. How many of each experiment should be scheduled by the researcher to <obj_dir>minimize</obj_dir> the <obj_name>total radiation</obj_name> received by the researcher?", "output": "min: 2 in-vivo_experiments + 3 ex-vivo_experiments\nst: 30 In-vivo_experiments + 45 Ex-vivo_experiments <= 400\n     60 In-vivo_experiments + 30 Ex-vivo_experiments <= 500"}
{"input": "A clinical firm has two factories, a <var>northern factory</var> and a <var>western factory</var>, where they make expensive anti-itch injections and topical cream. Every <obj_name>hour</obj_name>, the <var>northern factory</var> makes <param>800</param> g of anti-itch injections and <param>700</param> g of topical cream. Every <obj_name>hour</obj_name>, the <var>western factory</var> makes <param>650</param> g of anti-itch injections and <param>750</param> g of topical cream. The <var>northern factory</var> requires <param>40</param> units of plastic per <obj_name>hour</obj_name> while the <var>western factory</var> requires <param>35</param> units of plastic to manufacture the packaging. The clinical firm has <const_dir>available</const_dir> <limit>60,000</limit> units of plastic. Further, they must make <const_dir>at least</const_dir> <limit>800,000</limit> g of anti-itch injections and <limit>700,000</limit> g of topical cream. How many <obj_name>hours</obj_name> should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 800 northern_factory + 650 western_factory >= 800,000\n     700 northern_factory + 750 western_factory >= 700,000\n     40 northern_factory + 35 western_factory <= 60,000"}
{"input": "A company in the desert can transport goods to rural cities either by <var>camel caravans</var> or <var>desert trucks</var>. A <var>camel caravan</var> can deliver <param>50</param> units of goods per trip and takes <param>12</param> <obj_name>hours</obj_name>. A <var>desert truck</var> can deliver <param>150</param> units of goods per trip and takes <param>5</param> <obj_name>hours</obj_name>. However, due to the cost of fuel, the company prefers to have <const_dir>more</const_dir> <var>camel caravans</var> than <var>desert trucks</var>.  If the company <const_dir>needs to deliver</const_dir> <limit>1500</limit> units of goods, how many of each method of transportation should the company organize to <obj_dir>minimize</obj_dir> the <obj_name>total number of hours</obj_name> required?", "output": "min: 12 camel_caravan + 5 desert_truck\nst: 50 camel_caravan + 150 desert_truck >= 1500\n     camel_caravans <= desert_trucks"}
{"input": "A biotechnology company has <limit>35,000</limit> units of antibiotics <const_dir>available</const_dir> which is important to the process of making a <var>first-dose</var> and <var>second-dose</var> of vaccines. The <var>first-dose vaccine</var> requires <param>30</param> units of antibiotics and <param>20</param> mg of <obj_name>gelatine</obj_name> whereas the <var>second-dose vaccine</var> requires <param>65</param> units of antibiotics and <param>60</param> mg of <obj_name>gelatine</obj_name>. Since the <var>first-dose vaccine</var> is required before the <var>second-dose vaccine</var>, there must be <const_dir>more</const_dir> <var>first-dose</var> than <var>second-dose vaccines</var> manufactured. However, <const_dir>at least</const_dir> <limit>40</limit> <var>second-dose vaccines</var> must be made. How many of each vaccine should be made to <obj_dir>minimize</obj_dir> the <obj_name>amount of gelatine</obj_name> used?", "output": "min: 20 first-dose_vaccine + 60 second-dose_vaccine\nst: 30 first-dose_vaccine + 65 second-dose_vaccine <= 35,000\n     first-dose <= second-dose_vaccines\n     second-dose_vaccines >= 40"}
{"input": "A senior home has snacks of <var>spinach</var> and <var>soybeans</var> to increase their intake of iron. A cup of <var>spinach</var> contains <param>100</param> units of fibre and <param>5</param> mg of iron. A cup of <var>soybeans</var> contains <param>80</param> units of fibre and <param>12</param> mg of iron. Due to other nutritional requirements, the nurses decided that the number of cups of <var>spinach</var> <const_dir>must exceed</const_dir> the number of cups of <var>soybeans</var>. Furthermore, a cup of <var>spinach</var> contains <param>30</param> <obj_name>calories</obj_name> while a cup of <var>soybeans</var> contains <param>100</param> <obj_name>calories</obj_name>. If they schedule that the elderly need in total <const_dir>at least</const_dir> <limit>12000</limit> units of fibre and <limit>300</limit> mg of iron, how many cups of each should the nurses schedule to <obj_dir>maximize</obj_dir> the seniors\u2019 total <obj_name>caloric intake</obj_name>?", "output": "max: 30 spinach + 100 soybeans\nst: 100 spinach + 80 soybeans >= 12000\n     5 spinach + 12 soybeans >= 300\n     spinach <= soybeans"}
{"input": "A tourism company can buy <var>sedans</var> or <var>buses</var> to add to their fleet of <obj_name>vehicles</obj_name> to increase their capacity for more tourists. A <var>sedan</var> can seat <param>50</param> tourists per day but results in <param>10</param> units of pollution. A <var>bus</var> can seat <param>250</param> tourists per day but results in <param>40</param> units of pollution. The city has limited this tourism company to producing <const_dir>at most</const_dir> <limit>800</limit> units of pollutants per day. To make a profit, this tourism company must take care of <const_dir>at least</const_dir> <limit>4600</limit> customers per day. Planning to make a profit, how many <var>sedans</var> and how many <var>buses</var> should this tourism company purchase to <obj_dir>decrease</obj_dir> the <obj_name>total number of vehicles</obj_name> needed?", "output": "dec: \nst: 10 sedan + 40 bus <= 800\n     250 bus + 50 sedan >= 4600"}
{"input": "A daycare center has children they must pick up and can use two types of vehicles: <var>bus</var> or a <var>personal car</var>. A <var>bus</var> can carry <param>9</param> children while a <var>personal car</var> can carry <param>4</param> children. The daycare has to pick up <const_dir>at least</const_dir> <limit>100</limit> children. Additionally, due to limitations of pollution, there <const_dir>must be more</const_dir> <var>buses</var> than <var>personal cars</var>. But some children require extra attention. Therefore, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>personal cars</var>. How many of each form of transportation should the daycare center schedule for to <obj_dir>minimize</obj_dir> the <obj_name>total number of vehicles</obj_name>?", "output": "min: \nst: buses <= personal_cars\n     personal_cars >= 5\n     4 personal_car + 9 bus >= 100"}
{"input": "A municipality hires <var>full-time and</var> <var>part-time staff</var> to deliver mail. <var>Part-time staff</var> works <param>15</param> hours per week and gets paid <param>450</param> dollars whereas a <var>full-time staff</var> works <param>40</param> hours every week and gets paid <param>1280</param> dollars  for that week.  Since it is the week leading up to a holiday, planning ahead, the municipality <const_dir>needs</const_dir> <limit>1000</limit> hours of mail staff labor. The municipality has a <const_dir>budget</const_dir> of <limit>31500</limit> dollars for mail delivery for this season. How many of each type of <obj_name>staff</obj_name> should the municipality hire to <obj_dir>decrease</obj_dir> the total <obj_name>number of staff</obj_name>?", "output": "dec: \nst: 40 full-time_staff + 15 Part-time_staff >= 1000\n     450 Part-time_staff + 1280 full-time_staff <= 31500"}
{"input": "A landscaper <const_dir>has</const_dir> <limit>2500</limit> square feet of grass land in a customer\u2019s backyard where they need to cut grass using either a <var>heavy-duty yard machine</var> or a <var>gas lawn mower</var>. For each square foot of land, the <var>heavy-duty yard machine</var> requires <param>2</param> <obj_name>seconds</obj_name> while the <var>gas lawn mower</var> takes <param>5</param> <obj_name>seconds</obj_name>. Per square foot, the <var>heavy-duty yard machine</var> produces <param>12</param> units of pollution and requires <param>3</param> units of fuel. Conversely, the <var>gas lawn mower</var> generates <param>10</param> units of pollution for each square foot and requires <param>2</param> units of fuel. There are <limit>450</limit> units of fuel <const_dir>available</const_dir> and the landscaper can produce <const_dir>no more than</const_dir> <limit>2000</limit> units of pollution. For how many square feet should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>time required</obj_name> to cut this customer\u2019s backyard?", "output": "min: 5 gas_lawn_mower + 2 heavy-duty_yard_machine\nst: 2 gas_lawn_mower + 3 heavy-duty_yard_machine <= 450\n     12 heavy-duty_yard_machine + 10 gas_lawn_mower <= 2000\n     gas_lawn_mower + heavy-duty_yard_machine <= 2500"}
{"input": "A park is designing their trails and can either create a <var>wide trail</var> or a <var>narrow trail</var>. A <var>wide trail</var> can take <param>50</param> visitors every day while the <var>narrow trail</var> expects <param>20</param> visitors every day. The <var>wide trail</var> will introduce <param>6</param> <obj_name>units of garbage</obj_name> and the <var>narrow trail</var> will introduce <param>3</param> <obj_name>units of garbage</obj_name>. There can be <const_dir>at most</const_dir> <limit>3</limit> <var>wide trails</var> and the park hopes to have <const_dir>at most</const_dir> <limit>225</limit> visitors every day. How many of each type of trail should the park construct to <obj_dir>minimize</obj_dir> the <obj_name>total amount of garbage</obj_name> produced.", "output": "min: 6 wide_trail + 3 narrow_trail\nst: 50 wide_trail + 20 narrow_trail <= 225\n     wide_trails <= 3"}
{"input": "An incandescent bulb manufacturing company uses either an <var>argon gas approach</var> or <var>halogen gas approach</var> to fill their <obj_name>light bulbs</obj_name>. The <var>argon gas approach</var> uses <param>10</param> units of gas and <param>12</param> units of glass to make <param>2</param> <obj_name>light bulbs</obj_name>. The <var>halogen gas approach</var> uses <param>12</param> units of gas and <param>8</param> units of glass to make <param>3</param> <obj_name>light bulbs</obj_name>. Additionally, the <var>argon gas approach</var> generates <param>3</param> units of heat while the <var>halogen gas approach</var> creates <param>4</param> units of heat. The manufacturing company has <const_dir>available</const_dir> <limit>150</limit> units of gas and <limit>120</limit> units of glass. If <const_dir>at most</const_dir> <limit>28</limit> units of heat can be generated during the manufacturing process, how many of each method should be used to <obj_dir>maximize</obj_dir> the <obj_name>number of light bulbs</obj_name> produced?", "output": "max: 2 argon_gas_approach + 3 halogen_gas_approach\nst: 10 argon_gas_approach + 12 halogen_gas_approach <= 150\n     12 argon_gas_approach + 8 halogen_gas_approach <= 120\n     3 argon_gas_approach + 4 halogen_gas_approach <= 28"}
