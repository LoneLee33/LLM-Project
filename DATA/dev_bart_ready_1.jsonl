{"input": "A coconut seller has to transport coconuts using either <var>rickshaws</var> or <var>ox carts</var>. The <var>rickshaws</var> can take <param>50</param> <obj_name>coconuts</obj_name> each and cost $<param>10</param> per trip. The <var>ox carts</var> can take <param>30</param> <obj_name>coconuts</obj_name> each and cost $<param>8</param> per trip. The seller has <const_dir>at most</const_dir> $<limit>200</limit> to spend on transporting the coconuts. Due to pollution, the number of <var>rickshaws</var> <const_dir>must not exceed</const_dir> the number of <var>ox carts</var>. Formulate a LP to <obj_dir>maximize</obj_dir> the <obj_name>number of coconuts</obj_name> that can be transported.", "output": "max: 50 rickshaws + 30 ox_carts\nst: 10 rickshaws + 8 ox_carts <= 200\n     rickshaws <= ox_carts"}
{"input": "A bakery sells two types of cakes. They sell a <var>chocolate cake</var> and a <var>vanilla cake</var>. Let's say they make x1 <var>chocolate cakes</var>, at a <obj_name>profit</obj_name> of $<param>10</param> each, and x2 <var>vanilla cakes</var>, at a <obj_name>profit</obj_name> of $<param>11</param> each (x1 and x2 are unknowns both greater than or equal to 0). The daily demand for these cakes is <const_dir>at most</const_dir> <limit>50</limit> <var>chocolate cakes</var> and <const_dir>at most</const_dir> <limit>30</limit> <var>vanilla cakes</var>. The bakery is short staffed and can make a <const_dir>maximum</const_dir> of <limit>50</limit> cakes of either type per day. How much of each cake should the bakery make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 chocolate_cakes + 11 vanilla_cakes\nst: chocolate_cakes <= 50\n     vanilla_cakes <= 30\n     chocolate_cakes + vanilla_cakes <= 50"}
{"input": "A spicy paste is to be made from units of <var>peppers</var> and <var>tomatoes</var> and is to contain a <const_dir>minimum</const_dir> of <limit>130</limit> units of spice and <limit>90</limit> units of flavor. <var>Peppers</var> <obj_name>cost</obj_name> $<param>8</param> per unit and <var>tomatoes</var> <obj_name>cost</obj_name> $<param>5</param> per unit. One unit of <var>peppers</var> contains <param>12</param> units of spice and <param>2</param> units of flavor. One unit of <var>tomatoes</var> contains <param>1</param> unit of spice and <param>8</param> units of flavor. Formulate this as an LP and find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> spicy paste that can be made.", "output": "min: 5 tomatoes + 8 Peppers\nst: 12 peppers + 1 tomatoes >= 130\n     2 peppers + 8 tomatoes >= 90"}
{"input": "A suit store makes <var>2-piece</var> and <var>3-piece suits</var>. To make a <var>2-piece suit</var> requires <param>1</param> hour of measuring and <param>4</param> hours of stitching. To make a <var>3-piece suit</var> requires <param>2</param> hours of measuring and <param>5</param> hours of stitching. The store has <limit>150</limit> hours of measuring time and <limit>300</limit> hours of stitching time <const_dir>available</const_dir>. In order to stay in business, <const_dir>at least</const_dir> <limit>40</limit> <var>2-piece suites</var> should be made. The <obj_name>profit</obj_name> per <var>2-piece suit</var> is $<param>600</param> and the <obj_name>profit</obj_name> per <var>3-piece suit</var> is $<param>800</param>. Formulate a LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 600 2-piece_suit + 800 3-piece_suit\nst: 1 2-piece_suit + 2 3-piece_suit <= 150\n     4 2-piece_suit + 5 3-piece_suit <= 300\n     2-piece_suites >= 40"}
{"input": "The Chips Alloy company <const_dir>produces</const_dir> <limit>150</limit> tons of iron ore and <limit>35</limit> tons of zinc ore each month. These can be treated in different ways to produce three different alloy grades: <var>Standard</var>, <var>Plus</var> or <var>Premium</var>. To produce 1 ton of the <var>Standard grade alloy</var> requires <param>3</param> tons of iron ore and <param>1</param> ton of zinc ore. To produce 1 ton of the <var>Plus grade alloy</var> requires <param>5</param> tons of iron ore and <param>2</param> tons of zinc ore. Finally, to produce 1 ton of the <var>Premium grade alloy</var> requires <param>6</param> tons of iron ore and <param>3</param> tons of zinc ore. The <obj_name>profit</obj_name> per ton from selling the alloys are $<param>1500</param>, $<param>2500</param> and $<param>5500</param> for the <var>Standard</var>, <var>Plus</var>, and <var>Premium</var> grades respectively. How much of each alloy grade should be produced to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1500 Standard + 2500 Plus + 5500 Premium\nst: 3 Standard_grade_alloy + 5 Plus_grade_alloy + 6 Premium_grade_alloy <= 150\n     1 Standard_grade_alloy + 2 Plus_grade_alloy + 3 Premium_grade_alloy <= 35"}
{"input": "A clothing factory makes <var>t-shirts</var> and <var>hoodies</var> with images of super heroes on them using a printing machine. Due to the popularity of super heroes, the company must make <const_dir>at least</const_dir> <limit>1000</limit> <var>t-shirts</var> or <var>hoodies</var>, in any combination, per week. Also, in one week, the printing machine must be kept running for <const_dir>at least</const_dir> <limit>60</limit> hours. A <var>t-shirt</var> takes <param>0.2</param> hours of printing time and <obj_name>costs</obj_name> $<param>10</param>. A <var>hoodie</var> take <param>0.3</param> hours of printing time and <obj_name>costs</obj_name> $<param>20</param>. Formulate this problem so as to <obj_dir>minimize</obj_dir> total production <obj_name>costs</obj_name>.", "output": "min: 10 t-shirt + 20 hoodie\nst: t-shirts >= 1000\n     hoodies >= 1000\n     0.2 t-shirt + 0.3 hoodie >= 60"}
{"input": "A kitchen prepares <var>diced onions</var> and <var>carrots</var> each involving both peeling and cutting. To prepare a container of <var>diced onions</var> takes <param>10</param> minutes of peeling and <param>20</param> minutes of cutting. To prepare a container of <var>diced carrots</var> takes <param>20</param> minutes of peeling and <param>15</param> minutes of cutting. There are <limit>2000</limit> minutes of peeling time and <limit>2500</limit> minutes of cutting time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per container of <var>diced onions</var> is $<param>8</param> and the <obj_name>profit</obj_name> per container of <var>diced carrots</var> is $<param>6</param>, how many containers of each should be prepared to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 diced_onions + 6 diced_carrots\nst: 10 diced_onions + 20 diced_carrots <= 2000\n     20 diced_onions + 15 diced_carrots <= 2500"}
{"input": "A cell-phone company makes <var>foldable</var> and <var>regular</var> cell-phones in a factory that is divided into a hardware and software section. The hardware section must work <param>10</param> hours on each <var>foldable</var> cell-phone but only <param>3</param> hours on each <var>regular</var> one. The software section must work <param>3</param> hours for each cell-phone. The <obj_name>profit</obj_name> from the <var>foldable</var> cell-phone is $<param>500</param> and the <obj_name>profit</obj_name> from the <var>regular</var> cell-phone is $<param>300</param>. Due to a recent strike, the hardware section only has <limit>200</limit> hours <const_dir>available</const_dir> per week and the software section only has <limit>150</limit> hours <const_dir>available</const_dir> per week. How many of each phone should the company produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 foldable + 300 regular\nst: 10 foldable + 3 regular <= 200\n     3 foldable + 3 regular <= 150"}
{"input": "The Vision Corporation manufactures two models of monitors: <var>Aleph 3</var> and <var>Gilgamesh Supreme</var>. They share a similar manufacturing process in that they both require a certain amount of assembly and packaging. Each <var>Aleph 3</var> monitor takes <param>2</param> hours of assembly and each <var>Gilgamesh Supreme</var> requires <param>2.5</param> hours of assembly. They both require <param>0.5</param> hours of packaging time per unit. During the next season, <limit>5000</limit> hours of assembly time are <const_dir>available</const_dir> and <const_dir>at most</const_dir> <limit>2500</limit> hours of packaging time may be used. Each <var>Aleph 3</var> sold yields a <obj_name>profit</obj_name> of $<param>1500</param>. Each <var>Gilgamesh Supreme</var> sold yields a <obj_name>profit</obj_name> of $<param>2500</param> <obj_name>profit</obj_name>. Formulate and solve this LP problem and find the best combination of monitors that yields the <obj_dir>highest</obj_dir> <obj_name>profit</obj_name>.", "output": "hig: 2500 Gilgamesh_Supreme + 1500 Aleph_3\nst: 2 Aleph_3 + 2.5 Gilgamesh_Supreme <= 5000\n     0.5 Aleph_3 + 0.5 Gilgamesh_Supreme <= 2500"}
{"input": "A factory in India produces <var>rice</var> and <var>corn</var>. To make one kilogram of <var>rice</var> requires <param>2</param> hours of human labor, <param>3</param> hours of machine work, and <param>4</param> hours of resting under the sun. To make one kilogram of <var>corn</var> requires <param>1</param> hour of human labor, <param>5</param> hours of machine work, and <param>1</param> hour of resting under the sun. The factory only has <limit>100</limit> hours of human labor, <limit>200</limit> hours of machine labor, and <limit>75</limit> hours of time under the sun <const_dir>available</const_dir>. The <obj_name>net profit</obj_name> per kilogram of <var>rice</var> is $<param>20</param> and the <obj_name>net profit</obj_name> per kilogram of <var>corn</var> is $<param>25</param>. How many kilograms of each should the factory make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 rice + 25 corn\nst: 2 rice + 1 corn <= 100\n     3 rice + 5 corn <= 200\n     4 rice + 1 corn <= 75"}
{"input": "David likes to mix his two post workout drinks: <var>coconut water</var> and <var>blue energade</var>. <var>Coconut water</var> <obj_name>costs</obj_name> $<param>3</param> per bottle, contains <param>5</param> units of potassium, <param>3</param> units of magnesium, and <param>8</param> units of calcium. <var>Blue energade</var> <obj_name>costs</obj_name> $<param>5</param> per bottle and contains <param>10</param> units of potassium, <param>4</param> units of magnesium, and <param>4</param> units of calcium. David likes to make sure he gets <const_dir>at least</const_dir> <limit>15</limit> units of potassium, <limit>10</limit> units of magnesium, and <limit>20</limit> units of calcium after each workout. How many bottles of each drink should he buy and mix in order to ensure a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>? What is the minimum cost?", "output": "min: 3 Coconut_water + 5 Blue_energade\nst: 5 Coconut_water + 10 Blue_energade >= 15\n     3 Coconut_water + 4 Blue_energade >= 10\n     8 Coconut_water + 4 Blue_energade >= 20"}
{"input": "George <const_dir>has</const_dir> <limit>120</limit> acres of farmland on which to grow <var>strawberries</var> and <var>watermelons</var> Both fruits have to be watered and sprayed with bug repellant. There are <limit>150</limit> days per year <const_dir>available</const_dir> for watering and <limit>100</limit> days per year <const_dir>available</const_dir> for spraying bug spray. It takes <param>0.5</param> days to water an acre of <var>strawberries</var> and <param>1</param> day to spray an acre of <var>strawberries</var>. It takes <param>0.2</param> days to water an acre of <var>watermelons</var> and <param>2</param> days to spray an acre of <var>watermelons</var>. George earns a <obj_name>profit</obj_name> of $<param>200</param> per acre of <var>strawberries</var> and $<param>500</param> per acre of <var>watermelons</var>. How many acres of each fruit should be planted in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 strawberries + 500 watermelons\nst: strawberries + watermelons <= 120\n     0.5 strawberries + 0.2 watermelons <= 150\n     1 strawberries + 2 watermelons <= 100"}
{"input": "A fashion company produces two types of nail paints, <var>gel</var> and <var>acrylic</var>. The <obj_name>profit</obj_name> per unit of <var>gel</var> is $<param>80</param> and the <obj_name>profit</obj_name> per unit of <var>acrylic</var> is $<param>200</param>. It takes <param>4</param> hours to produce the raw materials for one unit of <var>gel</var>, <param>3</param> hour to mix and <param>6</param> hours in packing. It takes <param>2</param> hours to produce the raw materials for one unit of <var>acrylic</var>, <param>5</param> hour to mix and <param>2.3</param> hours in packing. Per month, <limit>290</limit> hours are <const_dir>available</const_dir> for preparing the raw materials, <limit>480</limit> hours for mixing and <limit>510</limit> hours for packing the nail paints.  How many of each type of nail paint should be produced in order to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 80 gel + 200 acrylic\nst: 4 gel + 2 acrylic <= 290\n     3 gel + 5 acrylic <= 480\n     6 gel + 2.3 acrylic <= 510"}
{"input": "A paint manufacturer <const_dir>produces</const_dir> <limit>300</limit> kg of dye and <limit>200</limit> kg of filler each week. By using different combinations, they can produce three different paint products for sale: <var>Low Quality</var>, <var>Regular Quality</var>, and <var>Premium Quality</var>. The <obj_name>profit</obj_name> per kg for selling the paint is $<param>100</param>, $<param>200</param>, $<param>230</param> for the <var>low quality</var>, <var>regular quality</var>, and <var>premium quality</var> respectively. To produce 1 kg of <var>low quality paint</var> requires <param>6</param> kg of dye and <param>20</param> kg of filler. To produce 1 kg of <var>regular quality paint</var> requires <param>10</param> kg of dye and <param>10</param> kg of filler. To produce 1 kg of <var>premium quality paint</var> require <param>15</param> kg of dye and <param>2</param> kg of dye. Formulate the problem of deciding how much of each paint to make each week as a LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 100 low_quality + 200 regular_quality + 230 premium_quality\nst: 6 low_quality_paint + 10 regular_quality_paint + 15 premium_quality_paint <= 300\n     20 low_quality_paint + 10 regular_quality_paint + 2 premium_quality_paint <= 200"}
{"input": "Two brothers, John and William, run a stand selling <var>lemonade</var> and <var>brownies</var>. A pitcher of <var>lemonade</var> takes <param>0.5</param> hours of John's time along with <param>0.2</param> hours of William's time. A batch of <var>brownies</var> take <param>1</param> hour of John's time and <param>0.5</param> hours of William's time. John has <limit>10</limit> hours <const_dir>available</const_dir> each day, but since William has hockey lessons, he only has <limit>8</limit> hours <const_dir>available</const_dir> each day. They get $<param>20</param> <obj_name>profit</obj_name> per pitcher of <var>lemonade</var>, and $<param>15</param> per batch of <var>brownies</var>. Formulate a LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 20 lemonade + 15 brownies\nst: 0.5 lemonade + 1 brownies <= 10\n     0.2 lemonade + 0.5 brownies <= 8"}
{"input": "An electronics company makes <var>economical</var> and <var>premium mobile</var> phones in a factory that is divided into a hardware and software section. The hardware section must work <param>5</param> hours on each <var>economical mobile phone</var> but <param>12</param> hours on each <var>premium one</var>. The software section must work <param>3</param> hours for each mobile phone. The <obj_name>profit</obj_name> from the <var>economical mobile phone</var> is $<param>150</param> and the <obj_name>profit</obj_name> from the <var>premium mobile phone</var> is $<param>400</param>. Due to a recent strike, the hardware section only has <limit>150</limit> hours <const_dir>available</const_dir> per week and the software section only has <limit>100</limit> hours <const_dir>available</const_dir> per week. How many of each phone should the company produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 economical_mobile_phone + 400 premium_mobile_phone\nst: 5 economical_mobile_phone + 12 premium_one <= 150\n     3 economical_mobile_phone + 3 premium_one <= 100"}
{"input": "A meat processing plant has a machine that makes <var>ham</var> and <var>bacon</var>. Each kg of <var>ham</var> takes <param>15</param> minutes of machine time and each kg of <var>bacon</var> takes <param>8</param> minutes of machine time.  In a week the machine is only <const_dir>available</const_dir> for <limit>2000</limit> minutes. The plant can also make <const_dir>at most</const_dir> <limit>200</limit> kg of <var>ham</var> and <const_dir>at most</const_dir> <limit>220</limit> kg of <var>bacon</var> per week. If the <obj_name>profit</obj_name> per kg of <var>ham</var> is $<param>20</param> and the <obj_name>profit</obj_name> per kg of <var>bacon</var> is $<param>12</param>, how many of each should the plant make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 bacon + 20 ham\nst: 15 ham + 8 bacon <= 2000\n     ham <= 200\n     bacon <= 220"}
{"input": "A factory makes <var>bike tires</var> and <var>car tires</var>. <var>Bike tires</var> take <param>4</param> minutes on the manufacturing machine and <param>2</param> minutes to fill with air. <var>Car tires</var> take <param>6</param> minutes on the manufacturing machine and <param>3.5</param> minutes to fill with air. The factory can run the manufacturing machine for <const_dir>at most</const_dir> <limit>600</limit> minutes and they have <limit>400</limit> minutes <const_dir>available</const_dir> for filling the tires with air. If the <obj_name>profit</obj_name> per <var>bike tire</var> is $<param>12</param> and the <obj_name>profit</obj_name> per <var>car tire</var> is $<param>20</param>, how many of each tire should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 bike_tire + 20 car_tire\nst: 4 Bike_tires + 6 Car_tires <= 600\n     2 Bike_tires + 3.5 Car_tires <= 400"}
{"input": "A company makes <var>raincoats</var> and <var>umbrellas</var> with images of Latin alphabet on them using a printing machine. Due to the popularity of Latin alphabet, the company must make <const_dir>at least</const_dir> <limit>1200</limit> <var>raincoats</var> or <var>umbrellas</var>, in any combination, per week. Also, in one week, the printing machine must be kept running for <const_dir>at least</const_dir> <limit>70</limit> hours. A <var>raincoat</var> takes <param>0.3</param> hours of printing time and <obj_name>costs</obj_name> $<param>7</param>. An <var>umbrella</var> takes <param>0.5</param> hours of printing time and <obj_name>costs</obj_name> $<param>12</param>. Formulate this problem so as to <obj_dir>minimize</obj_dir> total production <obj_name>costs</obj_name>.", "output": "min: 12 umbrella + 7 raincoat\nst: umbrella + raincoat <= 1200\n     0.3 raincoat + 0.5 umbrella >= 70"}
{"input": "A TCM company makes powdered medicine in two different packages, a <var>regular package</var> and <var>premium package</var>, to sell to TCM doctors. The <var>regular package</var> requires <param>100</param> g of medicinal herbs and <param>30</param> seconds of drying. A <var>premium package</var> requires <param>130</param> units of medicinal herbs and <param>60</param> seconds of drying. The company has <const_dir>available</const_dir> <limit>9000</limit> units of medicinal herbs and has <const_dir>available</const_dir> <limit>3500</limit> seconds in the drying machine. Since the <var>premium package</var> sells better, the number of <var>regular packages</var> must be <const_dir>less than</const_dir> the number of <var>premium packages</var>. In addition, the company must make <const_dir>at least</const_dir> <limit>15</limit> <var>regular packages</var>. If a <var>regular package</var> can treat <param>2</param> <obj_name>people</obj_name> and a <var>premium batch</var> can treat <param>3</param> <obj_name>people</obj_name>, how many of each type of package should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 2 regular_package + 3 premium_batch\nst: 100 regular_package + 130 premium_package <= 9000\n     30 regular_package + 60 premium_package <= 3500\n     regular_packages <= premium_packages\n     regular_packages >= 15"}
{"input": "A company is delivering packages using two methods, <var>drones</var> and <var>couriers</var>. A <var>drone</var> can transport <param>4</param> <obj_name>packages</obj_name> every hour while a <var>courier</var> can transport <param>25</param> <obj_name>packages</obj_name> every hour. <var>Drones</var> cost an average of $<param>2</param> per hour to maintain and <var>couriers</var> are paid $<param>20</param> per hour. The company needs to deliver <const_dir>at least</const_dir> <limit>800</limit> packages and they can spend <const_dir>at most</const_dir> $<limit>1300</limit> per hour for delivery. Since <var>drones</var> have a high up-front cost, the number of <var>drones</var> <const_dir>cannot exceed</const_dir> the number of <var>couriers</var>. How many of each method of delivering packages should be used to <obj_dir>minimize</obj_dir> the <obj_name>total number of deliveries</obj_name> using drones and couriers?", "output": "min: 4 drone + 25 courier\nst: 4 drone + 25 courier >= 800\n     2 Drones + 20 couriers <= 1300\n     drones <= couriers"}
{"input": "A florist can deliver their flowers either by <var>car</var> or by <var>truck</var>. A <var>car</var> can deliver <param>6</param> units of flowers and uses <param>10</param> <obj_name>units of gas</obj_name>. A <var>truck</var> can deliver <param>9</param> units of flowers and uses <param>14</param> <obj_name>units of gas</obj_name>. The florist needs to deliver <const_dir>at least</const_dir> <limit>130</limit> units of flowers. Additionally, the number of <var>cars</var> used <const_dir>must exceed</const_dir> the number of <var>trucks</var> used. How many of each should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of gas</obj_name> used?", "output": "min: 10 car + 14 truck\nst: 6 car + 9 truck >= 130\n     cars <= trucks"}
{"input": "A patient lacking sleep can take two drowsiness medications, <var>sleeping pills</var>, and <var>sleep supplement</var>. Per serving, <var>sleeping pills</var> increase sleepiness by <param>2</param> units and introduces <param>0.6</param> units of discomfort. Per serving, <var>sleep supplement</var> increases sleepiness by <param>3.5</param> units and introduces <param>0.3</param> units of discomfort. Furthermore, <var>pills</var> contain <param>1</param> unit of <obj_name>sugar</obj_name> while <var>sleep supplement</var> contains <param>2.5</param> units of <obj_name>sugar</obj_name> per serving. The patient needs <const_dir>at least</const_dir> <limit>10</limit> units of sleepiness and can take <const_dir>at most</const_dir> <limit>2.5</limit> units of discomfort. How many servings of each should the patient take to <obj_dir>minimize</obj_dir> his <obj_name>sugar intake</obj_name>?", "output": "min: 1 pills + 2.5 sleep_supplement\nst: 2 sleeping_pills + 3.5 sleep_supplement >= 10\n     0.6 sleeping_pills + 0.3 sleep_supplement <= 2.5"}
{"input": "A physics class is performing a volcano experiment using two mixtures, <var>mixture A</var> and <var>mixture B.</var> <var>Mixture A</var> uses <param>3</param> units of baking soda, <param>5</param> units of vinegar, and produces <param>2</param> units of <obj_name>eruption</obj_name>. <var>Mixture B</var> uses <param>4</param> units of baking soda, <param>7</param> units of vinegar, and produces <param>4</param> units of <obj_name>eruption</obj_name>. However, <var>mixture A</var> generates <param>2</param> units of garbage and <var>mixture B</var> generates <param>1</param> unit of garbage. The physics class has <const_dir>available</const_dir> <limit>200</limit> units of baking soda and <limit>300</limit> units of vinegar. If <const_dir>at most</const_dir> <limit>60</limit> units of garbage can be generated, how many of each type of mixture should be used to <obj_dir>maximize</obj_dir> the total <obj_name>amount of eruption</obj_name> produced?", "output": "max: 2 Mixture_A + 4 Mixture_B\nst: 3 Mixture_A + 4 Mixture_B <= 200\n     5 Mixture_A + 7 Mixture_B <= 300\n     2 mixture_A + 1 mixture_B <= 60"}
{"input": "A children clothing manufacturer can either implement <var>small</var> or <var>large production lines</var>. A <var>small production line</var> is capable of creating <limit>150</limit> sets of clothing every day and takes <param>12</param> employees to run. Conversely, the children clothing manufacturer may implement a <var>large production line</var> which requires <param>26</param> employees to create <param>500</param> sets of clothing per day. <const_dir>There are</const_dir> <limit>435</limit> employees and the manufacturer must meet the demand of <const_dir>at least</const_dir> <limit>6300</limit> sets of children clothing every day. How many of each <obj_name>production line</obj_name> type should be put in place to <obj_dir>decrease</obj_dir> the total <obj_name>number of production lines</obj_name>?", "output": "dec: \nst: 12 small_production_line + 26 large_production_line <= 435\n     500 large_production_line >= 6300"}
{"input": "A lumber company owns and can use <const_dir>at most</const_dir> <limit>450</limit> acres of land where they can transport the <obj_name>lumber</obj_name> out using <var>large</var> and <var>small logging trucks</var>. Per acre of land, <var>small logging trucks</var> can be used to transport <param>3</param> units of <obj_name>wood</obj_name>. Per acre of land, a <var>large logging truck</var> can transport <param>7</param> units of <obj_name>wood</obj_name>. However, a <var>small logging truck</var> produces <param>12</param> units of carbon dioxide and requires <param>7</param> units of gasoline per acre. A <var>large logging truck</var> produces <param>25</param> units of carbon dioxide and requires <param>12</param> units of gasoline per acre. The lumbering company has <const_dir>access</const_dir> to <limit>3200</limit> units of gasoline and the company has vowed to <const_dir>limiting</const_dir> pollution to <limit>5200</limit> units of carbon dioxide. How should the two types of logging trucks be distributed to stay within the limits of carbon dioxide while <obj_dir>maximizing</obj_dir> the <obj_name>amount of wood</obj_name> transported?", "output": "max: 3 small_logging_trucks + 7 large_logging_truck\nst: 12 large_logging_truck + 7 small_logging_truck <= 3200\n     12 small_logging_truck + 25 large_logging_truck <= 5200\n     small_logging_trucks + large_logging_truck <= 450"}
{"input": "A supermarket can purchase two types of refrigerators to properly store their food, <var>refrigerator ABC</var> and <var>refrigerator XYZ</var>, and they have different specifications to consider. <var>Refrigerator ABC</var> is larger and can store <param>120</param> items but uses <param>3</param> kWh. <var>Refrigerator XYZ</var> is smaller more efficient and can store <param>80</param> items but uses <param>1</param> kWh. Due to soaring electric prices, the store is limited to <const_dir>at most</const_dir> <limit>55</limit> kWh but must store <const_dir>at least</const_dir> <limit>1500</limit> items. The store must have <const_dir>at least</const_dir> <limit>8</limit> <var>refrigerator ABC</var>\u2019s and <limit>5</limit> <var>refrigerator XYZ</var>\u2019s. How many of each type of refrigerator should the supermarket purchase to <obj_dir>minimize</obj_dir> the <obj_name>number of refrigerators</obj_name> needed?", "output": "min: \nst: 3 Refrigerator_ABC + 1 Refrigerator_XYZ <= 55\n     80 Refrigerator_XYZ + 120 Refrigerator_ABC >= 1500\n     refrigerator_ABC >= 8\n     refrigerator_XYZ >= 5"}
{"input": "An MOA checks a patient\u2019s eye pressure one-by-one either by using a <var>tonometer</var> or a <var>\u201cpuff of air\u201d test</var>. The <var>tonometer test</var> takes <param>0.05</param> hours to make a reading while the <var>\u201dpuff of air\u201d test</var> takes <param>0.02</param> hours to make a reading. Since the <var>tonometer</var> is more standard, the number of <var>tonometer tests</var> must be <const_dir>larger than</const_dir> the number of <var>\u201cpuff of air\u201d tests</var>. Since a lot of these <obj_name>patients</obj_name> are low risk here for a check-up, <const_dir>at least</const_dir> <limit>30</limit> <obj_name>patients</obj_name> should have their eye pressure checked using the <var>\u201cpuff of air\u201d test</var>. If the office is <const_dir>open for</const_dir> <limit>8</limit> hours, <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> whose temperature can be taken?", "output": "max: \nst: 0.05 tonometer_test + 0.02 \u201dpuff_of_air\u201d_test <= 8\n     tonometer_tests <= \u201cpuff_of_air\u201d_tests\n     \u201cpuff_of_air\u201d_test >= 30"}
{"input": "Banking firm ABC can build <var>remote</var> and <var>urban branches</var> to expand their reach to customers. A <var>remote branch</var> expects <limit>5</limit> new account registrations per day and requires <param>2</param> registration experts. An <var>urban branch</var> generally opens accounts for <limit>12</limit> new account registrations every day and requires <param>7</param> registration experts. The bank has <const_dir>available</const_dir> <limit>550</limit> registration experts and wants to open <const_dir>at least</const_dir> <limit>1200</limit> new accounts every day. How many of each type of <obj_name>branch</obj_name> should banking firm ABC open to <obj_dir>minimize</obj_dir> the total <obj_name>number of branches</obj_name> needed?", "output": "min: \nst: 2 remote_branch + 7 urban_branch <= 550\n      >= 1200"}
{"input": "A logging company ships their lumber to a nearby country using <var>logging trucks</var> and by <var>lumber carrier vessels</var>. Each <var>logging truck</var> <obj_name>costs</obj_name> the logging company $<param>250</param> for every trip and moves <param>1000</param> lbs of lumber. A <var>lumber carrier vessel</var> <obj_name>costs</obj_name> $<param>1000</param> every trip and moves <param>6000</param> lbs of lumber. Due to limited waters and difficulties in scheduling the trips for <var>lumber carrier vessels</var>, the company\u2019s management asks that the number of <var>logging trucks</var> <const_dir>must exceed</const_dir> the number of <var>lumber carrier vessels</var>. The logging company must transport <const_dir>at least</const_dir> <limit>300000</limit> lbs of lumber to the nearby country. How many of each type of transportation should the company schedule to move their lumber to <obj_dir>minimize</obj_dir> the <obj_name>total cost</obj_name>?", "output": "min: 250 logging_truck + 1000 lumber_carrier_vessel\nst: logging_trucks <= lumber_carrier_vessels\n     6000 lumber_carrier_vessel + 1000 logging_truck >= 300000"}
{"input": "A tutoring company hires <var>full-time tutors</var> and supplements with <var>assistant tutors</var> from a nearby high school. Every day, <var>full-time tutors</var> work <param>8</param> hours and get paid $<param>650</param> while <var>assistant tutors</var> work <param>4</param> hours and get paid $<param>120</param>. During Christmas break, the tutoring company expects more interest and plans to <const_dir>require</const_dir> <limit>1200</limit> hours of teaching availability. If the tutoring company has a <const_dir>budget</const_dir> of $<limit>55000</limit>, how many <var>tutors</var> and <var>assistant tutors</var> should be hired to <obj_dir>minimize</obj_dir> the <obj_name>amount of staff</obj_name>?", "output": "min: \nst: 8 full-time_tutors + 4 assistant_tutors >= 1200\n     120 assistant_tutors + 650 full-time_tutors <= 55000"}
{"input": "A physics teacher shows her students two experiments, a <var>force experiment</var> and a <var>hydraulics experiment</var>. In the <var>force experiment</var>, <param>5</param> units of the solid and <param>2</param> units of the gas mixes and reacts to create <param>3</param> units of <obj_name>excitement</obj_name>. In the <var>hydraulics experiment</var>, <param>7</param> units of the solid and <param>6</param> units of the gas mixes and reacts to create <param>5</param> units of <obj_name>excitement</obj_name>. In addition, the <var>hydraulics experiment</var> produces <param>2</param> units of heat while the <var>force experiment</var> produces <param>3</param> units of heat.  The lab has <const_dir>available</const_dir> <limit>90</limit> units of the solid and <limit>85</limit> units of the gas. If <const_dir>at most</const_dir> <limit>15</limit> units of heat can be produced, how many experiments of each should be done to <obj_dir>maximize</obj_dir> the <obj_name>total excitement</obj_name>?", "output": "max: 3 force_experiment + 5 hydraulics_experiment\nst: 5 force_experiment + 7 hydraulics_experiment <= 90\n     2 force_experiment + 6 hydraulics_experiment <= 85\n     2 hydraulics_experiment + 3 force_experiment <= 15"}
{"input": "A sample can be analyzed by two machines for their chemical make-up, <var>Analyzer 3000</var> and <var>QuickAnalytics.</var> <var>Analyzer 3000</var> analyzes <param>20</param> samples of water and <param>30</param> samples of dirt per hour. <var>QuickAnalytics</var> examines <param>40</param> samples of water and <param>10</param> samples of dirt per hour. In addition, <var>Analyzer 3000</var> creates <param>3.5</param> units of <obj_name>heat</obj_name> per hour while <var>QuickAnalytics</var> creates <param>4.5</param> units of <obj_name>heat</obj_name> per hour. If <const_dir>at least</const_dir> <limit>1000</limit> samples of water and <limit>800</limit> samples of dirt must be analyzed, how many hours should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>total amount of heat</obj_name> produced?", "output": "min: 3.5 Analyzer_3000 + 4.5 QuickAnalytics\nst: 20 Analyzer_3000 + 40 QuickAnalytics >= 1000\n     30 Analyzer_3000 + 10 QuickAnalytics >= 800"}
{"input": "A university has a car building fundraiser where students build <var>toy cars</var> and <var>toy trucks</var> using wheels and wood and sell to benefit a nearby shelter. A <var>toy car</var> requires <param>4</param> wheels and <param>7</param> units of wood while a <var>toy truck</var> requires <param>6</param> wheels and <param>10</param> units of wood. Each team has <const_dir>at most</const_dir> <limit>40</limit> wheels and <limit>75</limit> units of wood. In addition, each team can build <const_dir>at most</const_dir> <limit>3</limit> <var>toy cars</var> and the number of <var>toy trucks</var> <const_dir>must be larger than</const_dir> the number <var>toy cars</var>. If a <var>toy car</var> can <obj_name>fundraise</obj_name> $<param>30</param> and a <var>toy truck</var> can <obj_name>fundraise</obj_name> $<param>35</param>, how many of each toy should a team build to <obj_dir>maximize</obj_dir> the <obj_name>total amount fundraised</obj_name>?", "output": "max: 30 toy_car + 35 toy_truck\nst: 4 toy_car + 6 toy_truck <= 40\n     7 toy_car + 10 toy_truck <= 75\n     toy_cars <= 3\n     toy_trucks <= toy_cars"}
{"input": "Architects ABC has a <const_dir>budget</const_dir> of <limit>one hundred thousand</limit> dollars to spend every week on their employees. They hire <var>architects</var> and <var>drafters</var> to help with their clients\u2019 projects. An <var>architect</var> averages <param>3000</param> dollars every week and can complete <param>2</param> <obj_name>projects</obj_name> every week. A <var>drafter</var> does not have all the certifications and requires an architect for supervision at all times. Therefore, there <const_dir>must be more</const_dir> <var>architects</var> than <var>drafters</var>. Additionally, a <var>drafter</var> averages <param>1200</param> dollars every week and completes <param>1</param> <obj_name>project</obj_name> every week. How many architects and drafters should be contracted to <obj_dir>maximize</obj_dir> the <obj_name>number of projects completed</obj_name> every week?", "output": "max: 1 drafter + 2 architect\nst: 3000 architect + 1200 drafter <= one hundred thousand\n     architects <= drafters"}
{"input": "A manufacturing plant has the option to offer a <var>shuttle bus</var> and outsource to a <var>taxi service</var>. A <var>shuttle bus</var> <obj_name>costs</obj_name> $<param>20</param> and carries <param>7</param> workers, whereas a <var>taxi service</var> <obj_name>costs</obj_name> $<param>50</param> and carries <param>5</param> workers. The manufacturing plant has to transport <const_dir>at least</const_dir> <limit>250</limit> workers and <const_dir>at most</const_dir> <limit>5</limit> <var>shuttle buses</var> can be used. How many of each type of transport should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>cost</obj_name>?", "output": "min: 20 shuttle_bus + 50 taxi_service\nst: 7 shuttle_bus + 5 taxi_service >= 250\n     shuttle_buses <= 5"}
{"input": "A researcher is transporting their arsenal of imaging systems using two different methods, by <var>delivery truck</var> and by <var>van</var>. Transporting by <var>delivery truck</var> takes <param>12</param> <obj_name>hours</obj_name> and costs $<param>300</param> per trip. Transporting by <var>van</var> takes <param>10</param> <obj_name>hours</obj_name> and costs $<param>200</param> per trip. The researcher <const_dir>needs to transport</const_dir> <limit>20</limit> trips worth of equipment and has a <const_dir>budget</const_dir> of $<limit>5500</limit>. Additionally, the number of transports by the <var>delivery truck</var> must be <const_dir>less than</const_dir> the number of transports by <var>van</var>. How many of each transportation method should they use to <obj_dir>minimize</obj_dir> the total <obj_name>number of hours</obj_name> spent on delivery?", "output": "min: 12 delivery_truck + 10 van\nst: delivery_truck <= van\n     300 delivery_truck + 200 van <= 5500\n     delivery_truck + van <= 20"}
{"input": "A water purification station has a <var>large plant</var> and a <var>small plant</var>. The <var>large plant</var> purifies <param>30</param> units of water per <obj_name>hour</obj_name> and produces <param>20</param> units of by-product per <obj_name>hour</obj_name>. The <var>small plant</var> purifies <param>12</param> units of water per <obj_name>hour</obj_name> and produces <param>2</param> units of by-product per <obj_name>hour</obj_name>. The <var>large plant</var> requires <param>15</param> filters while the <var>small plant</var> requires <param>12</param> filters per <obj_name>hour</obj_name>. The water purification station only has <const_dir>available</const_dir> <limit>1200</limit> filters right now. If the station must purify <const_dir>at least</const_dir> <limit>1200</limit> units of water and <const_dir>at least</const_dir> <limit>500</limit> units of by-product, how many <obj_name>hours</obj_name> should each plant be run to <obj_dir>minimize</obj_dir> the total <obj_name>time</obj_name> needed?", "output": "min: \nst: 30 large_plant + 12 small_plant >= 1200\n     20 large_plant + 2 small_plant >= 500\n     15 large_plant + 12 small_plant <= 1200"}
{"input": "A garbage collection company uses two types of vehicles, <var>truck A</var> and <var>truck B.</var> <var>Truck A</var> requires <param>3</param> workers while <var>truck B</var> requires <param>4</param> workers. <var>Truck A</var> can collect <param>40</param> <obj_name>units of garbage</obj_name> and <var>truck B</var> can collect <param>50</param> <obj_name>units of garbage</obj_name>. The garbage collection company <const_dir>has</const_dir> employed <limit>150</limit> workers. The company must use <const_dir>more</const_dir> <var>truck A</var> models than <var>truck B</var> models. Additionally, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>truck A</var>\u2019s and <limit>8</limit> <var>truck B</var>\u2019s. How many of each type of vehicles should the company use to <obj_dir>maximize</obj_dir> the total <obj_name>amount of garbage</obj_name> that can be collected?", "output": "max: 40 Truck_A + 50 truck_B\nst: 3 Truck_A + 4 truck_B <= 150\n     truck_A <= truck_B\n     truck_A >= 5\n     truck_B >= 8"}
{"input": "A doctor can prescribe two types of medication for high glucose levels, a <var>diabetic pill</var> and a <var>diabetic shot</var>. Per dose, <var>diabetic pill</var> delivers <param>1</param> unit of glucose reducing medicine and <param>2</param> units of <obj_name>blood pressure reducing medicine</obj_name>. Per dose, a <var>diabetic shot</var> delivers <param>2</param> units of glucose reducing medicine and <param>3</param> units of <obj_name>blood pressure reducing medicine</obj_name>. In addition, <var>diabetic pills</var> provide <param>0.4</param> units of stress and the <var>diabetic shot</var> provides <param>0.9</param> units of stress. <const_dir>At most</const_dir> <limit>20</limit> units of stress can be applied over a week and the doctor must deliver <const_dir>at least</const_dir> <limit>30</limit> units of glucose reducing medicine. How many doses of each should be delivered to <obj_dir>maximize</obj_dir> the <obj_name>amount of blood pressure reducing medicine</obj_name> delivaered to the patient?", "output": "max: 3 diabetic_shot + 2 diabetic_pill\nst: 1 diabetic_pill + 2 diabetic_shot >= 30\n     0.4 diabetic_pills + 0.9 diabetic_shot <= 20"}
{"input": "There are two methods of extracting a <obj_name>chemical element</obj_name>, <var>method X</var> and <var>method Y.</var>  <var>Method X</var> requires <param>5</param> atomic units (au) of aluminum, <param>1</param> au of oxygen, and can extract <param>0.5</param> au of the <obj_name>desired chemical element</obj_name>. <var>Method Y</var> requires <param>6</param> au of aluminum, <param>2</param> au of oxygen, and can extract <param>0.7</param> au of the <obj_name>desired chemical element</obj_name>. There are <limit>650</limit> au of aluminum, and <limit>425</limit> au of oxygen <const_dir>available</const_dir>. What is the best combination of these two methods to <obj_dir>maximize</obj_dir> the total <obj_name>amount of desired chemical element</obj_name>?", "output": "max: 0.5 Method_X + 0.7 Method_Y\nst: 5 Method_X + 6 Method_Y <= 650\n     1 Method_X + 2 Method_Y <= 425"}
{"input": "A toy storage company needs to transport toys using a <var>manual pallet jack</var> or an <var>electric pallet jack</var>. The toy storage company has access to <const_dir>at most</const_dir> <limit>6</limit> <var>manual pallet jacks</var> and <limit>15</limit> <var>electric pallet jacks</var>. The <var>manual pallet jacks</var> can transport <param>15</param> <obj_name>boxes</obj_name> every hour while <var>electric pallet jacks</var> can transport <param>25</param> <obj_name>boxes</obj_name> every hour. Since <var>electric jacks</var> require less work, the number of <var>electric pallet jacks</var> <const_dir>must exceed</const_dir> the number of <var>manual pallet jacks</var>. If the company can use <const_dir>at most</const_dir> <limit>8</limit> <var>manual pallet jacks</var> and <const_dir>at least</const_dir> <limit>5</limit> <var>electric pallet jacks</var>, how many of each should the company use to <obj_dir>maximize</obj_dir> the <obj_name>number of boxes</obj_name> they can transport?", "output": "max: 15 manual_pallet_jacks + 25 electric_pallet_jacks\nst: electric_pallet_jacks <= manual_pallet_jacks\n     manual_pallet_jacks <= 8\n     electric_pallet_jacks >= 5\n     manual_pallet_jacks <= 6\n     electric_pallet_jacks <= 15"}
{"input": "A chemist is performing novel research to create <obj_name>element A</obj_name> using two known methods: the <var>gamma experiment</var> and the <var>omega experiment</var>. The <var>gamma experiment</var> creates <param>12</param> units of <obj_name>element A</obj_name> and uses <param>3</param> units of electricity, <param>6</param> units of copper, and <param>3</param> minutes. The <var>omega experiment</var> creates <param>16</param> units of <obj_name>element A</obj_name> and uses <param>2</param> units of electricity, <param>9</param> units of copper, and <param>1</param> minutes. The chemist has <const_dir>available</const_dir> <limit>1000</limit> minutes, <limit>4200</limit> units of copper, and <limit>1100</limit> units of electricity. How many of each experiment should the chemist perform to <obj_dir>maximize</obj_dir> the <obj_name>total amount of element A produced</obj_name>?", "output": "max: 12 gamma_experiment + 16 omega_experiment\nst: 3 gamma_experiment + 1 omega_experiment <= 1000\n     6 gamma_experiment + 9 omega_experiment <= 4200\n     3 gamma_experiment + 2 omega_experiment <= 1100"}
{"input": "A strawberry farmer has <const_dir>available</const_dir> <limit>225</limit> hectares of land and she needs to harvest the <obj_name>strawberries</obj_name> either through <var>employees</var> or <var>U-pick</var>. For each hectare of land, <var>employees</var> can hand-pick <param>60</param> lbs of <obj_name>strawberries</obj_name> which creates <param>5</param> lbs of waste, and takes <param>30</param> minutes. Conversely, for each hectare of land, opening the farm for <var>U-pick</var> can pick <param>45</param> lbs of <obj_name>strawberries</obj_name> which creates <param>20</param> lbs of waste, but only takes <param>20</param> minutes. The farmer has a maximum amount of people allowed on the field at all times and due to the restriction of trying to sell the product while it is still fresh, expects that at maximum capacity she only has <limit>8000</limit> minutes <const_dir>available</const_dir> for picking. Additionally, there can be <const_dir>at most</const_dir> <limit>6400</limit> lbs of waste. How many hectares should be allocated to each harvesting technique to <obj_dir>maximize</obj_dir> the <obj_name>amount of strawberries</obj_name> that can be picked?", "output": "max: 60 employees + 45 U-pick\nst: employees + U-pick <= 225\n     20 U-pick + 30 employees <= 8000\n     5 employees + 20 U-pick <= 6400"}
{"input": "Emergency supplies need to be delivered to a remote area and can either go by <var>airplane</var> or <var>helicopter</var>. An <var>airplane</var> can transport <param>35</param> units of goods and takes <param>30</param> <obj_name>minutes</obj_name> while a <var>helicopter</var> can transport <param>20</param> units of goods and takes <param>10</param> <obj_name>minutes</obj_name> due to easier take-off and landing. The number of <var>helicopters</var> <const_dir>must exceed</const_dir> the number of <var>airplanes</var>. Additionally, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>airplanes</var> to fully utilize the landing space.  If there needs to be <const_dir>at least</const_dir> <limit>500</limit> units of goods transported, how many of each type of transportation should be utilized to <obj_dir>minimize</obj_dir> the total <obj_name>number of minutes</obj_name> needed?", "output": "min: 30 airplane + 10 helicopter\nst: 35 airplane + 20 helicopter >= 500\n     helicopters <= airplanes\n     airplanes >= 5"}
{"input": "A commercial fishing company has <const_dir>available</const_dir> <limit>200</limit> square kilometers of water that they can fish from. They can either allocate a square kilometer for <var>fish farming</var> or <var>trawling</var>. For each square kilometer of ocean, <var>fish farming</var> causes <param>8</param> units of pollution and nets <param>4</param> tons of <obj_name>fish</obj_name> and requires <param>6</param> workers every day. For each square kilometer of ocean, <var>trawling</var> causes <param>10</param> units of pollution, nets <param>3</param> tons of <obj_name>fish</obj_name> and requires <param>2</param> workers every day. Due to environmental regulations, there must be <const_dir>at most</const_dir> <limit>1700</limit> units of pollution and the company has <const_dir>available</const_dir> <limit>500</limit> workers daily. Find the proportion of lands that use each fishing technique to <obj_dir>maximize</obj_dir> the <obj_name>daily yield of fish</obj_name>.", "output": "max: 4 fish_farming + 3 trawling\nst: 10 trawling + 8 fish_farming <= 1700\n     6 fish_farming + 2 trawling <= 500\n     fish_farming + trawling <= 200"}
{"input": "A chemical company makes an acidic liquid and a basic liquid using two types of techniques, <var>reaction X</var> and <var>reaction Y.</var> <var>Reaction X</var> can make <param>35</param> au of the acidic liquid and <param>75</param> au of the basic liquid per <obj_name>minute</obj_name>. <var>Reaction Y</var> can make <param>42</param> au of the acidic liquid and <param>35</param> au of the basic liquid per <obj_name>minute</obj_name>. Furthermore, <var>reaction X</var> requires <param>18</param> units of heat every <obj_name>minute</obj_name> while <var>reaction Y</var> requires <param>12</param> units of heat every <obj_name>minute</obj_name>. The chemical company has the capacity to generate <const_dir>at most</const_dir> <limit>1400</limit> units of heat every <obj_name>minute</obj_name>. If the chemical company needs to make <const_dir>at least</const_dir> <limit>900</limit> au of the acidic liquid and <limit>1200</limit> au of the basic liquid per <obj_name>minute</obj_name>, how many <obj_name>minutes</obj_name> should each reaction be run for to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst: 35 Reaction_X + 42 Reaction_Y >= 900\n     75 Reaction_X + 35 Reaction_Y >= 1200\n     18 reaction_X + 12 reaction_Y <= 1400"}
{"input": "An arcade is implementing two systems, a <var>card-based system</var> and a <var>coin-based system</var>. A <var>card-based system</var> can accept <param>60</param> guests per hour. Conversely, a <var>coin-based system</var> can only accept <limit>45</limit> guests per hour. The <var>card-based machine</var> needs <param>6</param> units of electricity every hour while the <var>coin-based machine</var> needs only <param>4</param> units of electricity every hour. The arcade needs to be able to accept <const_dir>at least</const_dir> <limit>1500</limit> guests per hour but <const_dir>only</const_dir> has access to <limit>145</limit> units of electricity every hour. Since most guests prefer to use cards, there <const_dir>must be more</const_dir> <var>card-based</var> than <var>coin-based machines</var>. How many of each machine should be kept in the arcade to <obj_dir>minimize</obj_dir> the <obj_name>total number of machines</obj_name> in the arcade?", "output": "min: \nst: 60 card-based_system >= 1500\n     4 coin-based_machine + 6 card-based_machine <= 145\n     card-based <= coin-based_machines"}
{"input": "An engineering kids kit has two sets, a <var>mechanical</var> and <var>chemistry kit</var>. The <var>mechanical kit</var> requires <param>2</param> units of plastic, <param>4</param> units of materials and entertains a kid for <param>4</param> <obj_name>hours</obj_name>. The <var>chemistry kit</var> requires <param>3</param> units of plastic, <param>7</param> units of materials and entertains a kid for <param>2</param> <obj_name>hours</obj_name>. The <var>chemistry kit</var> however produces <param>8</param> units of waste while the <var>mechanical kit</var> produces <param>5</param> units of waste. The company has <const_dir>available</const_dir> <limit>500</limit> units of plastic and <limit>450</limit> units of materials. If the company has committed to producing <const_dir>at most</const_dir> <limit>300</limit> units of waste, how many of each type of kit should the company make to <obj_dir>maximize</obj_dir> the number of <obj_name>hours of entertainment</obj_name>?", "output": "max: 4 mechanical_kit + 2 chemistry_kit\nst: 2 mechanical_kit + 3 chemistry_kit <= 500\n     4 mechanical_kit + 7 chemistry_kit <= 450\n     8 chemistry_kit + 5 mechanical_kit <= 300"}
{"input": "An extremely large mall needs <const_dir>at least</const_dir> <limit>100</limit> transportation methods for customers to move up and down floors. They can either purchase an <var>escalator</var> or an <var>elevator</var>. Due to space limitations, there <limit>must be more</limit> <var>escalators</var> than <var>elevators</var>, but for convenience, there must be <const_dir>at least</const_dir> <limit>10</limit> <var>elevators</var>. An <var>elevator</var> can transport <param>1000</param> <obj_name>customers</obj_name> every day and uses <param>6</param> units of electricity in that time span. An <var>escalator</var> can transport <param>2400</param> <obj_name>customers</obj_name> every day and uses <param>9</param> units of electricity in that time span. The mall has <const_dir>available</const_dir> <limit>800</limit> units of electricity every day. How many of each transportation method should the mall install to <obj_dir>maximize</obj_dir> the <obj_name>number of customers</obj_name> they can transport every day?", "output": "max: 1000 elevator + 2400 escalator\nst: elevator + escalator <= 100\n     elevators >= 10\n     6 elevator + 9 escalator <= 800"}
{"input": "A restaurant chain can make two types of meals, a <var>steak</var> or <var>vegetarian meal</var>. The <var>steak meal</var> makes $<param>18</param> profit each and it takes <param>3</param> minutes for a chef to make. A <var>vegetarian meal</var> makes $<param>9</param> profit each and takes <param>2</param> minutes for a chef make. The restaurant chain needs to make <const_dir>at least</const_dir> $<limit>500</limit> profit every day and has <const_dir>available</const_dir> <limit>1000</limit> minutes of chef involvement. How many of each meal should the restaurant try to push through the waiting staff to <obj_dir>minimize</obj_dir> the total <obj_name>number of meals</obj_name> they need to make?", "output": "min: \nst: 9 vegetarian_meal + 18 steak_meal >= 500\n     2 vegetarian_meal + 3 steak_meal <= 1000"}
