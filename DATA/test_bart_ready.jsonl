{"input": "A fishery wants to transport their catch. They can either use local <var>sled dogs</var> or <var>trucks</var>. Local <var>sled dogs</var> can take <param>100</param> <obj_name>fish</obj_name> per trip while <var>trucks</var> can take <param>300</param> <obj_name>fish</obj_name> per trip. The cost per trip for <var>sled dogs</var> is $<param>50</param> while the cost per trip for a <var>truck</var> is $<param>100</param>. The <const_dir>budget</const_dir> is at most $<limit>1000</limit> and the number of <var>sled dog</var> trips must be <const_dir>less than</const_dir> the number of <var>truck</var> trips. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of fish</obj_name> that can be transported.", "output": "max: 100 sled_dogs + 300 trucks\nst:"}
{"input": "An office supply company makes two types of printers: <var>color printers</var> and <var>black and white printers</var>. Different sections of the factory with different teams produce each printer. The color printer team can produce <const_dir>at most</const_dir> <limit>20</limit> <var>color printers</var> per day while the black and white printer team can produce <const_dir>at most</const_dir> <limit>30</limit> <var>black and white printers</var> per day. Both teams require use of the same paper tray installing machine and this machine can make <const_dir>at most</const_dir> <limit>35</limit> printers of either type each day. <var>Color printers</var> generate a <obj_name>profit</obj_name> of $<param>200</param> per printer while <var>black and white printers</var> generate a <obj_name>profit</obj_name> of $<param>70</param> per printer. How many of each printer should be made to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 200 Color_printers + 70 black_and_white_printers\nst: color_printers <= 20\nblack_and_white_printers <= 30\nColor_printers + black_and_white_printers <= 35"}
{"input": "An accounting firm has <var>senior accountants</var> <obj_name>earning</obj_name> $<param>3000</param> per week and <var>junior accountants</var> <obj_name>earning</obj_name> $<param>1000</param> per week. The contracts with companies to provide accounting services require <const_dir>at least</const_dir> <limit>100</limit> accountants, of whom <const_dir>at least</const_dir> <limit>5</limit> must be <var>senior accountants</var>. To make sure there is enough experience on the accounting team, the number of <var>senior accountants</var> should be <const_dir>at least</const_dir> a <param>third</param> of the number to <var>junior accountants</var>. The firm wants to keep the weekly wage bill <const_dir>below</const_dir> $<limit>150000</limit>. Formulate an LP to <obj_dir>minimize</obj_dir> the <obj_name>wage bill</obj_name>.", "output": "min: 3000 senior_accountants + 1000 junior_accountants\nst: senior_accountants + junior_accountants <= 100\nsenior_accountants >= 5"}
{"input": "Ben is growing <var>apples</var> and <var>pears</var> on his orchard. He has <limit>50</limit> acres <const_dir>available</const_dir> on which he must grow a <const_dir>minimum</const_dir> of <limit>5</limit> acres of <var>apples</var> and a <const_dir>minimum</const_dir> of <limit>10</limit> acres of <var>pears</var> to meet demands. The <obj_name>profit</obj_name> per <var>apple</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>pear</var> is $<param>4</param>. He prefers to grow more <var>pears</var> than <var>apples</var> but limitations in his workforce allow him to grow <const_dir>at most</const_dir> <param>twice</param> the amount of <var>pears</var> as <var>apples</var>. How many of each fruit should Ben grow in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>? What is that profit?", "output": "max: 2 apple + 4 pear\nst: apple + pear <= 50\napples >= 5\npears >= 10"}
{"input": "A lighting company makes <var>desk-lamps</var> and <var>night-lamps</var>. There is an expected demand of <const_dir>at least</const_dir> <limit>30</limit> <var>desk-lamps</var> and <limit>50</limit> <var>night-lamps</var> each day. However, due to the size of their factory, they can make <const_dir>at most</const_dir> <limit>150</limit> <var>desk-lamps</var> and <limit>180</limit> <var>night-lamps</var> per day. To satisfy a contract, a <const_dir>minimum</const_dir> of <limit>100</limit> lamps must be made each day. If the <obj_name>profit</obj_name> per <var>desk-lamp</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>night-lamp</var> sold is $<param>8</param>, how many lamps of each type should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 night-lamp + 5 desk-lamp\nst: desk-lamps >= 30\nnight-lamps >= 50\ndesk-lamps <= 150\nnight-lamps <= 180\nnight-lamp + desk-lamp <= 100"}
{"input": "Mr. Roberts want to invest in the <var>telecom</var> and <var>healthcare</var> industries. He <const_dir>has</const_dir> $<limit>100000</limit> to invest. He has decided that the amount invested in <var>telecom</var> be <const_dir>at least</const_dir> <param>three</param> times as much as the amount invested in <var>healthcare</var>. But the money invested in <var>telecom</var> must be <const_dir>at most</const_dir> $<limit>70000</limit>. If investments in <var>telecom</var> <obj_name>earn</obj_name> <param>3%</param> and investments in <var>healthcare</var> <obj_name>earn</obj_name> <param>1%</param>, how much should Mr. Roberts invest in each to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3% telecom + 1% healthcare\nst: telecom + healthcare <= 100000\ntelecom <= 70000"}
{"input": "A farmer has <limit>140</limit> hectares <const_dir>available</const_dir> to grow <var>tomatoes</var> and <var>potatoes</var>. She prefers to plant more <var>tomatoes</var> than <var>potatoes</var>, but the soil and weather conditions allow her to grow <const_dir>at most</const_dir> <param>twice</param> the amount of <var>tomatoes</var> to that of <var>potatoes</var>. In addition, she must grow <const_dir>at least</const_dir> <limit>20</limit> hectares of <var>tomatoes</var> and <const_dir>at least</const_dir> <limit>30</limit> hectares of <var>potatoes</var> to meet community demands. If the <obj_name>profit</obj_name> per hectare of <var>tomatoes</var> is $<param>350</param> and the <obj_name>profit</obj_name> per hectare of <var>potatoes</var> is $<param>600</param>, how many hectares of each crop should she plant to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is this profit?", "output": "max: 350 tomatoes + 600 potatoes\nst: tomatoes + potatoes <= 140\ntomatoes >= 20\npotatoes >= 30"}
{"input": "A audio company make two types of headphones: <var>wired headphones</var> and <var>wireless headphones</var>. Two different teams make each type of headphones. The wired team can make <const_dir>at most</const_dir> <limit>100</limit> <var>wired headphones</var> per day and the wireless team can make <const_dir>at most</const_dir> <limit>170</limit> <var>wireless headphones</var> per day. Both teams require use of a shared audio testing machine, and this machine can be used to make a <const_dir>maximum</const_dir> of <limit>150</limit> headphones per day. The <obj_name>profit</obj_name> per <var>wired headphone</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>wireless headphone</var> $<param>20</param>. How many of each headphone should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 wired_headphone + 20 wireless_headphone\nst: wired_headphones <= 100\nwireless_headphones <= 170\nwired_headphone + wireless_headphone <= 150"}
{"input": "Jacob <const_dir>has</const_dir> $<limit>3000</limit> to invest. He has decided to invest in his favorite <var>clothing company</var> and his favorite <var>tech company</var>. He has decided that the money invested in his favorite <var>clothing company</var> must be <const_dir>at least</const_dir> <param>four</param> times as much as the amount invested in his favorite <var>tech company</var>. He has also limited himself to invest <const_dir>at most</const_dir> $<limit>500</limit> in his favorite <var>tech company</var>. If the money invested in his favorite <var>clothing company</var> <obj_name>earns</obj_name> <param>7%</param> and the money invested in his favorite <var>tech company</var> <obj_name>earns</obj_name> <param>10%</param>, how much should he invest in each to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 7% clothing_company + 10% tech_company\nst: clothing_company + tech_company <= 3000\ntech_company <= 500"}
{"input": "Each month a store owner can spend <const_dir>at most</const_dir> $<limit>500</limit> on <var>carrots</var> and <var>cucumbers</var>. A <var>carrot</var> costs the store owner $<param>0.30</param> and a <var>cucumber</var> costs the store owner $<param>0.50</param>. Each <var>carrot</var> is sold for a <obj_name>profit</obj_name> of $<param>0.75</param> and each <var>cucumber</var> is sold for a <obj_name>profit</obj_name> of $<param>0.80</param>. The owner estimates that the number of <var>cucumbers</var> sold is <const_dir>at most</const_dir> a <param>third</param> of the number of <var>carrots</var> sold. He also estimates that <const_dir>at least</const_dir> <limit>300</limit> <var>carrots</var> but <const_dir>at most</const_dir> <limit>500</limit> <var>carrots</var> are sold each month. How many of each, <var>carrots</var> and <var>cucumbers</var>, should be sold in order to <obj_dir>maximize</obj_dir> the <obj_name>profit</obj_name>?", "output": "max: 0.75 carrot + 0.80 cucumber\nst: carrots >= 300\ncarrots <= 500"}
{"input": "A farmer wants to manufacture a special plant nutrition using fertilizers <var>A</var> and <var>B.</var> Each kg of <var>fertilizer A</var> contains <param>13</param> units of nitrogen, <param>5</param> units of phosphoric acid, <param>6</param> units of vitamin A and <param>5</param> units of <obj_name>vitamin D.</obj_name> Each kg of <var>fertilizer B</var> contains <param>8</param> units of nitrogen, <param>14</param> units of phosphoric acid, <param>6</param> units of vitamin A and <param>9</param> units of <obj_name>vitamin D.</obj_name> To be effective, the plant nutrition requires a <const_dir>minimum</const_dir> <limit>220</limit> units of nitrogen, a <const_dir>minimum</const_dir> of <limit>160</limit> units of phosphoric acid, and <const_dir>no more than</const_dir> <limit>350</limit> units of vitamin A. How many kg of each fertilizer should be used to <obj_dir>minimize</obj_dir> the <obj_name>amount of vitamin D</obj_name> in the nutrition? What is the minimum amount of vitamin D?", "output": "min: 5 fertilizer_A + 9 fertilizer_B\nst:"}
{"input": "Mrs. Watson wants to invest in the real-estate market and has a total budget of <const_dir>at most</const_dir> $<limit>760000</limit>. She has two choices which include <var>condos</var> and <var>detached houses</var>. Each dollar invested in <var>condos</var> yields a $<param>0.50</param> <obj_name>profit</obj_name> and each dollar invested in <var>detached houses</var> yields a $<param>1</param> <obj_name>profit</obj_name>. A <const_dir>minimum</const_dir> of <limit>20%</limit> of all money invested must be in <var>condos</var>, and <const_dir>at least</const_dir> $<limit>20000</limit> must be in <var>detached houses</var>. Formulate an LP that can be used to <obj_dir>maximize</obj_dir> total <obj_name>profit</obj_name> earned from Mrs. Watson's investment.", "output": "max: 0.50 condos + 1 detached_houses\nst: condos + detached_houses <= 760000\ndetached_houses >= 20000"}
{"input": "A breakfast joint makes two different sandwiches: a <var>regular</var> and a <var>special</var>. Both need eggs and bacon. Each <var>regular sandwich</var> requires <param>2</param> eggs and <param>3</param> slices of bacon. Each <var>special sandwich</var> requires <param>3</param> eggs and <param>5</param> slices of bacon. The joint <const_dir>has</const_dir> a total of <limit>40</limit> eggs and <limit>70</limit> slices of bacon. It makes a <obj_name>profit</obj_name> of $<param>3</param> per <var>regular sandwich</var> and a <obj_name>profit</obj_name> of $<param>4</param> per <var>special sandwich</var>. How many of each sandwich should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 regular_sandwich + 4 special_sandwich\nst:"}
{"input": "A cleaning company located in Edmonton wants to get the best exposure possible for promoting their new dishwashing detergent <const_dir>without exceeding</const_dir> their $<limit>250,000</limit> advertising budget. To do so, the company decides to spend their money on two forms of advertising: (1) <var>radio ads</var> and (2) <var>social media ads</var>. Each <var>radio ad</var> costs $<param>5,000</param>; each <var>social media ad</var> costs $<param>9,150</param>. The expected <obj_name>exposure</obj_name>, based on industry ratings, is <param>60,500</param> viewers for each <var>radio ad</var>. Additionally, the expected <obj_name>exposure</obj_name> for each <var>social media ad</var> is <param>50,000</param> viewers. The company decides that <const_dir>at least</const_dir> <limit>15</limit> but <const_dir>no more than</const_dir> <limit>40</limit> <var>radio ads</var> should be ordered, and that <const_dir>at least</const_dir> <limit>35</limit> <var>social media ads</var> should be contracted. How many ads of each type should be run to obtain <obj_dir>maximum</obj_dir> <obj_name>exposure</obj_name> while staying within the budget?", "output": "max: 60,500 radio_ad + 50,000 social_media_ad\nst: radio_ads >= 15\nradio_ads <= 40\nsocial_media_ads >= 35"}
{"input": "There is <limit>1000</limit> mg of gold <const_dir>available</const_dir> that is needed to make <var>long</var> and <var>short cables</var>. <var>Long cables</var> require <param>10</param> mg of gold while <var>short cables</var> require <param>7</param> mg of gold. Because of their compact size, <const_dir>at least</const_dir> <param>5</param> times the number of <var>short cables</var> are needed than the <var>long cables</var>. In addition, there needs to be <const_dir>at least</const_dir> <limit>10</limit> <var>long cables</var> made. If each <var>long cable</var> sold results in a $<param>12</param> <obj_name>profit</obj_name> and each <var>short cable</var> sold results in a $<param>5</param> <obj_name>profit</obj_name>, how many of each type of cable should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 long_cable + 5 short_cable\nst: long_cables >= 10"}
{"input": "A store employs <var>senior citizens</var> who <obj_name>earn</obj_name> $<param>500</param> per week and <var>young adults</var> who <obj_name>earn</obj_name> $<param>750</param> per week. The store must keep the weekly wage bill <const_dir>below</const_dir> $<limit>30000</limit>. On any day, the store requires <const_dir>at least</const_dir> <limit>50</limit> workers, of whom <const_dir>at least</const_dir> <limit>10</limit> must be <var>young adults</var>. To ensure the store runs smoothly, the number of <var>young adults</var> should be <const_dir>at least</const_dir> a <param>third</param> the number of <var>senior citizens</var>. Formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>the wage bill</obj_name>.", "output": "min: 500 senior_citizens + 750 young_adults\nst: senior_citizens + young_adults <= 50\nyoung_adults >= 10"}
{"input": "A company is deciding where to promote their product. Some options include <var>z-tube</var>, <var>soorchle</var> engine, and <var>wassa</var> advertisements. The cost for each option and the number of viewers they each attract is given. On <var>z-tube</var>, each ad costs $<param>1000</param> and attracts <param>400,000</param> <obj_name>viewers</obj_name>. On <var>soorchle</var>, each ad costs $<param>200</param> and attracts <param>5,000</param> <obj_name>viewers</obj_name>. On <var>wassa</var>, each ad costs $<param>100</param> and attracts <param>3,000</param> <obj_name>viewers</obj_name>. <var>Soorchle</var> <const_dir>limits the number</const_dir> of advertisements from a single company to <limit>fifteen</limit>. Moreover, in order to balance the advertising among the three types of media, <const_dir>at most</const_dir> a <limit>third</limit> of the total number of advertisements should occur on <var>wassa</var>. And <const_dir>at least</const_dir> <limit>5</limit>% should occur on <var>z-tube</var>. The weekly advertising <const_dir>budget</const_dir> is $<limit>10000</limit>. How many advertisements should be run in each of the three types of media to <obj_dir>maximize</obj_dir> the total <obj_name>audience</obj_name>?", "output": "max: 400,000 z-tube + 5,000 soorchle + 3,000 wassa\nst: Soorchle <= fifteen"}
{"input": "A <var>chair</var> produced by Elm Furniture yields a <obj_name>profit</obj_name> of $<param>43</param>, while every <var>dresser</var> yields a $<param>52</param> <obj_name>profit</obj_name>. Each week, <limit>17</limit> gallons of stain and <limit>11</limit> lengths of oak wood are <const_dir>available</const_dir>. Each <var>chair</var> requires <param>1.4</param> gallons of stain and <param>2</param> lengths of oak wood, while each <var>dresser</var> requires <param>1.1</param> gallons of stain and <param>3</param> lengths of oak wood. Determine the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 43 chair + 52 dresser\nst:"}
{"input": "A farmer wants to mix his animal feeds, <var>Feed A</var> and <var>Feed B</var>, in such a way that the mixture will contain a <const_dir>minimum</const_dir> of <limit>30</limit> units of protein and <limit>50</limit> units of fat. <var>Feed A</var> <obj_name>costs</obj_name> $<param>100</param> per kilogram and contains <param>10</param> units of protein and <param>8</param> units of fat. <var>Feed B</var> <obj_name>costs</obj_name> $<param>80</param> per kilogram and contains <param>7</param> units of protein and <param>15</param> units of fat. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of the mixture.", "output": "min: 100 Feed_A + 80 Feed_B\nst:"}
{"input": "An artisan makes two types of terracotta jars: a <var>thin jar</var> and a <var>stubby jar</var>. Each <var>thin jar</var> requires <param>50</param> minutes of shaping time and <param>90</param> minutes of baking time. Each <var>stubby jar</var> requires <param>30</param> minutes of shaping time and <param>150</param> minutes of baking time. Per week, there are <limit>3000</limit> minutes <const_dir>available</const_dir> for shaping and <limit>4000</limit> minutes <const_dir>available</const_dir> for baking. The <obj_name>profit</obj_name> per <var>thin jar</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>stubby jar</var> is $<param>9</param>. How many jars of each type should the artisan make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 9 stubby_jar + 5 thin_jar\nst:"}
{"input": "A grocery store wants to liquidate its <const_dir>stock</const_dir> of <limit>10</limit> apples, <limit>20</limit> bananas, and <limit>80</limit> grapes. Given past experience, the store knows that they can propose a <var>banana-haters package</var> with <param>6</param> apples and <param>30</param> grapes and that this package will bring a <obj_name>profit</obj_name> of <param>six</param> euros. Similarly, they can prepare a <var>combo package</var> with <param>5</param> apples, <param>6</param> bananas, and <param>20</param> grapes, yielding a <obj_name>profit</obj_name> of <param>seven</param> euros. They know they can sell any quantity of these two packages within the availability of its stock. What quantity of each package, <var>banana-haters packages</var> and <var>combo packages</var>, should the store prepare to <obj_dir>maximize</obj_dir> <obj_name>net profit</obj_name>?", "output": "max: six banana-haters_package + seven combo_package\nst:"}
{"input": "A bakery uses a stand-mixer and a slow bake oven to make <var>bread</var> and <var>cookies</var>. Each machine can run for <const_dir>at most</const_dir> <limit>3000</limit> hours per year. To bake a loaf of <var>bread</var> takes <param>1</param> hour in the stand mixer and <param>3</param> hours in the oven. A batch of <var>cookies</var> requires <param>0.5</param> hours in the mixer and <param>1</param> hour in the oven. The <obj_name>profit</obj_name> per loaf of <var>bread</var> is $<param>5</param> and the <obj_name>profit</obj_name> per batch of <var>cookies</var> is $<param>3</param>. How should the bakery operate to <obj_dir>maximize</obj_dir> total <obj_name>profit</obj_name>?", "output": "max: 5 bread + 3 cookies\nst:"}
{"input": "A glass factory makes two types of glass panes: a <var>regular glass pane</var> and a <var>tempered glass pane</var>. Both require time on a heating and cooling machine. Both machines are available for a <const_dir>maximum</const_dir> of <limit>300</limit> minutes per day. It takes <param>3</param> minutes in the heating machine and <param>5</param> minutes in the cooling machine to make one <var>regular glass pane</var>. It takes <param>5</param> minutes in the heating machine and <param>8</param> minutes in the cooling machine to make one <var>tempered glass pane</var>. The <obj_name>profit</obj_name> per pane of <var>regular glass</var> is $<param>8</param> and the <obj_name>profit</obj_name> per pane of <var>tempered glass</var> is $<param>10</param>. How many panes of each glass type should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is the maximum profit?", "output": "max: 8 regular_glass + 10 tempered_glass\nst:"}
{"input": "A souvenir shop makes wooden <var>elephants</var> and <var>tigers</var> with plastic ornaments. Each <var>elephant</var> requires <param>50</param> grams of wood and <param>20</param> grams of plastic. Each <var>tiger</var> requires <param>40</param> grams of wood and <param>30</param> grams of plastic. In a week, <limit>5000</limit> grams of wood and <limit>4000</limit> grams of plastic are <const_dir>available</const_dir>. The <obj_name>profit</obj_name> per <var>elephant</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>tiger</var> sold is $<param>4</param>. How many of each should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 elephant + 4 tiger\nst:"}
{"input": "An art store makes <var>large</var> and <var>small art pieces</var>. The store has <const_dir>available</const_dir> <limit>100</limit> units of paint, <limit>50</limit> units of glitter, and <limit>70</limit> units of glue. To make a <var>large art piece</var> requires <param>4</param> units of paint, <param>3</param> units of glitter, and <param>5</param> units of glue. To make a <var>small art piece</var> requires <param>2</param> units of paint, <param>1</param> unit of glitter, and <param>2</param> units of glue. The store must make <const_dir>at least</const_dir> <limit>5</limit> units of each <var>large</var> and <var>small art pieces</var>. If the <obj_name>profit</obj_name> per <var>large art piece</var> is $<param>30</param> and the <obj_name>profit</obj_name> per <var>small art piece</var> is $<param>15</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 large_art_piece + 15 small_art_piece\nst: large >= 5\nlarge >= 5"}
{"input": "My family has decided to invest in real state for the first time. Currently, they have $<limit>600,000</limit> to <const_dir>invest</const_dir>, some in <var>apartments</var> and the rest in <var>townhouses</var>. The money invested in <var>apartments</var> must <const_dir>not be greater than</const_dir> $<limit>200,000</limit>. They have decided that the money invested in <var>apartments</var> must be <const_dir>at least</const_dir> a <param>half</param> as much as that in <var>townhouses</var>.  If the <var>apartments</var> <obj_name>earn</obj_name> <param>10%</param>, and the <var>townhouses</var> <obj_name>earn</obj_name> <param>15%</param>, how much money should they invest in each to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 15% townhouses + 10% apartments\nst: townhouses + apartments <= 600,000\napartments <= 200,000"}
{"input": "My grandma is required to take two medicines Z1 and D3 everyday. She needs to take <const_dir>at least</const_dir> <limit>5</limit> grams of Z1 and <limit>10</limit> grams of D3 everyday. These medicines are available in two pills named <var>Zodiac</var> and <var>Sunny</var>. One pill of <var>Zodiac</var> contains <param>1.3</param> grams of Z1 while one pill of <var>Sunny</var> contains <param>1.2</param> grams of Z1. On the other hand, one pill of <var>Zodiac</var> contains <param>1.5</param> grams of D3 and one pill of <var>Sunny</var> contains <param>5</param> grams of D3. The <obj_name>cost</obj_name> per pill of <var>Zodiac</var> is $<param>1</param> and the <obj_name>cost</obj_name> per pill of <var>Sunny</var> is $<param>3</param>. Formulate a LP such that the medicine requirement can be fulfilled at the <obj_dir>lowest</obj_dir> <obj_name>cost</obj_name>.", "output": "low: 1 Zodiac + 3 Sunny\nst:"}
{"input": "A hobbyist makes <var>model trains</var> and <var>planes</var> using wood and paint. A <var>model train</var> requires <param>3</param> units of wood and <param>3</param> units of paint. A <var>model plane</var> requires <param>4</param> units of wood and <param>2</param> units of paint. The hobbyist has <const_dir>available</const_dir> <limit>120</limit> units of wood and <limit>90</limit> units of paint. If the <obj_name>profit</obj_name> per <var>model train</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>model plane</var> is $<param>10</param>, how many of each should be made to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 8 model_train + 10 model_plane\nst:"}
{"input": "An electronics store wants to optimize how many <var>phones</var> and <var>laptops</var> are enough to keep in inventory. A <var>phone</var> will earn the store $<param>120</param> in <obj_name>profits</obj_name>, and a <var>laptop</var> will earn $<param>40</param>. A <var>phone</var> requires <param>1</param> sq ft of floor space, whereas a <var>laptop</var> requires <param>4</param> sq ft. In total, <limit>400</limit> sq ft of floor space is <const_dir>available</const_dir>. The store stocks only <var>phones</var> and <var>laptops</var>. Corporate has required that <const_dir>at least</const_dir> <limit>80%</limit> of all appliances in stock be <var>laptops</var>. Finally, a <var>phone</var> costs $<param>400</param> for the store, and a <var>laptop</var>, $<param>100</param>. The store wants to spend <const_dir>at most</const_dir> $<limit>6000</limit>. Formulate an LP that can be used to <obj_dir>maximize</obj_dir> the store's <obj_name>profit</obj_name>.", "output": "max: 120 phone + 40 laptop\nst:"}
{"input": "A candy store mixes regular candy and sour candy to prepare two products, <var>regular mix</var> and <var>sour surprise mix</var>. Each kilogram of the <var>regular mix</var> contains <param>0.8</param> kg of regular candy and <param>0.2</param> kg of sour candy. The <obj_name>profit</obj_name> per kilogram of the <var>regular mix</var> is $<param>3</param>. Each kilogram of the <var>sour surprise mix</var> contains <param>0.1</param> kg of regular candy and <param>0.9</param> kg of sour candy. The <obj_name>profit</obj_name> per kilogram of the <var>sour surprise mix</var> is $<param>5</param>. The candy store has <limit>80</limit> kg of regular candy and <limit>60</limit> kg of sour candy <const_dir>available</const_dir>. How many kilograms of each type of candy mix should be created to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 3 regular_mix + 5 sour_surprise_mix\nst:"}
{"input": "A suspicious factory <const_dir>has</const_dir> <limit>100</limit> sq. feet of space. It makes bootleg <var>phones</var> and <var>laptops</var>. <var>Phones</var> require <param>2</param> hours of labor and cost $<param>12</param> for each sq. foot of space allocated for <var>phone</var> production (cost of electricity and equipment). <var>Laptops</var> require <param>3</param> hours of labor and cost $<param>15</param> for each sq. foot of space allocated for <var>laptop</var> production. <var>Phones</var> produce a <obj_name>net revenue</obj_name> of $<param>50</param> per sq. foot while <var>laptops</var> produce a <obj_name>net revenue</obj_name> of $<param>70</param> per sq. foot. The factory wants to spend <const_dir>at most</const_dir> $<limit>5000</limit> and <limit>2000</limit> hours of labor. What is the optimal factory layout to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 50 Phones + 70 laptops\nst: Phones + laptops <= 100"}
{"input": "A electronics store sells <var>premium desktops</var> with more power as well as <var>regular desktops</var> for everyday use. Each <var>premium desktop</var> costs the store $<param>2000</param> to make and yields a <obj_name>profit</obj_name> of $<param>500</param>. Each <var>regular desktop</var> costs the store $<param>1000</param> to make and yields a <obj_name>profit</obj_name> of $<param>300</param>. The store sells <const_dir>at most</const_dir> <limit>200</limit> desktops each month and wants to spend <const_dir>at most</const_dir> $<limit>300000</limit> on making the desktops. How many of each should be made and sold to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 premium_desktop + 300 regular_desktop\nst: premium_desktop + regular_desktop <= 200"}
{"input": "A car manufacturer makes two versions of the same car, a <var>regular model</var> and a <var>premium model</var>. They make x1 <var>regular models</var> per day and x2 <var>premium models</var> per day. The <obj_name>profit</obj_name> per <var>regular model</var> is $<param>5000</param> and the <obj_name>profit</obj_name> per <var>premium model</var> is $<param>8500</param> (x1 and x2 are unknown values both greater than or equal to 0). The daily demand for these cars is limited to and <const_dir>most</const_dir> <limit>8</limit> <var>regular models</var> and <limit>6</limit> <var>premium models</var>. In addition, the manufacturer can make a <const_dir>maximum</const_dir> of <limit>12</limit> cars of either type per day. How many cars of each model should the manufacturer make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8500 premium_model + 5000 regular_model\nst: regular_models <= 8\npremium_models <= 6\npremium_model + regular_model <= 12"}
{"input": "You are designing an office space with two types of desks: <var>long desks</var> and <var>short desks</var>. You can spend <const_dir>at most</const_dir> $<limit>2000</limit>. <var>Long desks</var> cost $<param>300</param>, take up <param>10</param> square feet of space, and <obj_name>seat</obj_name> <param>6</param> employees. <var>Short desks</var> cost $<param>100</param>, take up <param>4</param> square feet of space, and <obj_name>seat</obj_name> <param>2</param> employees. The office can have <const_dir>at most</const_dir> <limit>200</limit> square feet of desks. How many of each desk should you buy in order to <obj_dir>maximize</obj_dir> the <obj_name>seating availability</obj_name>?", "output": "max: 6 Long_desks + 2 Short_desks\nst:"}
{"input": "Ayse produces a plant growth compound by mixing two types of fertilizer: <var>C</var> and <var>Y.</var> This growth compound must contain <const_dir>at least</const_dir> <limit>5</limit> units of nitrous oxide and <limit>8</limit> units of vitamin mix. <var>Fertilizer C</var> and <var>Y</var> <obj_name>cost</obj_name> $<param>2</param> and $<param>3</param> per kg respectively. <var>Fertilizer C</var> contains <param>1.5</param> units of nitrous oxide per kg and <param>3</param> units of vitamin mix per kg. <var>Fertilizer Y</var> contains <param>5</param> units of nitrous oxide per kg and <param>1</param> unit of vitamin mix per kg. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of Ayse's compound.", "output": "min: 2 Fertilizer_C + 3 Y\nst:"}
{"input": "Sleep inducing medicine and anti-inflammatory medicine is found in two pills, <var>pill A</var> and <var>pill B.</var> One <var>pill A</var> contains <param>3</param> units of sleep inducing medicine and <param>5</param> units of anti-inflammatory medicine. One <var>pill B</var> contains <param>6</param> units of sleep-inducing medicine and <param>1</param> unit of anti-inflammatory medicine. The <obj_name>cost</obj_name> per pill for <var>pill A</var> is $<param>4</param> and the <obj_name>cost</obj_name> per pill for <var>pill B</var> is $<param>5</param>. A patient must consume these two pills to get <const_dir>at least</const_dir> <limit>40</limit> units of sleep-inducing medicine and <limit>50</limit> units of anti-inflammatory medicine. Formulate a LP to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> for the patient.", "output": "min: 4 pill_A + 5 pill_B\nst:"}
{"input": "A car manufacturer makes two types of car oils: <var>Oil Max</var> and <var>Oil Max Pro</var>. A container of <var>Oil Max</var> contains <param>46</param> grams of substance A, <param>43</param> grams of substance B and <param>56</param> grams of substance C. A container of <var>Oil Max Pro</var> contains <param>13</param> grams of substance A, <param>4</param> grams of substance B and <param>45</param> grams of substance C. The car manufacturer <const_dir>has</const_dir> <limit>1345</limit> grams of substance A, <limit>346</limit> grams of substance B, <limit>1643</limit> grams of substance C. In addition, the <obj_name>profit</obj_name> per container of <var>Oil Max</var> is $<param>10</param> and the <obj_name>profit</obj_name> per container of <var>Oil Max Pro</var> is $<param>15</param>. How many containers of each of oil should the car manufacturer make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 Oil_Max + 15 Oil_Max_Pro\nst:"}
{"input": "A food truck owner can spend <const_dir>at most</const_dir> $<limit>20000</limit> on <var>mangos</var> and <var>guavas</var>. A <var>mango</var> costs the food truck owner $<param>5</param> and a <var>guava</var> costs him $<param>3</param>. Spices are added and each <var>mango</var> is sold for a <obj_name>profit</obj_name> of $<param>3</param> while each <var>guava</var> is sold for a <obj_name>profit</obj_name> of $<param>4</param>. The owner estimates that <const_dir>at least</const_dir> <limit>100</limit> <var>mangos</var> but <const_dir>at the most</const_dir> <limit>150</limit> are sold each month. He also estimates that the number of <var>guavas</var> sold is <const_dir>at most</const_dir> a <param>third</param> of the <var>mangos</var> sold. How many <var>mangos</var> and <var>guavas</var> should be sold in order to <obj_dir>maximize</obj_dir> the <obj_name>profit</obj_name>?", "output": "max: 3 mango + 4 guava\nst: mangos >= 100\nmangos <= 150"}
{"input": "A nutritionist is making a special vitamin mix using two drinks: <var>A</var> and <var>B.</var> The vitamin mix must contain <const_dir>at least</const_dir> <limit>150</limit> units of Vitamin A, <const_dir>at least</const_dir> <limit>300</limit> units of vitamin D, and <const_dir>at most</const_dir> <limit>400</limit> units of vitamin E. A cup of <var>drink A</var> contains <param>8</param> units of Vitamin A, <param>6</param> units of Vitamin D, <param>10</param> units of Vitamin E, and <param>4</param> units of <obj_name>Vitamin K.</obj_name> A cup of <var>drink B</var> contains <param>15</param> units of Vitamin A, <param>2</param> units of Vitamin D, <param>20</param> units of Vitamin E, and <param>12</param> units of <obj_name>Vitamin K.</obj_name> How many cups of each drink should be used to make the vitamin mix in order to <obj_dir>minimize</obj_dir> the <obj_name>amount of Vitamin K</obj_name>?", "output": "min: 12 drink_B + 4 drink_A\nst:"}
{"input": "An ice cream store makes <var>chocolate</var> and <var>vanilla ice cream</var> by the gallon. In a week, they must make <const_dir>at least</const_dir> <limit>5</limit> gallons of each type but <const_dir>at most</const_dir> <limit>10</limit> gallons of <var>chocolate ice cream</var> and <const_dir>at most</const_dir> <limit>8</limit> gallons of <var>vanilla ice cream</var>. It takes <param>1</param> hour to produce a gallon of <var>chocolate ice cream</var> and <param>2</param> hours to produce a gallon of <var>vanilla ice cream</var>. In a week, <limit>30</limit> hours are <const_dir>available</const_dir> to make ice cream. In addition <const_dir>at least</const_dir> <limit>6</limit> workers are needed with <param>1</param> working on the <var>chocolate ice cream</var> and <param>2</param> on the <var>vanilla ice cream</var> at any time. If the <obj_name>profit</obj_name> per gallon of <var>chocolate ice cream</var> is $<param>200</param> and the <obj_name>profit</obj_name> per gallon of <var>vanilla ice cream</var> is $<param>300</param>, how many gallons of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 vanilla_ice_cream + 200 chocolate_ice_cream\nst: chocolate_ice_cream >= 5\nvanilla_ice_cream >= 5\nchocolate_ice_cream <= 10\nvanilla_ice_cream <= 8"}
{"input": "Mark has <limit>50</limit> acres of land <const_dir>available</const_dir> to grow <var>potatoes</var> and <var>cucumbers</var> that he sells at a farmers' market. He must grow <const_dir>at least</const_dir> <limit>12</limit> acres of <var>potatoes</var> and <limit>15</limit> acres of <var>cucumbers</var> to meet his contract. Mark prefers to grow more <var>cucumbers</var> than <var>potatoes</var>, but he only has enough resources to grow <const_dir>at most</const_dir> <param>twice</param> the amount of <var>cucumbers</var> as <var>potatoes</var>. If the <obj_name>profit</obj_name> per acre of <var>potatoes</var> is $<param>500</param> and the <obj_name>profit</obj_name> per acre of <var>cucumbers</var> is $<param>650</param>, how many acres of each should he grow to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>? What is that profit?", "output": "max: 500 potatoes + 650 cucumbers\nst: potatoes + cucumbers <= 50\npotatoes >= 12\ncucumbers >= 15"}
{"input": "A flooring company produces engineered <var>hardwood</var> and <var>vinyl planks</var>. Their sales forecasts show an expected demand of <const_dir>at least</const_dir> <limit>20,000</limit> square foot of <var>hardwood</var> and <limit>10,000</limit> square feet of <var>vinyl planks</var> each week. To satisfy a shipping contract, a total of <const_dir>at least</const_dir> <limit>60,000</limit> square feet of flooring much be shipped each week. Due to a labor shortage issue, <const_dir>no more than</const_dir> <limit>50,000</limit> square feet of <var>hardwood</var> and <limit>30,000</limit>  square feet of <var>vinyl  </var>can be produced weekly. If a square foot of <var>hardwood</var> flooring yields a <obj_name>profit</obj_name> of $<param>2.5</param> and a square foot of <var>vinyl planks</var> produces a $<param>3</param> <obj_name>profit</obj_name>, how many of each type of flooring should be made weekly to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 2.5 hardwood + 3 vinyl_planks\nst: hardwood >= 20,000\nvinyl_planks >= 10,000\nhardwood + vinyl_planks <= 60,000\nhardwood <= 50,000\nvinyl__ <= 30,000"}
{"input": "A berry farmer has two farms, an <var>old</var> and <var>new farm</var>, where he grows raspberries, blueberries, and strawberries. He has a contract to <const_dir>provide</const_dir> a local store with <limit>10</limit> kg of raspberries, <limit>9</limit> kg of blueberries, and <limit>15</limit> kg of strawberries. At his <var>old farm</var>, it <obj_name>cost</obj_name> $<param>300</param> to operate per day and he can harvest and deliver <param>2</param> kg of raspberries, <param>2</param> kg of blueberries, and <param>4</param> kg of strawberries in a day. At his <var>new farm</var>, it <obj_name>costs</obj_name> $<param>200</param> to operate per day and he can harvest and deliver <param>4</param> kg of raspberries, <param>1</param> kg of blueberries, and <param>2</param> kg of strawberries in a day. Formulate a LP to meet his contract while <obj_dir>minimizing</obj_dir> his <obj_name>cost</obj_name>.", "output": "min: 300 old_farm + 200 new_farm\nst:"}
{"input": "Jordan is a chef. He wants to design a diet consisting of <var>Kebabs</var> and <var>Rice</var>.  Assume that each serving of <var>Rice</var> <obj_name>costs</obj_name> $<param>3</param> and contains <param>300</param> calories and <param>4.5</param> grams of protein. Assume that each serving of <var>Kebab</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>200</param> calories and <param>4</param> grams of protein. He's interested in spending as little money as possible but he wants to ensure that his meals have <const_dir>at least</const_dir> <limit>2200</limit> calories and <const_dir>at least</const_dir> <limit>30</limit> grams of protein per day. Formulate a linear programming problem that will help <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of the diet.", "output": "min: 3 Rice + 2 Kebab\nst:"}
{"input": "A company sells custom <var>scooters</var> and <var>bikes</var> for customers. The <obj_name>profit</obj_name> per <var>scooter</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>bike</var> is $<param>300</param>. Each product requires time with the design team and engineering team. Each <var>scooter</var> needs <param>2</param> hours with the design team and <param>3</param> hours with the engineering team. Each <var>bike</var> needs <param>4</param> hours with the design team and <param>5</param> hours with the engineering team. Per month, there are <limit>5000</limit> hours <const_dir>available</const_dir> on the design team and <limit>6000</limit> hours <const_dir>available</const_dir> on the engineering team. How many of each should the company make per month to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 scooter + 300 bike\nst:"}
{"input": "John <const_dir>has</const_dir> a <limit>300</limit> acre berry farm on which to plant <var>blueberries</var> and <var>raspberries.</var> John has $<limit>10000</limit> to spend on watering and <limit>575</limit> days worth of labor <const_dir>available</const_dir>. For each acre of <var>blueberries</var>, <param>6</param> days worth of labor and $<param>22</param> in watering costs is required. For each acre of <var>raspberries,</var> <param>3</param> days worth of labor and $<param>25</param> in watering costs is required. The <obj_name>profit</obj_name> per acre of <var>blueberries</var> is $<param>56</param> and the <obj_name>profit</obj_name> per acre of <var>raspberries</var> is $<param>75</param>. Formulate an LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 56 blueberries + 75 raspberries\nst: blueberries + raspberries <= 300"}
{"input": "A man  only eats <var>vegetable</var> and <var>fruits</var>. A serving of <var>vegetables</var> contains <param>2</param> units of vitamins and <param>3</param> units of minerals. A serving of <var>fruit</var> contains <param>4</param> units of vitamins and <param>1</param> unit of minerals. He wants to eat <const_dir>at least</const_dir> <limit>20</limit> units of vitamins and <limit>30</limit> units of minerals. If <var>vegetables</var> <obj_name>cost</obj_name> $<param>3</param> per serving and <var>fruits</var> <obj_name>cost</obj_name> $<param>5</param> per serving, how many servings of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 vegetables + 5 fruits\nst:"}
{"input": "A bakery bakes <var>bagels</var> and <var>croissants</var>. A batch of <var>bagels</var> can be made using <param>2</param> hours of oven time and <param>0.25</param> hours of pastry chef time. A batch of <var>croissants</var> is more complicated, so while they take <param>1</param> hour of oven time, they take <param>2</param> hours of pastry chef time. In a day, the bakery has <const_dir>at most</const_dir> <limit>70</limit> hours <const_dir>available</const_dir> for the oven and <limit>32</limit> pastry chef hours <const_dir>available</const_dir>. Using all the available capacity, what is the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name> the bakery can generate assuming the <obj_name>profit</obj_name> per batch is $<param>20</param> and $<param>40</param> respectively for a batch of <var>bagels</var> and a batch of <var>croissants</var>.", "output": "max: 20 bagels + 40 croissants\nst:"}
{"input": "A teddy bear company produces three different colored bears: black, white, and brown. These bears are made in two different factories. Running <var>factory 1</var> for 1 hour <obj_name>costs</obj_name> $<param>300</param> and produces <param>5</param> black teddy bears, <param>6</param> white teddy bears, and <param>3</param> brown ones. Running <var>factory 2</var> for 1 hour <obj_name>costs</obj_name> $<param>600</param> and produces <param>10</param> black teddy bears and <param>10</param> white teddy bears. (but no brown ones). To meet children's demand, <const_dir>at least</const_dir> <limit>20</limit> black teddy bears, <limit>5</limit> white teddy bears, and <limit>15</limit> brown teddy bears must be made daily. Given this information, develop a linear programming problem assuming the teddy bear company wants to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of production.", "output": "min: 300 factory_1 + 600 factory_2\nst:"}
{"input": "A farmer <const_dir>has</const_dir> <limit>500</limit> acres of land to grow <var>turnips</var> and <var>pumpkins</var>. <var>Turnips</var> require <param>50</param> minutes of watering and $<param>80</param> worth of pesticide per acre. <var>Pumpkins</var> require <param>90</param> minutes of watering and $<param>50</param> worth of pesticide per acre. The farmer has <limit>40000</limit> minutes <const_dir>available</const_dir> for watering and $<limit>34000</limit> <const_dir>available</const_dir> to spend on pesticide. If the <obj_name>revenue</obj_name> per acre of <var>turnips</var> is $<param>300</param> and the <obj_name>revenue</obj_name> per acre of <var>pumpkins</var> is $<param>450</param>, how many acres of each should he grow to <obj_dir>maximize</obj_dir> his <obj_name>revenue</obj_name>.", "output": "max: 300 turnips + 450 pumpkins\nst: turnips + pumpkins <= 500"}
{"input": "A school employs <var>staff</var> and <var>substitute teachers</var>. Per shift, <var>staff teachers</var> work <param>6</param> hours and get paid $<param>300</param>. Per shift, <var>substitute teachers</var> work <param>3</param> hours and get paid $<param>100</param>. For the summer term, the school <const_dir>requires</const_dir> <limit>1000</limit> hours of teaching availability. If the school has a <const_dir>budget</const_dir> of $<limit>40000</limit>, how many of each teacher should be hired to <obj_dir>minimize</obj_dir> the <obj_name>total number of teachers</obj_name>?", "output": "min: \nst:"}
{"input": "A gem factory has two drills, a <var>high intensity</var> one and a <var>low intensity</var> one. Each day, the <var>high intensity drill</var> can process <param>50</param> gems and requires <param>50</param> units of water to dissipate heat. Each day, the <var>low intensity drill</var> can process <param>30</param> gems and requires <param>20</param> units of water to dissipate heat. Each day the factory must <const_dir>process</const_dir> <limit>800</limit> gems and they have <const_dir>available</const_dir> <limit>700</limit> units of water. Since the <var>high intensity drill</var> produces a lot of noise pollution, <const_dir>at most</const_dir> <limit>40%</limit> of the drills can be <var>high intensity</var> ones. Further, <const_dir>at least</const_dir> <limit>10</limit> should be <var>low intensity drills</var>. How many of each drill should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of drills</obj_name> needed?", "output": "min: \nst: low_intensity_drills >= 10"}
{"input": "A sandwich company can open two types of stores, a <var>dine-in place</var> and a <var>food-truck</var>. A <var>dine-in place</var> can make <param>100</param> sandwiches per day and requires <param>8</param> employees to operate. A <var>food-truck</var> can make <param>50</param> sandwiches per day and requires <param>3</param> employees to operate. The company must make <const_dir>at least</const_dir> <limit>500</limit> sandwiches per day but they only have <const_dir>available</const_dir> <limit>35</limit> employees. How many of each type of store should the company open to <obj_dir>minimize</obj_dir> the <obj_name>total number of stores</obj_name>?", "output": "min: \nst:"}
{"input": "There are two processes, <var>process A</var> and <var>process B</var>, to plate a coin with gold. <var>Process A</var> requires <param>3</param> units of gold, <param>2</param> wires, and can plate <param>5</param> <obj_name>coins</obj_name>. <var>Process B</var> requires <param>5</param> units of gold, <param>3</param> wires, and can plate <param>7</param> <obj_name>coins</obj_name>. There are <limit>500</limit> units of gold and <limit>300</limit> wires <const_dir>available</const_dir>. How many processes of each type should be run to <obj_dir>maximize</obj_dir> the total <obj_name>number of coins</obj_name> that can be plated?", "output": "max: 5 Process_A + 7 Process_B\nst:"}
{"input": "A woodshop can purchase two types of saws, a <var>miter saw</var> and a <var>circular saw</var>. A <var>miter saw</var> can cut <param>50</param> planks of wood and produces <param>60</param> units of sawdust per day. A <var>circular saw</var> can cut <param>70</param> planks of wood and produces <param>100</param> units of sawdust per day. The woodshop must cut <const_dir>at least</const_dir> <limit>1500</limit> planks of wood per day. However, to avoid too much pollution in the woodshop they can produce <const_dir>at most</const_dir> <limit>2000</limit> units of sawdust per day. How many of each type of saw should be purchased to <obj_dir>minimize</obj_dir> the total <obj_name>number of saws</obj_name> needed?", "output": "min: \nst:"}
{"input": "A farmer <const_dir>has</const_dir> <limit>200</limit> acres of land on which he must process hay using either a <var>windrower</var> or <var>hay harvester</var>. For each acre of land, the <var>windrower</var> can process <param>10</param> kg of <obj_name>hay</obj_name> while the <var>hay harvester</var> can process <param>8</param> kg of <obj_name>hay</obj_name>. Per acre, the <var>windrower</var> produces <param>5</param> kg of methane gas and requires <param>2</param> kg of fuel. On the other hand, the <var>hay harvester</var> produces <param>3</param> kg of methane gas per acre and requires <param>1</param> kg of fuel. There are <limit>300</limit> kg of fuel <const_dir>available</const_dir> and the farmer can produce <const_dir>at most</const_dir> <limit>800</limit> kg of methane gas. For how many acres should each machine be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of hay</obj_name> processed?", "output": "max: 10 windrower + 8 hay_harvester\nst: windrower + hay_harvester <= 200"}
{"input": "A new fast food place makes <var>wraps</var> and <var>platters</var>. Each <var>wrap</var> requires <param>5</param> units of meat and <param>3</param> units of rice. Each <var>platter</var> requires <param>7</param> units of meant and <param>5</param> units of rice. While each <var>wrap</var> takes <param>10</param> <obj_name>minutes</obj_name> to make, each <var>platter</var> takes <param>8</param> <obj_name>minutes</obj_name> to make. The fast food place must use <const_dir>at least</const_dir> <limit>3000</limit> units of meat and <limit>2500</limit> units of rice. Since <var>wraps</var> are easier to eat on the go, <const_dir>at least</const_dir> <param>3</param> times as many <var>wraps</var> need to be made as <var>platter</var>. How many of each should the fast food place make to <obj_dir>minimize</obj_dir> the <obj_name>total production time</obj_name>?", "output": "min: 10 wrap + 8 platter\nst:"}
{"input": "An amusement park is installing ticket machines, both <var>cash-based</var> and <var>card-only</var> machines. A <var>cash-based machine</var> can process <param>20</param> people per hour while a <var>card-only machine</var> can process <param>30</param> people per hour. The <var>cash-based machine</var> needs <param>4</param> rolls of paper per hour while the <var>card-only machine</var> requires <param>5</param> rolls of paper per hour. The amusement park needs to be able to process <const_dir>at least</const_dir> <limit>500</limit> people per hour but can use <const_dir>at most</const_dir> <limit>90</limit> rolls of paper per hour. Since most people prefer to pay by cash, the number of <var>card-only machines</var> <const_dir>must not exceed</const_dir> the number of <var>cash-based machines</var>. How many of each machine should be bought to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name> in the park?", "output": "min: \nst:"}
{"input": "A honey farmer sells his honey in <var>glass</var> and <var>plastic jars</var>. A <var>glass jar</var> can hold <param>250</param> ml of honey while a <var>plastic jar</var> can hold <param>300</param> ml of honey. Since <var>glass jars</var> are more expensive, <const_dir>at least</const_dir> <param>twice</param> as many <var>plastic jars</var> must be filled as <var>glass jars</var>. However, <const_dir>at least</const_dir> <limit>20</limit> <var>glass jars</var> should be filled. If the farmer <const_dir>has</const_dir> <limit>20000</limit> ml of honey, how many jars of each should be filled to <obj_dir>maximize</obj_dir> the total <obj_name>number of bottles</obj_name> filled?", "output": "max: \nst: glass_jars >= 20"}
{"input": "A bubble tea shop sells mango and <var>lychee bubble tea</var>. Each <var>mango bubble tea</var> requires <param>4</param> units of mango juice and <param>8</param> units of <obj_name>tea</obj_name>. Each <var>lychee bubble tea</var> requires <param>6</param> units of lychee juice and <param>6</param> units of <obj_name>tea</obj_name>. The shop has <const_dir>available</const_dir> <limit>2000</limit> units of mango juice and <limit>3000</limit> units of lychee juice. <const_dir>At least</const_dir> <limit>40%</limit> of the bubble teas made must be <var>lychee</var> flavored. However, <var>mango bubble tea</var> sells better and thus the number of <var>mango bubble teas</var> made must be <const_dir>large than</const_dir> the number of <var>lychee bubble teas</var> made. How many of each bubble tea flavor should be made to <obj_dir>minimize</obj_dir> the total <obj_name>amount of tea</obj_name> needed?", "output": "min: 8 mango_bubble_tea + 6 lychee_bubble_tea\nst:"}
{"input": "A city employs <var>seasonal</var> and <var>permanent</var> snow removers. A <var>seasonal snow remover</var> works <param>6</param> hours per shift and gets paid $<param>120</param>. A <var>permanent snow remover</var> works <param>10</param> hours per shift and gets paid $<param>250</param>. Currently the city <const_dir>needs</const_dir> <limit>300</limit> hours of snow remover labor after a heavy snowfall. If the city has a <const_dir>budget</const_dir> of $<limit>6500</limit>, how many of each type of worker should be hired to <obj_dir>minimize</obj_dir> the total <obj_name>number of snow removers</obj_name>?", "output": "min: \nst:"}
{"input": "A high rise building is buying two types of furnaces, a <var>new model</var> and an <var>old model</var>. A <var>new model furnace</var> can heat <param>10</param> apartments and consumes <param>200</param> kWh per day. An <var>old model</var> can heat <param>15</param> apartments and consumes <param>250</param> kWh per day. Since the <var>old model</var> is harder to find, <const_dir>at most</const_dir> <limit>35%</limit> of the furnaces can be the <var>old model</var> and <const_dir>at least</const_dir> <limit>5</limit> <var>new model furnaces</var> should be used. If the high rise needs to heat <const_dir>at least</const_dir> <limit>200</limit> apartments and has <limit>3500</limit> kWh of electricity <const_dir>available</const_dir>, how many of each furnace should be purchase to <obj_dir>minimize</obj_dir> the <obj_name>total number of furnaces</obj_name>?", "output": "min: \nst: new_model_furnaces >= 5"}
{"input": "A cell phone company is building <var>rural</var> and <var>urban</var> factories. A <var>rural factory</var> can make <param>100</param> phones per day and requires <param>8</param> managers. An <var>urban factory</var> can make <param>200</param> phones per day and requires <param>20</param> managers. The company has <const_dir>available</const_dir> <limit>260</limit> managers and must make <const_dir>at least</const_dir> <limit>3000</limit> phones per day. How many of each factory type should be built to <obj_dir>minimize</obj_dir> the total <obj_name>number of factories</obj_name>?", "output": "min: \nst:"}
{"input": "An ice cream store can buy two machines, a <var>counter-top sized</var> one and a <var>fridge sized one</var>, to make ice cream. The <var>counter-top sized</var> one can produce <param>80</param> cones worth of ice cream every day while the <var>fridge sizes one</var> can produce <param>150</param> cones worth of ice cream every day. The <var>counter-top sized</var> machine outputs <param>50</param> units of heat while the <var>fridge sized one</var> outputs <param>70</param> units of heat. The ice cream store can output <const_dir>at most</const_dir> <limit>500</limit> units of heat per day and must produce <const_dir>at least</const_dir> <limit>1000</limit> cones worth of ice cream. How many of each machine should they buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name> needed?", "output": "min: \nst:"}
{"input": "There are two specialized containers, a <var>small</var> and <var>large</var> one, that are used to make a pharmaceutical paste. The <var>small container</var> requires <param>10</param> units of water and <param>15</param> units of the powdered pill to make <param>20</param> units of the <obj_name>paste</obj_name>. The <var>large container</var> requires <param>20</param> units of water and <param>20</param> units of the powdered pill to make <param>30</param> units of the <obj_name>paste</obj_name>. The pharmacy has <const_dir>available</const_dir> <limit>500</limit> units of water and <limit>700</limit> units of the powdered pill. How many of each container should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of paste</obj_name> that can be made?", "output": "max: 20 small_container + 30 large_container\nst:"}
{"input": "An oil and gas company <const_dir>operates on</const_dir> <limit>300</limit> acres of land where they use oil wells of <var>small</var> and <var>large</var> size. Per acre of land, a <var>small oil well</var> can produce <param>2</param> barrels of <obj_name>oil</obj_name>. Per acre of land, a <var>large oil well</var> can produce <param>5</param> barrels of <obj_name>oil</obj_name>. However, a <var>small oil well</var> produces <param>10</param> units of pollution and requires <param>5</param> drill bits per acre and a <var>large oil well</var> produces <param>20</param> units of pollution and requires <param>10</param> drill bits per acre. The company has <const_dir>available</const_dir> <limit>2500</limit> drill bits and due to strict environmental laws can produce <const_dir>at most</const_dir> <limit>4500</limit> units of pollution. For how many acres should each oil well be used to <obj_dir>maximize</obj_dir> the <obj_name>total production of oil</obj_name>?", "output": "max: 2 small_oil_well + 5 large_oil_well\nst: small_oil_well + large_oil_well <= 300"}
{"input": "A bakery makes <var>almond</var> and <var>pistachio</var> croissants. An <var>almond croissant</var> requires <param>5</param> units of butter and <param>8</param> units of flour. A <var>pistachio croissant</var> requires <param>3</param> units of butter and <param>6</param> units of flour. The bakery has <const_dir>available</const_dir> <limit>600</limit> units of butter and <limit>800</limit> units of flour. Since the <var>almond croissant</var> is more popular, <const_dir>at least</const_dir> <param>3</param> times as many <var>almond croissants</var> should be made as <var>pistachio croissants</var>. If making an <var>almond croissant</var> takes <param>12</param> <obj_name>minutes</obj_name> and making a <var>pistachio croissant</var> takes <param>10</param> <obj_name>minutes</obj_name>, how many of each should be made to <obj_dir>minimize</obj_dir> the <obj_name>total production time</obj_name>?", "output": "min: 12 almond_croissant + 10 pistachio_croissant\nst:"}
{"input": "A burger chain is buying both <var>gas</var> and <var>electric</var> grills to make burger patties. A <var>gas grill</var> can cook <param>20</param> patties per minute while an <var>electric grill</var> can cook <param>30</param> patties per minute. The <var>gas grill</var> requires <param>20</param> units of cooking oil per minute while the <var>electric grill</var> requires <param>25</param> units of cooking oil per minute. Since the <var>gas grill</var> patties taste better, the number of <var>electric grills</var> must be <const_dir>less than</const_dir> the number of <var>gas grills</var>. Further, the burger chain wants to be able to make <const_dir>at least</const_dir> <limit>150</limit> patties per minute and use <const_dir>at most</const_dir> <limit>140</limit> units of cooking oil per minute. How many of each grill should be bought to <obj_dir>minimize</obj_dir> the total <obj_name>number of grills</obj_name> in the store?", "output": "min: \nst:"}
{"input": "A cough syrup company sells cough syrup in <var>kids</var> and <var>adult size</var> bottles. A <var>kids size bottle</var> can hold <param>100</param> ml of cough syrup while an <var>adult size bottle</var> can hold <param>300</param> ml of cough syrup. Since there is no difference in concentration of medical ingredients between the two bottles, <const_dir>at least</const_dir> <param>3</param> times as many <var>adult size bottle</var> must be made as <var>kids size bottles</var>. However, <const_dir>at least</const_dir> <limit>50</limit> <var>kids size bottles</var> must be made. If the company has <limit>25000</limit> ml of cough syrup <const_dir>available</const_dir>, how many bottles of each should be made to <obj_dir>maximize</obj_dir> the total <obj_name>number of bottles</obj_name>?", "output": "max: \nst: kids_size_bottles >= 50"}
{"input": "A bakery makes fiber supplemented <var>brownies</var> and <var>lemon squares</var>. Each <var>brownie</var> requires <param>5</param> units of chocolate mix and <param>4</param> units of <obj_name>fiber</obj_name>. Each <var>lemon square</var> requires <param>7</param> units of lemon mix and <param>6</param> units of <obj_name>fiber</obj_name>. <var>Lemon squares</var> sell much faster and thus the number of <var>lemon squares</var> made must be <const_dir>larger than</const_dir> the number of <var>brownies</var> made. However, to please all customers, <const_dir>at least</const_dir> <limit>40%</limit> of the items made must be <var>brownies</var>. If the bakery <const_dir>has</const_dir> <limit>2500</limit> units of chocolate mix and <limit>3300</limit> units of lemon mix, how many of each should be made to <obj_dir>minimize</obj_dir> the <obj_name>total amount of fiber</obj_name> needed?", "output": "min: 4 brownie + 6 lemon_square\nst:"}
{"input": "A clinic employs <var>nurses</var> and <var>pharmacists</var> to deliver shots to patients. A <var>nurse</var> works <param>5</param> hours per shift while a <var>pharmacist</var> works <param>7</param> hours per shift. <var>Nurses</var> are paid $<param>250</param> per shift while <var>pharmacists</var> are paid $<param>300</param> per shift. Currently, the clinic <const_dir>needs</const_dir> <param>200</param> hours of healthcare labor to meet needs. If the firm has a <const_dir>budget</const_dir> of $<limit>9000</limit>, how many of each healthcare worker should be scheduled to <obj_dir>minimize</obj_dir> the total <obj_name>number of workers</obj_name>?", "output": "min: \nst:"}
{"input": "A laundromat can buy two types of washing machines, a <var>top-loading model</var> and a <var>front-loading model</var>. The <var>top-loading model</var> can wash <param>50</param> items per day while the <var>front-loading model</var> can wash <param>75</param> items per day. The <var>top-loading model</var> consumes <param>85</param> kWh per day while the <var>front-loading model</var> consumes <param>100</param> kWh per day. The laundromat must be able to wash <const_dir>at least</const_dir> <limit>5000</limit> items per day and has <const_dir>available</const_dir> <limit>7000</limit> kWh per day. Since the top-loading machine are harder to use, <const_dir>at most</const_dir> <limit>40%</limit> of the machines can be <var>top-loading</var>. Further, <const_dir>at least</const_dir> <limit>10</limit> machines should be <var>front-loading</var>. How many of each machine should the laundromat buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of washing machines</obj_name>?", "output": "min: \nst: front-loading >= 10"}
{"input": "A bank can build <var>small</var> and <var>large branches</var> to serve their customers. A <var>small branch</var> can serve <param>50</param> customers per day and requires <param>10</param> bank tellers. A <var>large branch</var> can serve <param>100</param> customers per day and requires <param>15</param> bank tellers. The bank has <const_dir>available</const_dir> <limit>200</limit> bank tellers and needs to be able to serve <const_dir>at least</const_dir> <limit>1200</limit> customers per day. How many of each branch size should they build to <obj_dir>minimize</obj_dir> the <obj_name>total number of branches</obj_name> needed?", "output": "min: \nst:"}
{"input": "A shipping company can purchase <var>regular</var> and <var>hybrid</var> vans to make deliveries. A <var>regular van</var> can deliver <param>500</param> packages per day and produces <param>200</param> units of pollutants. A <var>hybrid van</var> can deliver <param>300</param> packages per day and produces <param>100</param> units of pollutants. Due to a new environmental law, they can produce <const_dir>at most</const_dir> <limit>7000</limit> units of pollutants per day. However, the company needs to be able to deliver <const_dir>at least</const_dir> <limit>20000</limit> packages per day. How many of each type of van should they buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of vans</obj_name> needed?", "output": "min: \nst:"}
{"input": "In order to make carbon dioxide, wood is burned using two processes, <var>with a catalyst</var> and <var>without a catalyst</var>. The <var>process with a catalyst</var> requires <param>10</param> units of wood and <param>20</param> units of oxygen to make <param>15</param> units of <obj_name>carbon dioxide</obj_name>. The <var>process without a catalyst</var> requires <param>15</param> units of wood and <param>12</param> units of oxygen to make <param>18</param> units of <obj_name>carbon dioxide</obj_name>. There are <limit>300</limit> units of wood and <limit>300</limit> units of oxygen <const_dir>available</const_dir>. How many of each process should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of carbon dioxide</obj_name> produced?", "output": "max: 15 process_with_a_catalyst + 18 process_without_a_catalyst\nst:"}
{"input": "A tea estate has <const_dir>available</const_dir> <limit>500</limit> acres of land and they need to pick the tea leaves either using a <var>traditional machine</var> or <var>modern machine</var>. For each acre of land, the <var>traditional machine</var> can pick <param>30</param> kg of <obj_name>tea leaves</obj_name>, creates <param>10</param> kg of waste, and requires <param>20</param> liters of fuel. For each acre of land, the <var>modern machine</var> can pick <param>40</param> kg of <obj_name>tea leaves</obj_name>, creates <param>15</param> kg of waste, and requires <param>15</param> liters of fuel. The estate has <const_dir>available</const_dir> <limit>9000</limit> liters of fuel can handle <const_dir>at most</const_dir> <limit>6000</limit> kg of waste. For how many acres should each machine be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of tea leaves</obj_name> that can be picked?", "output": "max: 30 traditional_machine + 40 modern_machine\nst:"}
{"input": "A grilled cheese shop sells a <var>light</var> and <var>heavy</var> grilled cheese sandwich. A <var>light grilled cheese sandwich</var> requires <param>2</param> slices of bread and <param>3</param> slices of cheese. A <var>heavy grilled cheese sandwich</var> requires <param>3</param> slices of bread and <param>5</param> slices of cheese. Since most people who come to the store love grilled cheese, the store must make <const_dir>at least</const_dir> <param>3</param> times as many <var>heavy grilled cheese sandwiches</var> as <var>light grilled cheese sandwiches</var>. The store has <const_dir>available</const_dir> <limit>300</limit> slices of bread and <limit>500</limit> slices of cheese. If a <var>light grilled cheese sandwich</var> takes <param>10</param> <obj_name>minutes</obj_name> to make and a <var>heavy grilled cheese sandwich</var> takes <param>15</param> <obj_name>minutes</obj_name> to make, how many of each should they make to <obj_dir>minimize</obj_dir> the <obj_name>total production time</obj_name>?", "output": "min: 10 light_grilled_cheese_sandwich + 15 heavy_grilled_cheese_sandwich\nst:"}
{"input": "A post office is buying stamping machines and they can buy a <var>dual</var> or <var>single</var> model stamping machine. A <var>dual model stamping</var> machine can stamp <param>50</param> letters per minute while a <var>single model stamping</var> machine can stamp <param>30</param> letters per minute. The <var>dual model stamping</var> machine requires <param>20</param> units of glue per minute while the <var>single model stamping</var> machine requires <param>15</param> units of glue per minute. Since the <var>single model stamping</var> machine is quieter, the number of <var>single model stamping</var> machines must be <const_dir>more than</const_dir> the number of <var>dual model stamping</var> machines. Further, the post office wants to make sure they can stamp <const_dir>at least</const_dir> <limit>300</limit> letters per minute and use <const_dir>at most</const_dir> <limit>135</limit> units of glue per minute. How many of each stamping machine should they purchase to <obj_dir>minimize</obj_dir> the <obj_name>total number of stamping machines</obj_name>?", "output": "min: \nst:"}
{"input": "A banana company sells their bananas in <var>small</var> and <var>large</var> crates. A <var>small crate</var> can hold <param>20</param> bananas while a <var>large crate</var> can hole <param>50</param> bananas. Since <var>large crates</var> are more manageable, the number of <var>large crates</var> must be <const_dir>at least</const_dir> <param>twice</param> the number of <var>small crates</var>. However, <const_dir>at least</const_dir> <limit>5</limit> <var>small crates</var> should be used. If the company has <const_dir>available</const_dir> <limit>500</limit> bananas, how many of each crate should the company use to <obj_dir>maximize</obj_dir> the total <obj_name>number of crates</obj_name> produced?", "output": "max: \nst: small_crates >= 5"}
{"input": "A crepe store sells chocolate and <var>peanut butter crepes</var>. A <var>chocolate crepe</var> requires <param>3</param> units of chocolate spread and <param>6</param> units of <obj_name>crepe mix</obj_name>. A <var>peanut butter crepe</var> requires <param>4</param> units of peanut butter spread and <param>7</param> units of <obj_name>crepe mix</obj_name>. Recently, the <var>peanut butter crepe</var> has been more popular and therefore the number of <var>peanut butter crepes</var> made <const_dir>must exceed</const_dir> the number of <var>chocolate crepes</var> made. However <const_dir>at least</const_dir> <limit>25%</limit> of the crepes made should be <var>chocolate</var>. The store has <const_dir>available</const_dir> <limit>400</limit> units of chocolate spread and <limit>450</limit> units of peanut butter spread. How many of each should the store make to <obj_dir>minimize</obj_dir> the <obj_name>total amount of crepe mix</obj_name> needed?", "output": "min: 6 chocolate_crepe + 7 peanut_butter_crepe\nst:"}
{"input": "A fire department employs <var>regular</var> and <var>emergency fire</var> fighters. A <var>regular fire fighter</var> works <param>10</param> hours per shift and earns $<param>300</param>. An <var>emergency fire fighter</var> works <param>6</param> hours per shift and earns $<param>100</param>. Due to wildfires in the region, the fire department needs <const_dir>at least</const_dir> <limit>300</limit> hours of fire fighter time. If the fire department has a <const_dir>budget</const_dir> of $<limit>7000</limit>, how many of each should the fire department hire to <obj_dir>minimize</obj_dir> the total <obj_name>number of fire fighters</obj_name>?", "output": "min: \nst:"}
{"input": "A mall buys two types of hand sanitizer machines, a <var>motion activated</var> one and a <var>manual</var> one. The <var>motion activated</var> one can deliver <param>50</param> drops per minute and consumes <param>30</param> kWh. The <var>manual</var> one can deliver <param>75</param> drops per minute and consumes <param>20</param> kWh. Since the <var>motion activated</var> one is more hygienic, <const_dir>at most</const_dir> <limit>40%</limit> of the machines can be <var>manual</var>. In addition, <const_dir>at least</const_dir> <limit>3</limit> should be <var>motion activated</var>. If the mall must be able to deliver <const_dir>at least</const_dir> <limit>1000</limit> drops per minute and can use <const_dir>at most</const_dir> <limit>500</limit> kWh per minute, how many of each machine should they buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name>?", "output": "min: \nst: motion_activated >= 3"}
{"input": "A hot dog company can build two types of butcher shops, a <var>small shop</var> and a <var>large shop</var>. A <var>small shop</var> can make <param>30</param> hot dogs per day and requires <param>2</param> workers. A <var>large shop</var> can make <param>70</param> hot dogs per day and requires <param>4</param> workers. The company must make <const_dir>at least</const_dir> <limit>500</limit> hot dogs per day but they only have <const_dir>available</const_dir> <limit>30</limit> workers. How many of each butcher shop should the company build to <obj_dir>minimize</obj_dir> the total <obj_name>number of butcher shops</obj_name>?", "output": "min: \nst:"}
{"input": "An airport buys two types of vehicles, a <var>4-wheeler</var> and <var>3-wheeler,</var> to help move luggage. A <var>4-wheeler vehicle</var> can move <param>60</param> luggage per day and produces <param>30</param> units of pollutant per day. A <var>3-wheeler vehicle</var> can move <param>40</param> luggage per day and produces <param>15</param> units of pollutant per day. The airport needs to be able to move <const_dir>at least</const_dir> <limit>1000</limit> luggage per day. To avoid over-polluting the airport, they can produce <const_dir>at most</const_dir> <limit>430</limit> units of pollutant per day. How many of each vehicle should the airport buy to <obj_dir>minimize</obj_dir> the total <obj_name>number of vehicles</obj_name> needed.", "output": "min: \nst:"}
{"input": "A scientist is conducting two experiments to produce electricity, <var>experiment alpha</var> and <var>experiment beta</var>. In <var>experiment alpha</var>, <param>3</param> units of metal and <param>5</param> units of acid are required to produce <param>8</param> units of <obj_name>electricity</obj_name>. In <var>experiment beta</var>, <param>5</param> units of metal and <param>4</param> units of acid are required to produced <param>10</param> units of <obj_name>electricity</obj_name>. The lab has <limit>800</limit> units of metal and <limit>750</limit> units of acid <const_dir>available</const_dir>. How many of each experiment should the scientist conduct to <obj_dir>maximize</obj_dir> the total <obj_name>amount of electricity</obj_name> produced?", "output": "max: 8 experiment_alpha + 10 experiment_beta\nst:"}
{"input": "A man fishes <const_dir>in a</const_dir> <limit>250</limit> acre lake and can catch fish either using a <var>net</var> or <var>fishing line</var>. For each acre of the lake, using a <var>net</var> will catch <param>8</param> <obj_name>fish</obj_name> and requires <param>4</param> units of bait but also causes <param>2</param> units of pain for the fisherman. For each acre of the lake, using a <var>fishing line</var> will catch <param>5</param> <obj_name>fish</obj_name> and requires <param>3</param> units of bait but also causes <param>1</param> unit of pain for the fisherman. The fisherman has <const_dir>available</const_dir> <limit>800</limit> units of bait and can tolerate <const_dir>at most</const_dir> <limit>350</limit> units of pain. For how many acres each should he use each fishing method to <obj_dir>maximize</obj_dir> the <obj_name>amount of fish</obj_name> he can catch?", "output": "max: 8 net + 5 fishing_line\nst: net + fishing_line <= 250"}
{"input": "A coffee shop sells <var>mochas</var> and <var>regular coffees</var>. Each <var>mocha</var> requires <param>3</param> units of coffee powder and <param>6</param> units of milk. Each <var>regular coffee</var> requires <param>6</param> units of coffee powder and <param>2</param> units of milk. The shop has <const_dir>available</const_dir> <limit>400</limit> units of coffee powder and <limit>500</limit> units of milk. Making a <var>mocha</var> takes <param>5</param> <obj_name>minutes</obj_name> and making a <var>regular coffee</var> takes <param>3</param> <obj_name>minutes</obj_name>. Since mochas are more popular among people, the shop must make <const_dir>at least</const_dir> <param>3</param> times as many <var>mochas</var> as <var>regular coffees</var>. How many of each should they make to <obj_dir>minimize</obj_dir> the <obj_name>total production time</obj_name>?", "output": "min: 5 mocha + 3 regular_coffee\nst:"}
{"input": "A butcher shop is buying meat slicers for their shop, a <var>manual</var> and <var>automatic</var> slicer. The <var>manual slicer</var> can cut <param>5</param> slices per minute while the <var>automatic slicer</var> can cut <param>8</param> slices per minute. In addition, to make sure all the parts operate smoothly, the <var>manual slicer</var> requires <param>3</param> units of grease per minute while the <var>automatic slicer</var> requires <param>6</param> units of grease per minute. Since the <var>automatic slicer</var> does not need someone to operate it, the number of <var>manual slicers</var> must be <const_dir>less than</const_dir> the number of <var>automatic slicers</var>. In addition, the butcher shop needs to be able to cut <const_dir>at least</const_dir> <limit>50</limit> slices per minute but can use <const_dir>at most</const_dir> <limit>35</limit> units of grease per minute. How many of each slicer should the butcher shop buy to <obj_dir>minimize</obj_dir> <obj_name>the total number of slicers</obj_name> in the shop?", "output": "min: \nst:"}
{"input": "A water company sells water in <var>glass</var> and <var>plastic</var> bottles. A <var>glass bottle</var> can hole <param>500</param> ml of water while a <var>plastic bottle</var> can hold <param>750</param> ml of water. Because most customer prefer <var>plastic bottles</var>, the number of <var>plastic bottles</var> must be <const_dir>at least</const_dir> <param>3</param> times the number of <var>glass bottles</var>. However, there must be <const_dir>at least</const_dir> <limit>20</limit> <var>glass bottles</var>. If the company has <const_dir>available</const_dir> <limit>250000</limit> ml of water, how many of each bottle should be made to <obj_dir>maximize</obj_dir> the total <obj_name>number of bottles</obj_name>?", "output": "max: \nst: glass_bottles >= 20"}
{"input": "An Indian restaurant makes <var>goat</var> and <var>chicken</var> curry. Each bowl of <var>goat curry</var> requires <param>3</param> units of goat meat and <param>6</param> units of the <obj_name>curry base</obj_name>. Each bowl of <var>chicken curry</var> requires <param>5</param> units of chicken meat and <param>5</param> units of the <obj_name>curry base</obj_name>. The restaurant has <const_dir>available</const_dir> <limit>1500</limit> units of goat meat and <limit>2000</limit> units of chicken meat. <const_dir>At least</const_dir> <limit>25%</limit> of the bowls made must be <var>chicken curry</var>. Since <var>goat curry</var> is more popular, the number of <var>goat curry</var> bowls <const_dir>must be larger than</const_dir> the number of <var>chicken curry</var> bowls. How many of each type of curry bowl should be made to <obj_dir>minimize</obj_dir> the <obj_name>total amount of curry base</obj_name> used?", "output": "min: 6 goat_curry + 5 chicken_curry\nst:"}
{"input": "An accounting firm employs <var>part time workers</var> and <var>full time workers</var>. <var>Full time workers</var> work <param>8</param> hours per shift while <var>part time workers</var> work <param>4</param> hours per shift. In addition, <var>full time workers</var> are paid $<param>300</param> per shift while <var>part time workers</var> are paid $<param>100</param> per shift. Currently, the accounting firm has a project <const_dir>requiring</const_dir> <limit>500</limit> hours of labor. If the firm has a <const_dir>budget</const_dir> of $<limit>15000</limit>, how many of each type of worker should be scheduled to <obj_dir>minimize</obj_dir> the <obj_name>total number of workers</obj_name>.", "output": "min: \nst:"}
{"input": "A factory has two machines, <var>A</var> and <var>B.</var> Each day, <var>machine A</var> can make <param>30</param> items and consumes <param>100</param> kWh. <var>Machine B</var> can make <param>50</param> items and consumes <param>120</param> kWh per day. The factory must produce <const_dir>at least</const_dir> <limit>1000</limit> items per day and has <limit>3000</limit> kWh of electricity <const_dir>available</const_dir> per day. Since there are not many workers that can operate both machines, <const_dir>at most</const_dir> <limit>30%</limit> of the machines must be of type <var>B.</var> Further, <const_dir>at least</const_dir> <limit>5</limit> machines of type <var>A</var> should be used. How many of each machine should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of machines</obj_name>?", "output": "min: \nst: A >= 5"}
{"input": "A toy company can build two factory types, a <var>medium sized factory</var> and a <var>small factory</var>. A <var>medium sized factory</var> can make <param>50</param> toys per day and requires <param>3</param> operators. A <var>small factory</var> can make <param>35</param> toys per day and requires <param>2</param> operators. The company must make <const_dir>at least</const_dir> <limit>250</limit> toys per day but they only have <const_dir>available</const_dir> <limit>16</limit> operators. How many of each factory should the company build to <obj_dir>minimize</obj_dir> the total <obj_name>number of factories</obj_name>?", "output": "min: \nst:"}
{"input": "A chemical plant can buy two types of generators, <var>generator A</var> and <var>generator B</var>, which use two different processes to generate hydrogen. <var>Generator A</var> uses an electrolysis process and produces <param>40</param> cubic meters of hydrogen as well as <param>300</param> units of pollutants every day. <var>Generator B</var> uses a fermentation process to produce <param>30</param> cubic meters of hydrogen per day while outputting <param>200</param> units of pollutants. The chemical plant must make a <const_dir>minimum</const_dir> of <limit>1000</limit> cubic meters of hydrogen per day but due to environmental restrictions they can produce <const_dir>at most</const_dir> <limit>3000</limit> units of pollutant. How many of each type of generator should they buy to <obj_dir>minimize</obj_dir> the <obj_name>number of generators</obj_name> needed?", "output": "min: \nst:"}
{"input": "There are two chemical reactions, <var>chemical reaction A</var> and <var>chemical reaction B.</var> <var>Chemical reaction A</var> requires <param>5</param> units of rare inert gas and <param>6</param> units of treated water to produce <param>10</param> units of a <obj_name>rare compound</obj_name>. <var>Chemical reaction B</var> requires <param>7</param> units of rare inert gas and <param>3</param> units of treater water to produce <param>8</param> units of a <obj_name>rare compound</obj_name>. There are <limit>1000</limit> units of the rare inert gas and <limit>800</limit> units of treated water <const_dir>available</const_dir> in the lab. How many reactions of each type should be done to <obj_dir>maximize</obj_dir> the <obj_name>amount of rare compound</obj_name> produced?", "output": "max: 10 Chemical_reaction_A + 8 Chemical_reaction_B\nst:"}
{"input": "A mining company has <const_dir>available</const_dir> a total of <limit>100</limit> square miles of mining sites and considering the use of two mining techniques: <var>heap leaching</var> and <var>vat leaching</var>. For each square mile of land, <var>heap leaching</var> technique can have a daily production of <param>3</param> tons of <obj_name>rare earth oxide</obj_name> per square miles but it also creates <param>8</param> tons of polluted wastewater and requires <param>10</param> extraction machines. On the other hand, <var>vat leaching</var> technique produces <param>5</param> tons of <obj_name>rare earth oxide</obj_name> per square miles per day while creating <param>17</param> tons of polluted wastewater and requiring <param>20</param> extraction machines. There are <limit>100</limit> machines <const_dir>available</const_dir> and due to environmental regulations, the amount of polluted wastewater must be <const_dir>at most</const_dir> <limit>90</limit> tons daily. Find the proportion of lands that use each mining technique in order to <obj_dir>maximize</obj_dir> the daily production of <obj_name>rare earth oxide</obj_name>.", "output": "max: 3 heap_leaching + 5 vat_leaching\nst: heap_leaching + vat_leaching <= 100"}
{"input": "A small chocolate shop makes <var>milk chocolate</var> and <var>dark chocolate bars</var>. <var>Milk chocolate bars</var> require <param>4</param> units of cocoa and <param>7</param> units of milk. <var>Dark chocolate bars</var> require <param>6</param> units of cocoa and <param>3</param> units of milk. The shop has <limit>2000</limit> units of cocoa and <limit>1750</limit> units of milk <const_dir>available</const_dir>. In addition since <var>milk chocolate</var> sells better, <const_dir>at least</const_dir> <param>2</param> times as many <var>milk chocolate bars</var> need to be made as <var>dark chocolate bars</var>.  If making a <var>milk chocolate bar</var> takes <param>15</param> <obj_name>minutes</obj_name> and making a <var>dark chocolate bar</var> takes <param>12</param> <obj_name>mins</obj_name>, how many of each should the make to <obj_dir>minimize</obj_dir> <obj_name>total production time</obj_name>?", "output": "min: 15 milk_chocolate_bar + 12 dark_chocolate_bar\nst:"}
{"input": "An office is buying printers for their headquarters, a <var>premium model</var> and <var>regular model</var>. The <var>premium model</var> can print <param>30</param> pages per minute while the <var>regular model</var> can print <param>20</param> pages per minute. In addition, the <var>premium model</var> requires <param>4</param> units of ink per minute while the <var>regular model</var> requires <param>3</param> units of ink per minute. The office wants to make sure that <const_dir>at least</const_dir> <limit>200</limit> pages can be printed per minute and that <const_dir>at most</const_dir> <limit>35</limit> units of ink are used per minute.  Since the <var>premium model</var> is more user friendly, the number <var>regular printers</var> must be <const_dir>less than</const_dir> the number of <var>premium printers</var>. How many of each printer should be bought to <obj_dir>minimize</obj_dir> the <obj_name>total number of printers</obj_name> in the office?", "output": "min: \nst:"}
{"input": "A vine company sells vine in <var>vintage</var> and <var>regular bottles</var>. A <var>vintage bottle</var> can hold <param>500</param> ml of vine while a <var>regular bottle</var> can hold <param>750</param> ml of vine. The company has <const_dir>available</const_dir> <limit>100000</limit> ml of vine. Because <var>vintage bottles</var> are mostly bought by collectors, the number of <var>regular bottles</var> must be <const_dir>at least</const_dir> <param>4</param> times as much as the number of <var>vintage bottles</var>. However, <const_dir>at least</const_dir> <limit>10</limit> <var>vintage bottles</var> must be made. How many of each should be made to <obj_dir>maximize</obj_dir> the total <obj_name>number of bottles</obj_name> produced?", "output": "max: \nst: vintage_bottles >= 10"}
{"input": "A candy company is making <var>peach flavored candy</var> and <var>cherry flavored candy</var>. Each pack of <var>peach flavored candy</var> requires <param>3</param> units of peach flavoring and <param>5</param> units of <obj_name>special syrup</obj_name>. Each pack of <var>cherry flavored candy</var> requires <param>5</param> units of cherry flavoring and <param>4</param> units of <obj_name>special syrup</obj_name>. The company has <const_dir>available</const_dir> <limit>3000</limit> units of peach flavoring and <limit>4000</limit> units of cherry flavoring. <var>Peach candy</var> is much more popular and thus the number of <var>peach candy</var> packs must be <const_dir>larger than</const_dir> the number of <var>cherry candy</var> packs. In addition, <const_dir>at least</const_dir> <limit>30%</limit> of the pack must be <var>cherry flavored</var>. How many of each should be made to <obj_dir>minimize</obj_dir> the total <obj_name>amount of special syrup</obj_name> used?", "output": "min: 5 peach_flavored_candy + 4 cherry_flavored_candy\nst:"}
{"input": "A patient in the hospital can take two pills, <var>Pill 1</var> and <var>Pill 2</var>. Per pill, <var>pill 1</var> provides <param>0.2</param> units of pain medication and <param>0.3</param> units of anxiety medication. Per pill, <var>pill 2</var> provides <param>0.6</param> units of pain medication and <param>0.2</param> units of anxiety medication. In addition, <var>pill 1</var> causes <param>0.3</param> units of <obj_name>discharge</obj_name> while <var>pill 2</var> causes <param>0.1</param> units of <obj_name>discharge</obj_name>. <const_dir>At most</const_dir> <limit>6</limit> units of pain medication can be provided and <const_dir>at least</const_dir> <limit>3</limit> units of anxiety medication must be provided. How many pills of each should the patient be given to <obj_dir>minimize</obj_dir> the total <obj_name>amount of discharge</obj_name>?", "output": "min: 0.3 pill_1 + 0.1 pill_2\nst:"}
{"input": "A man on a strict diet only drinks meal replacement drinks from two brands, <var>alpha</var> and <var>omega</var>. The <var>alpha brand drink</var> contains <param>30</param> grams of protein, <param>20</param> grams of <obj_name>sugar</obj_name>, and <param>350</param> calories per bottle. The <var>omega brand drink</var> contains <param>20</param> grams of protein, <param>15</param> grams of <obj_name>sugar</obj_name>, and <param>300</param> calories per bottle. The man wants to get <const_dir>at least</const_dir> <limit>100</limit> grams of protein and <limit>2000</limit> calories. In addition, because the <var>omega brand drink</var> contains tiny amounts of caffeine, <const_dir>at most</const_dir> <limit>35%</limit> of the drink should be <var>omega brand</var>. How many bottles of each should he drink to <obj_dir>minimize</obj_dir> his <obj_name>sugar intake</obj_name>?", "output": "min: 20 alpha_brand_drink + 15 omega_brand_drink\nst:"}
{"input": "A summer camps does science experiments in two pre filled beakers, <var>beaker 1</var> and <var>beaker 2</var>. <var>Beaker 1</var> uses <param>4</param> units of flour and <param>6</param> units of special liquid to make <param>5</param> units of <obj_name>slime</obj_name>. <var>Beaker 2</var> uses <param>6</param> units of flour and <param>3</param> units of special liquid to make <param>3</param> units of <obj_name>slime</obj_name>.  However, <var>beaker 1</var> creates <param>4</param> units of waste while <var>beaker 2</var> creates <param>2</param> units of waste. The summer camp has <const_dir>available</const_dir> <limit>150</limit> units of flour and <limit>100</limit> units of special liquid. If <const_dir>at most</const_dir> <limit>30</limit> units of waste can be produced, how many of each beaker should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of slime</obj_name> produced?", "output": "max: 5 Beaker_1 + 3 Beaker_2\nst:"}
{"input": "An dog hospital <const_dir>has</const_dir> <limit>2000</limit> units of tooth medication to make both <var>small</var> and <var>large bones</var>. A <var>small bone</var> requires <param>10</param> units of tooth medication and <param>12</param> units of <obj_name>meat</obj_name>. A <var>large bone</var> requires <param>15</param> units of tooth medication and <param>15</param> units of <obj_name>meat</obj_name>. Since most dogs prefer the <var>small bones</var>, <const_dir>at least</const_dir> <limit>50%</limit> of the bones made must be <var>small</var>. In addition, the hospital must make <const_dir>at least</const_dir> <limit>30</limit> <var>large bones</var>. How many of each bone should be made to <obj_dir>minimize</obj_dir> the <obj_name>amount of meat</obj_name> needed?", "output": "min: 12 small_bone + 15 large_bone\nst: large_bones >= 30"}
{"input": "A scientist in the arctic needs to get enough vitamin D and vitamin C in his diet by drinking <var>orange</var> and <var>apple juice</var>. Each box of <var>orange juice</var> contains <param>10</param> units of <obj_name>vitamin D</obj_name> and <param>8</param> units of vitamin C. Each box of <var>apple juice</var> contains <param>12</param> units of <obj_name>vitamin D</obj_name> and <param>6</param> units of vitamin C. Since the scientist prefers <var>apple juice</var>, he must drink <const_dir>at least</const_dir> <param>3</param> times as many <var>apple juice</var> boxes and <var>orange juice</var> boxes. However, he must also drink <const_dir>at least</const_dir> <limit>3</limit> <var>orange juice</var> boxes. To avoid a vitamin C overdose, the scientist can consume <const_dir>at most</const_dir> <limit>300</limit> units of vitamin C. How many of each juice box should he drink to <obj_dir>maximize</obj_dir> his <obj_name>total vitamin D</obj_name> intake?", "output": "max: 10 orange_juice + 12 apple_juice\nst: orange_juice >= 3"}
{"input": "A cleaning company uses a <var>cleansing chemical</var> and <var>odor-removing chemical</var> to clean a house. Each unit of the <var>cleansing chemical</var> takes <param>4</param> <obj_name>units</obj_name> to be effective while each unit of the <var>odor-removing chemical</var> takes <param>6</param> <obj_name>minutes</obj_name> to be effective. The company must use <const_dir>at least</const_dir> <limit>100</limit> units of the <var>cleansing chemical</var>. In total, <const_dir>at least</const_dir> <limit>300</limit> units of chemicals can be used per house. Further, because the <var>cleansing chemical</var> is strong, there can be <const_dir>at most</const_dir> <param>twice</param> the amount of <var>cleansing chemical</var> as <var>odor-removing chemical</var>. How many units of each should be used to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for a house to be cleaned?", "output": "min: 4 cleansing_chemical + 6 odor-removing_chemical\nst: cleansing_chemical >= 100\ncleansing_chemical + odor-removing_chemical <= 300"}
{"input": "A drug company is making allergy pills and fever reducing pills in two factories, <var>factory 1</var> and <var>factory 2</var>. <var>Factory 1</var> produces <param>20</param> allergy pills and <param>15</param> fever reducing pills per hour. <var>Factory 2</var> produces <param>10</param> allergy pills and <param>30</param> fever reducing pills per hour.  <var>Factory 1</var> is much more efficient and only requires <param>20</param> units of a rare compound while <var>factory 2</var> requires <param>30</param> units of a rare compound. The company only has <const_dir>available</const_dir> <limit>1000</limit> units of the rare compound. If the company must make <const_dir>at least</const_dir> <limit>700</limit> allergy pills and <limit>600</limit> fever reducing pills, how many hours should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A doctor recommends her patient eat more <var>fish</var> and <var>chicken</var> to increase her protein and iron intake. Each <var>fish meal</var> contains <param>10</param> units of protein and <param>12</param> units of iron. Each <var>chicken meal</var> contains <param>15</param> units of protein and <param>8</param> units of iron. The patient needs to consume <const_dir>at least</const_dir> <limit>130</limit> units of protein and <limit>120</limit> units of iron. Since the <var>chicken meal</var> is less expensive, the patient prefers to consume <const_dir>at least</const_dir> <param>twice</param> as many <var>chicken meals</var> as <var>fish meals</var>. If each <var>fish meal</var> contains <param>7</param> units of <obj_name>fat</obj_name> and each <var>chicken meal</var> contains <param>10</param> units of <obj_name>fat</obj_name>, how many meals of each should she eat to <obj_dir>minimize</obj_dir> her <obj_name>fat intake</obj_name>?", "output": "min: 7 fish_meal + 10 chicken_meal\nst:"}
{"input": "A pharmaceutical company makes skin cream in batches, a <var>regular batch</var> and <var>premium batch</var>, to sell to hospitals. The <var>regular batch</var> requires <param>50</param> units of medicinal ingredients and <param>40</param> units of rehydration product. A <var>premium batch</var> requires <param>40</param> units of medicinal ingredients and <param>60</param> units of rehydration product. The company has <const_dir>available</const_dir> <limit>3000</limit> units of medicinal ingredients and <limit>3500</limit> units of rehydration product. Since the <var>premium batch</var> sells better, the number of <var>regular batches</var> must be <const_dir>less than</const_dir> the number of <var>premium batches</var>. In addition, the company must make <const_dir>at least</const_dir> <limit>10</limit> <var>regular batches</var>. If a <var>regular batch</var> can treat <param>50</param> <obj_name>people</obj_name> and a <var>premium batch</var> can treat <param>30</param> <obj_name>people</obj_name>, how many of each batch should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 50 regular_batch + 30 premium_batch\nst: regular_batches >= 10"}
{"input": "A clinic takes patient blood pressure either using an <var>automatic machine</var> or a <var>manual machine</var>. The <var>automatic machine</var> takes <param>10</param> minutes per patient while the <var>manual machine</var> takes <param>15</param> minutes per patient. Since the <var>automatic machine</var> frequently breaks, <const_dir>at least</const_dir> <param>twice</param> as many patients must have their blood pressure taken by the <var>manual machine</var> than the <var>automatic machine</var>. However, <const_dir>at least</const_dir> <limit>20</limit> patient can be processed by the <var>automatic machine</var>. If the clinic is <const_dir>open</const_dir> for <limit>20000</limit> minutes, <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> whose blood pressure can be taken.", "output": "max: \nst: automatic_machine >= 20"}
{"input": "A patient with a sore throat can drink two syrups, <var>syrup 1</var> and <var>syrup 2</var> for treatment. Per serving, <var>syrup 1</var> delivers <param>0.5</param> units of medicine to the throat and <param>0.4</param> units of medicine to the lungs. Per serving, <var>syrup 2</var> delivers <param>0.2</param> units of medicine to the throat and <param>0.5</param> units of medicine to the lungs. Furthermore, <var>syrup 1</var> contains <param>0.5</param> units of <obj_name>sugar</obj_name> while <var>syrup 2</var> contains <param>0.3</param> units of <obj_name>sugar</obj_name> per serving. The patient can get <const_dir>at most</const_dir> <limit>5</limit> units of medicine for the throat and <const_dir>at least</const_dir> <limit>4</limit> units of medicine to the lungs. How many servings of each should the patient take to <obj_dir>minimize</obj_dir> his <obj_name>sugar intake</obj_name>?", "output": "min: 0.5 syrup_1 + 0.3 syrup_2\nst:"}
{"input": "A sailor can eat either a <var>crab cakes</var> or a <var>lobster roll</var> for his meals. He needs to ensure he gets <const_dir>at least</const_dir> <limit>80</limit> units of vitamin A and <limit>100</limit> units of vitamin C. Each <var>crab cake</var> contains <param>5</param> units of vitamin A and <param>7</param> units of vitamin C. Each <var>lobster roll</var> contains <param>8</param> units of vitamin A and <param>4</param> units of vitamin C. In addition, since lobster is more expensive, <const_dir>at most</const_dir> <limit>40%</limit> of his meals should be <var>lobster rolls</var>. If each <var>crab cake</var> contains <param>4</param> units of <obj_name>unsaturated fat</obj_name> and each <var>lobster roll</var> contains <param>6</param> units of <obj_name>unsaturated fat</obj_name>, how many of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>unsaturated fat</obj_name> intake?", "output": "min: 4 crab_cake + 6 lobster_roll\nst:"}
{"input": "A science show preforms two different demonstrations, <var>demonstration 1</var> and <var>demonstration 2</var>. In <var>demonstration 1</var>, <param>10</param> units of mint and <param>20</param> units of the active ingredient is used to make <param>25</param> units of <obj_name>minty foam</obj_name>. In <var>demonstration 2</var>, <param>12</param> units of mint and <param>15</param> units of the active ingredient is used to make <param>18</param> units of <obj_name>minty foam</obj_name>. In addition, <var>demonstration 1</var> creates <param>5</param> units of black tar while <var>demonstration 2</var> creates <param>3</param> units of black tar. The show has <const_dir>available</const_dir> <limit>120</limit> units of mint and <limit>100</limit> units of active ingredients. If <const_dir>at most</const_dir> <limit>50</limit> units of black tar can be produced, how many of each demonstration should be done to <obj_dir>maximize</obj_dir> the <obj_name>amount of minty foam</obj_name> produced?", "output": "max: 25 demonstration_1 + 18 demonstration_2\nst:"}
{"input": "A lab has <limit>20000</limit> mg of mRNA anti-viral <const_dir>available</const_dir> to make <var>children's</var> and <var>adult vaccines</var>. Each <var>children's vaccine</var> contains <param>50</param> mg of mRNA and <param>50</param> mg of <obj_name>fever suppressant</obj_name>. Each <var>adult vaccine</var> contains <param>75</param> mg of mRNA and <param>75</param> mg of <obj_name>fever suppressant</obj_name>. Since <var>adult vaccines</var> are more essential, <const_dir>at least</const_dir> <limit>70%</limit> of vaccines should be <var>adult vaccines</var>. However, <const_dir>at least</const_dir> <limit>50</limit> <var>children's vaccines</var> should be made. How many of each vaccine should be made to <obj_dir>minimize</obj_dir> the <obj_name>amount of fever suppressant</obj_name> used?", "output": "min: 50 children's_vaccine + 75 adult_vaccine\nst: children's_vaccines >= 50"}
{"input": "A parent feeds their baby two flavors of baby food, <var>apple</var> and <var>carrot</var>, in order to meet the babies fat and folate requirements. Each serving of <var>apple flavored baby</var> food contains <param>2</param> units of <obj_name>fat</obj_name> and <param>5</param> units of folate. Each serving of <var>carrot flavored baby</var> food contains <param>4</param> units of <obj_name>fat</obj_name> and <param>3</param> units of folate. The baby does not like the <var>carrot flavor</var>, and therefore he <const_dir>must eat</const_dir> <param>three</param> times as many <var>apple flavored baby food</var> as <var>carrot flavored baby</var> food. However, he must eat <const_dir>at least</const_dir> <limit>2</limit> servings of <var>carrot flavored baby</var> food. If the baby can consume <const_dir>at most</const_dir> <limit>100</limit> units of folate, how many servings of each should he eat to <obj_dir>maximize</obj_dir> his <obj_name>fat intake</obj_name>?", "output": "max: 2 apple_flavored_baby + 4 carrot_flavored_baby\nst: carrot_flavored_baby >= 2"}
{"input": "Both <var>fertilizer</var> and <var>seeds</var> need to be added to a lawn. One unit of <var>fertilizer</var> takes <param>0.5</param> <obj_name>minutes</obj_name> to be effective while one unit of <var>seeds</var> takes <param>1.5</param> <obj_name>minutes</obj_name> to be effective. There can be <const_dir>at most</const_dir> <limit>300</limit> units of <var>fertilizer</var> and <var>seeds</var> combined added to the lawn. In addition <const_dir>at least</const_dir> <limit>50</limit> units of <var>fertilizer</var> need to be added. Since the lawn is really patchy, there can be <const_dir>at most</const_dir> <param>twice</param> the amount of <var>fertilizer</var> as <var>seeds</var>. How many units of each should be added to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for the lawn to be ready?", "output": "min: 0.5 fertilizer + 1.5 seeds\nst: fertilizer + seeds <= 300\nfertilizer >= 50"}
{"input": "A pharmacy has two factories, <var>factory 1</var> and <var>factory 2</var>, where they make acne cream and anti-bacterial cream. <var>Factory 1</var> produces <param>12</param> units of acne cream and <param>15</param> units of anti-bacterial cream per hour. <var>Factory 2</var> produces <param>20</param> units of acne cream and <param>10</param> units of anti-bacterial cream per hour. <var>Factory 1</var> requires <param>30</param> units of base gel per hour while <var>factory 2</var> requires <param>45</param> units of base gel per hour. The pharmacy has <const_dir>available</const_dir> <limit>5000</limit> units of base gel. Further, they must make <const_dir>at least</const_dir> <limit>800</limit> units of acne cream and <limit>1000</limit> units of anti-bacterial cream. How many hours should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A doctor recommends that a man eat <var>burgers</var> and <var>pizza</var> in order to put on weight. Each <var>burger</var> contains <param>10</param> units of fat and <param>300</param> calories. Each slice of <var>pizza</var> contains <param>8</param> units of fat and <param>250</param> calories. The man must get <const_dir>at least</const_dir> <limit>130</limit> units of fat and <limit>3000</limit> calories. Further, each <var>burger</var> contains <param>12</param> units of <obj_name>cholesterol</obj_name> while each slice of <var>pizza</var> contains <param>10</param> units of <obj_name>cholesterol</obj_name>. Since <var>burgers</var> are slightly more expensive, the man decides to eat <const_dir>at least</const_dir> <param>twice</param> as many slices of <var>pizza</var> as <var>burgers</var>. How many of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>cholesterol intake</obj_name>?", "output": "min: 12 burger + 10 pizza\nst:"}
{"input": "A clinic makes batches of <var>vitamin shots</var> and <var>pills</var>. Each batch of <var>vitamin shots</var> requires <param>30</param> units of vitamin C and <param>40</param> units of vitamin D. Each batch of <var>vitamin pills</var> requires <param>50</param> units of vitamin C and <param>30</param> units of vitamin D. Since pills are more popular, the number of batches of <var>vitamin pills</var> must be <const_dir>larger than</const_dir> the number of batches of <var>vitamin shots</var>. Further, the clinic can make <const_dir>at most</const_dir> <limit>10</limit> batches of <var>vitamin shots</var>. The clinic has <const_dir>available</const_dir> <limit>1200</limit> units of vitamin C and <limit>1500</limit> units of vitamin D. If each batch of <var>vitamin shots</var> can supply <param>10</param> <obj_name>people</obj_name> and each batch of <var>vitamin pills</var> can supply <param>7</param> <obj_name>people</obj_name>, how many batches of each should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be supplied?", "output": "max: 10 vitamin_shots + 7 vitamin_pills\nst: vitamin_shots <= 10"}
{"input": "A doctor's office takes the  temperature of patients one by one either by using an <var>electronic</var> or <var>regular thermometer</var>. The <var>electronic thermometer</var> takes <param>3</param> minutes to make a reading while the <var>regular thermometer</var> takes <param>2</param> minutes to make a reading. Since the <var>electronic thermometer</var> is more accurate, <const_dir>at least</const_dir> <param>twice</param> as many patients should have their temperature checked by the <var>electronic thermometer</var> than the <var>regular thermometer</var>. Since the <var>electronic thermometer</var> has a cooldown time, <const_dir>at least</const_dir> <limit>50</limit> patients should have their temperature checked by a <var>regular thermometer</var>. If the office is <const_dir>open for</const_dir> <limit>15000</limit> minutes, <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> whose temperature can be taken?", "output": "max: \nst: regular_thermometer >= 50"}
{"input": "A patient can be hooked up to two machines to have medicine delivered, <var>machine 1</var> and <var>machine 2</var>. <var>Machine 1</var> delivers <param>0.5</param> units of medicine to the heart per minute and <param>0.8</param> units of medicine per minute to the brain. <var>Machine 2</var> delivers <param>0.3</param> units of medicine per minute to the heart and <param>1</param> unit of medicine per minute to the brain. In addition however, <var>machine 1</var> creates <param>0.3</param> units of <obj_name>waste</obj_name> per minute while <var>machine 2</var> creates <param>0.5</param> units of <obj_name>waste</obj_name> per minute. If <const_dir>at most</const_dir> <limit>8</limit> units of medicine can be received by the heart and <const_dir>at least</const_dir> <limit>4</limit> units of medicine should be received by the brain, how many minutes should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>total amount of waste</obj_name> produced?", "output": "min: 0.3 machine_1 + 0.5 machine_2\nst:"}
{"input": "A travelling salesman only eats <var>ramen</var> and <var>fries</var>. Each pack of <var>ramen</var> contains <param>400</param> calories, <param>20</param> grams of protein, and <param>100</param> mg of <obj_name>sodium</obj_name>. Each pack of <var>fries</var> contains <param>300</param> calories, <param>10</param> grams of protein, and <param>75</param> mg of <obj_name>sodium</obj_name>. Since <var>fries</var> are easier to eat while driving, <const_dir>at most</const_dir> <limit>30%</limit> of his meals can be <var>ramen</var>. The salesman wants to ensure he eats <const_dir>at least</const_dir> <limit>3000</limit> calories and <limit>80</limit> grams of protein. How many of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>sodium</obj_name> intake?", "output": "min: 100 ramen + 75 fries\nst:"}
{"input": "A science store makes two boxes, a <var>cheap</var> and <var>expensive box</var>. The <var>cheap box</var> contains <param>3</param> units of metal and <param>5</param> units of acid which can be mixed to create <param>8</param> units of <obj_name>foam</obj_name>. The <var>expensive box</var> contains <param>5</param> units of metal and <param>8</param> units of acid which can be mixed to create <param>10</param> units of <obj_name>foam</obj_name>. The <var>cheap box</var> however gives off <param>2</param> units of heat while the <var>expensive box</var> gives off <param>3</param> units of heat. The science store has <const_dir>available</const_dir> <limit>200</limit> units of metal and <limit>300</limit> units of acid. If <const_dir>at most</const_dir> <limit>50</limit> units of heat can be given off, how many of each box should the store make to <obj_dir>maximize</obj_dir> the <obj_name>amount of foam</obj_name> produced?", "output": "max: 8 cheap_box + 10 expensive_box\nst:"}
{"input": "A pharmacy <const_dir>has</const_dir> <limit>3000</limit> mg of morphine to make <var>painkillers</var> and <var>sleeping pills</var>. Each <var>painkiller pill</var> requires <param>10</param> mg of morphine and <param>3</param> units of <obj_name>digestive medicine</obj_name>. Each <var>sleeping pill</var> requires <param>6</param> mg of morphine and <param>5</param> units of <obj_name>digestive medicine</obj_name>. The pharmacy needs to make <const_dir>at least</const_dir> <limit>50</limit> <var>painkiller pills</var>. Since <var>sleeping pills</var> are more popular, <const_dir>at least</const_dir> <limit>70%</limit> of the pills should be <var>sleeping pills</var>. How many of each should the pharmacy make to <obj_dir>minimize</obj_dir> the total <obj_name>amount of digestive medicine</obj_name> needed?", "output": "min: 3 painkiller_pill + 5 sleeping_pill\nst: painkiller_pills >= 50"}
{"input": "A boy needs to get enough magnesium and zinc in his diet by eating chewable <var>gummies</var> and taking <var>pills</var>. Each <var>gummy</var> contains <param>3</param> units of magnesium and <param>4</param> units of <obj_name>zinc</obj_name>. Each <var>pill</var> contains <param>2</param> units of magnesium and <param>5</param> units of <obj_name>zinc</obj_name>. The boy must take <const_dir>at least</const_dir> <limit>10</limit> <var>pills</var>. Since he prefers <var>gummies</var> more, he must eat <const_dir>at least</const_dir> <param>3</param> times the amount of <var>gummies</var> as <var>pills</var>. If the boy can consume <const_dir>at most</const_dir> <limit>200</limit> units of magnesium, how many of each should he eat to <obj_dir>maximize</obj_dir> his <obj_name>zinc</obj_name> intake?", "output": "max: 4 gummy + 5 pill\nst: pills >= 10"}
{"input": "A patient takes <var>anxiety medication</var> and <var>anti-depressants one</var> after the other. Each unit of <var>anxiety medication</var> takes <param>3</param> <obj_name>minutes</obj_name> to be effective while each unit of <var>anti-depressant</var> takes <param>5</param> <obj_name>minutes</obj_name> to be effective. The patient must take <const_dir>at least</const_dir> <limit>100</limit> units of medication and <const_dir>at least</const_dir> <limit>30</limit> should be <var>anxiety medication</var>. Since the <var>anxiety medication</var> is strong, the patient can take <const_dir>at most</const_dir> <param>twice</param> the amount of <var>anxiety medication</var> as <var>anti-depressants</var>. How many units of each should the patient take to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it take for the medication to be effective?", "output": "min: 3 anxiety_medication + 5 anti-depressant\nst: anxiety_medication + anti-depressant <= 100\nanxiety_medication >= 30"}
{"input": "A pharmacy makes eye cream and foot cream using two different machines, <var>machine 1</var> and <var>machine 2</var>. <var>Machine 1</var> can  make <param>30</param> ml of eye cream and <param>60</param> ml of foot cream per hour. <var>Machine 2</var> can make <param>45</param> ml of eye cream and <param>30</param> ml of foot cream per hour. Furthermore, <var>machine 1</var> requires <param>20</param> ml of distilled water per hour while <var>machine 2</var> requires <param>15</param> ml of distilled water per hour. The pharmacy has <const_dir>available</const_dir> <limit>1200</limit> ml of distilled water. If the pharmacy needs to make <const_dir>at least</const_dir> <limit>1300</limit> ml of eye cream and <limit>1500</limit> ml of foot cream, how many hours should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A woman eats <var>cashews</var> and <var>almonds</var> to get her calorie and protein intake. A serving of <var>almonds</var> contains <param>200</param> calories and <param>20</param> grams of protein. A serving of <var>cashews</var> contains <param>300</param> calories and <param>25</param> grams of protein. The woman decides to eat <const_dir>at least</const_dir> <param>twice</param> as many servings of <var>almonds</var> as <var>cashews</var>. Furthermore, a serving of <var>almonds</var> contains <param>15</param> grams of <obj_name>fat</obj_name> while a serving of <var>cashews</var> contains <param>12</param> grams of <obj_name>fat</obj_name>. If the woman needs to consume <const_dir>at least</const_dir> <limit>10000</limit> calories and <limit>800</limit> grams of protein this week, how many servings of each should she eat to <obj_dir>minimize</obj_dir> her <obj_name>fat intake</obj_name>?", "output": "min: 15 almonds + 12 cashews\nst:"}
{"input": "A company make both <var>liquid</var> and <var>foam hand sanitizer</var>. <var>Liquid hand sanitizer</var> requires <param>40</param> units of water and <param>50</param> units of alcohol. <var>Foam hand sanitizer</var> requires <param>60</param> units of water and <param>40</param> units of alcohol. The company has <const_dir>available</const_dir> <limit>2000</limit> units of water and <limit>2100</limit> units of alcohol. The number of <var>foam hand sanitizers</var> made <const_dir>must exceed</const_dir> the number of <var>liquid hand sanitizers</var>. In addition, <const_dir>at most</const_dir> <limit>30</limit> <var>liquid hand sanitizers</var> can be made. If each <var>liquid hand sanitizer</var> can clean <param>30</param> <obj_name>hands</obj_name> and each <var>foam hand sanitizer</var> can clean <param>20</param> <obj_name>hands</obj_name>, how many of each should the company make to <obj_dir>maximize</obj_dir> the <obj_name>number of hands</obj_name> that can be cleaned?", "output": "max: 30 liquid_hand_sanitizer + 20 foam_hand_sanitizer\nst: liquid_hand_sanitizers <= 30"}
{"input": "A clinic is conducting a <var>throat</var> or <var>nasal swabs</var> on each patient. A <var>throat swab</var> takes <param>5</param> minutes while a <var>nasal swab</var> takes <param>3</param> minutes. The clinic must administer <const_dir>at least</const_dir> <limit>30</limit> <var>nasal swabs</var>. Since the <var>nasal swab</var> is more uncomfortable, <const_dir>at least</const_dir> <param>4</param> times as many <var>throat swabs</var> must be done as <var>nasal swabs</var>. If the clinic is <const_dir>only</const_dir> operational for <limit>20000</limit> minutes, how many of each swab should be done to <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> seen?", "output": "max: \nst: nasal_swabs >= 30"}
{"input": "A patient in the hospital can take two different pain killers, <var>pain killer 1</var> and <var>pain killer 2</var>. Per dose, <var>pain killer 1</var> delivers <param>0.5</param> units of medicine to the legs and <param>0.8</param> units of medicine to the <obj_name>back</obj_name>. Per dose, <var>pain killer 2</var> delivers <param>0.7</param> units of medicine to the legs and <param>0.4</param> units of medicine to the <obj_name>back</obj_name>. In, addition <var>pain killer 1</var> deliver <param>0.3</param> units of sleeping medicine and <var>pain killer 2</var> delivers <param>0.6</param> units of sleeping medicine. <const_dir>At most</const_dir> <limit>8</limit> units of sleep medicine should be delivered and <const_dir>at least</const_dir> <limit>4</limit> units of medicine should be delivered to the legs. How many doses of each should be taken to <obj_dir>maximize</obj_dir> the <obj_name>amount of medicine delivered to the back</obj_name>?", "output": "max: 0.8 pain_killer_1 + 0.4 pain_killer_2\nst:"}
{"input": "A zookeeper feeds a gorilla with <var>bananas</var> and <var>mangoes</var>. Each <var>banana</var> contains <param>80</param> calories, <param>20</param> grams of potassium, and <param>10</param> grams of <obj_name>sugar</obj_name>. Each <var>mango</var> contains <param>100</param> calories, <param>15</param> grams of potassium, and <param>8</param> grams of <obj_name>sugar</obj_name>.  The gorilla must consume <const_dir>at least</const_dir> <limit>4000</limit> calories and <limit>150</limit> grams of potassium. Since the gorilla prefers <var>bananas</var>, <const_dir>at most</const_dir> <limit>33%</limit> of the fruits he eats can be <var>mangoes</var>. If excess sugar makes the gorilla aggressive, how many of each fruit should he consume to <obj_dir>minimize</obj_dir> his <obj_name>sugar</obj_name> intake?", "output": "min: 10 banana + 8 mango\nst:"}
{"input": "In a science club, there are two tables that can be set up to make slime. At <var>table 1</var>, <param>3</param> units of powder and <param>5</param> units of glue are used to make <param>4</param> units of <obj_name>slime</obj_name>. At <var>table 2</var>, <param>8</param> units of powder and <param>6</param> units of glue are used to make <param>5</param> units of <obj_name>slime</obj_name>. However, <var>table 1</var> produces <param>2</param> units of mess while <var>table 2</var> produces <param>4</param> units of mess. The science club has <const_dir>available</const_dir> <limit>100</limit> units of powder and <limit>90</limit> units of glue.  If <const_dir>at most</const_dir> <limit>30</limit> units of mess can be made, how many of each table should be set up to <obj_dir>maximize</obj_dir> the <obj_name>amount of slime</obj_name> produced?", "output": "max: 4 table_1 + 5 table_2\nst:"}
{"input": "A pharmaceutical company <const_dir>has</const_dir> <limit>800</limit> units of painkiller medicine and makes <var>daytime</var> and <var>nighttime painkiller</var>. A <var>daytime pill</var> has <param>6</param> units of painkiller medicine and <param>2</param> units of <obj_name>sleep medicine</obj_name>. A <var>nighttime pill</var> has <param>5</param> units of painkiller medicine and <param>5</param> units of <obj_name>sleep medicine</obj_name>. Since some people don\u2019t want the sleeping effect, <const_dir>at least</const_dir> <limit>40%</limit> of the pills must be <var>daytime pills</var>. However <const_dir>at least</const_dir> <limit>200</limit> <var>nighttime pills</var> must be made. How many of each pill should be made to <obj_dir>minimize</obj_dir> the total <obj_name>amount of sleep medicine</obj_name> required?", "output": "min: 2 daytime_pill + 5 nighttime_pill\nst: nighttime_pills >= 200"}
{"input": "A competitive eater challenges himself to eat slices of <var>cheesecake</var> and <var>caramel cake</var>. Each slice of <var>cheesecake</var> contains <param>200</param> calories and <param>40</param> grams of <obj_name>sugar</obj_name>. Each slice of <var>caramel cake</var> contains <param>250</param> calories and <param>50</param> grams of <obj_name>sugar</obj_name>. He prefers <var>cheesecake</var> and decides to eat <const_dir>at least</const_dir> <param>3</param> times as many slices of <var>cheesecake</var> as <var>caramel cake</var>. However, he must also eat <const_dir>at least</const_dir> <limit>3</limit> slices of <var>caramel cake</var>. If he can consume <const_dir>at most</const_dir> <limit>10000</limit> calories in one day, how many slices of each cake should he eat to <obj_dir>maximize</obj_dir> the <obj_name>total amount of sugar</obj_name> he consumes?", "output": "max: 40 cheesecake + 50 caramel_cake\nst: caramel_cake >= 3"}
{"input": "Both <var>sulfate</var> and <var>ginger</var> need to be added to a shampoo. One unit of <var>sulfate</var> takes <param>0.5</param> <obj_name>minutes</obj_name> to be effective while one unit of <var>ginger</var> takes <param>0.75</param> <obj_name>minutes</obj_name> to be effective. The shampoo must contain <const_dir>at least</const_dir> <limit>100</limit> units of <var>sulfates</var> and a <const_dir>total</const_dir> of <limit>400</limit> units of both ingredient. Since too much <var>sulfate</var> can damage the hair, there can be <const_dir>at most</const_dir> <param>twice</param> the amount of <var>sulfate</var> as <var>ginger</var> in the shampoo. How many units of each should be added to the shampoo to <obj_dir>minimize</obj_dir> the total <obj_name>amount of time</obj_name> it takes for the mixture to be effective? (Note: one must be added before the other)", "output": "min: 0.5 sulfate + 0.75 ginger\nst: sulfates >= 100\nsulfate + ginger <= 400"}
{"input": "A pharmaceutical company has two labs, <var>lab 1</var> and <var>lab 2</var>, where they make heart and lung medication in pill form. At <var>lab 1</var>, they can produce <param>20</param> heart medication pills and <param>30</param> lung medication pills per hour. At <var>lab 2</var>, they can produce <param>30</param> heart medication pills and <param>40</param> lung medication pills per hour. Each session at <var>lab 1</var> requires <param>3</param> hours of worker labor while each session at <var>lab 2</var> requires <param>5</param> hours of worker labor. The company has <limit>1500</limit> worker hours <const_dir>available</const_dir> and must make <const_dir>at least</const_dir> <limit>20000</limit> heart medication pills and <const_dir>at least</const_dir> <limit>30000</limit> lung medication pills. How many hours at each lab should be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A doctor suggests that his patient eat <var>oranges</var> and <var>grapefruit</var> to meet his vitamin C and vitamin A requirements. One <var>orange</var> contains <param>5</param> units of vitamin C, <param>3</param> units of vitamin A, and <param>5</param> grams of <obj_name>sugar</obj_name>. One <var>grapefruit</var> contains <param>7</param> units of vitamin C, <param>5</param> units of vitamin A, and <param>6</param> grams of <obj_name>sugar</obj_name>. The patient must get <const_dir>at least</const_dir> <limit>80</limit> units of vitamin C and <limit>70</limit> units of vitamin A. Since the patent prefers <var>oranges</var>, he must eat <const_dir>at least</const_dir> <param>2</param> times as many <var>oranges</var> as <var>grapefruit</var>. How many of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>sugar</obj_name> intake?", "output": "min: 5 orange + 6 grapefruit\nst:"}
{"input": "A university research lab can make two types of diabetes medicine, <var>medicine A</var> and <var>medicine B.</var> Per dose, <var>medicine A</var> takes <param>30</param> units of imported material and <param>50</param> units of mRNA to make. Per dose, <var>medicine B</var> takes <param>40</param> units of imported material and <param>30</param> units of mRNA to take. The lab has available <const_dir>at most</const_dir> <limit>300</limit> units of imported material and <limit>400</limit> units of mRNA. The lab can make <const_dir>at most</const_dir> <limit>5</limit> doses of <var>medicine A</var> and the number of doses of <var>medicine B</var> must be <const_dir>larger than</const_dir> the number of dosed of <var>medicine A.</var> If one dose of <var>medicine A</var> can treat <param>12</param> <obj_name>people</obj_name> and one dose of <var>medicine B</var> can treat <param>8</param> <obj_name>people</obj_name>, how many doses of each should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 12 medicine_A + 8 medicine_B\nst: medicine_A <= 5"}
{"input": "A popup clinic is doing virus testing with either <var>spit tests</var> or <var>swabs</var>. A <var>spit test</var> takes <param>10</param> minutes to administer while a  <var>swab</var> takes <param>15</param> minutes to administer. Since the <var>spit test</var> is more accurate, <const_dir>at least</const_dir> <param>twice</param> as many <var>spit tests</var> should be given as  <var>swabs</var>. However, <const_dir>at least</const_dir> <limit>20</limit>  <var>swabs</var> must be administers. If the popup clinic <const_dir>operates for</const_dir> <limit>8000</limit> minutes, <obj_dir>maximize</obj_dir> the <obj_name>number of tests</obj_name> that can be administered.", "output": "max: \nst: swabs >= 20"}
{"input": "A patient is undergoing radiation treatment involving two beams, <var>Beam 1</var> and <var>Beam 2</var>. <var>Beam 1</var> delivers a dose of <param>0.3</param> units of medicine per minute to the benign area of the <obj_name>pancreas</obj_name> and <param>0.2</param> units of medicine per minute to the benign area of the skin. <var>Beam 2</var> delivers <param>0.2</param> units of medicine per minute to the benign area of the <obj_name>pancreas</obj_name> and <param>0.1</param> units of medicine per minute to the benign area of the skin.  In addition, <var>beam 1</var> delivers <param>0.6</param> units of medicine per minute to the tumor and <var>beam 2</var> delivers <param>0.4</param> units of medicine per minute to the tumor. <const_dir>At most</const_dir> <limit>4</limit> units of medicine should be received by the skin and <const_dir>at least</const_dir> <limit>3</limit> units of medicine should be delivered to the tumor.  How many minutes of each beam should be used to <obj_dir>minimize</obj_dir> the <obj_name>total radiation received by the pancreas</obj_name>?", "output": "min: 0.3 Beam_1 + 0.2 Beam_2\nst:"}
{"input": "A body builder buys pre prepared meals, a <var>turkey dinner</var> and a <var>tuna salad sandwich</var>. The <var>turkey dinner</var> contains <param>20</param> grams of protein, <param>30</param> grams of carbs, and <param>12</param> grams of <obj_name>fat</obj_name>. The <var>tuna salad sandwich</var> contains <param>18</param> grams of protein, <param>25</param> grams of carbs, and <param>8</param> grams of <obj_name>fat</obj_name>. The bodybuilder wants to get <const_dir>at least</const_dir> <limit>150</limit> grams of protein and <limit>200</limit> grams of carbs. In addition because the <var>turkey dinner</var> is expensive, <const_dir>at most</const_dir> <limit>40%</limit> of the meals should be <var>turkey dinner</var>. How many of each meal should he eat if he wants to <obj_dir>minimize</obj_dir> his <obj_name>fat intake</obj_name>?", "output": "min: 12 turkey_dinner + 8 tuna_salad_sandwich\nst:"}
{"input": "A chemistry teacher teaches her students two experiments, <var>experiment 1</var> and <var>experiment 2</var>. In <var>experiment 1</var>, <param>3</param> units of the red liquid and <param>4</param> units of the blue liquid mix to create <param>5</param> units of <obj_name>green gas</obj_name>. In <var>experiment 2</var>, <param>5</param> units of the red liquid and <param>3</param> units of the blue liquid mix to create <param>6</param> units of the <obj_name>green gas</obj_name>. In addition, <var>experiment 1</var> produces <param>1</param> units of smelly gas while <var>experiment 2</var> produces <param>2</param> units of smelly gas.  The lab has <const_dir>available</const_dir> <limit>80</limit> units of red liquid and <limit>70</limit> units of blue liquid. If <const_dir>at most</const_dir> <limit>10</limit> units of smelly gas can be produced, how many experiments of each should be done to <obj_dir>maximize</obj_dir> the total <obj_name>amount of green gas</obj_name> produced?", "output": "max: 5 experiment_1 + 6 experiment_2\nst:"}
{"input": "A lab <const_dir>has</const_dir> <limit>1000</limit> units of medicinal ingredients to make two pills, a <var>large pill</var> and a <var>small pill</var>. A <var>large pill</var> requires <param>3</param> units of medicinal ingredients and <param>2</param> units of <obj_name>filler</obj_name>. A <var>small pill</var> requires <param>2</param> units of medicinal ingredients and <param>1</param> unit of <obj_name>filler</obj_name>. The lab has to make <const_dir>at least</const_dir> <limit>100</limit> <var>large pills</var>. However, since <var>small pills</var> are more popular <const_dir>at least</const_dir> <limit>60%</limit> of the total number of pills must be <var>small</var>. How many of each should be made to <obj_dir>minimize</obj_dir> the total <obj_name>number of filler</obj_name> material needed?", "output": "min: 2 large_pill + 1 small_pill\nst: large_pills >= 100"}
{"input": "Both <var>chorine</var> and <var>water softener</var> need to be added to a pool. One unit of <var>chlorine</var> takes <param>1</param> <obj_name>minute</obj_name> to be effective while one unit of <var>water softener</var> takes <param>2</param> <obj_name>minutes</obj_name> to be effective. Because too much <var>chlorine</var> can burn your eyes, there has to <const_dir>at most</const_dir> <param>half</param> as much <var>chlorine</var> as <var>water softener</var> in the pool. If there has to be <const_dir>at least</const_dir> <limit>200</limit> units of <var>chlorine</var> in the water and <const_dir>a total of</const_dir> <limit>500</limit> units of chemicals in the water, how many units of each should be added to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for the pool to be ready? (Note: chlorine must be added before water softener or vice versa).", "output": "min: 1 chlorine + 2 water_softener\nst: chlorine >= 200"}
{"input": "A drug company is making pain killers and sleeping pills using two processes, <var>process 1</var> and <var>process 2</var>. <var>Process 1</var> produces <param>35</param> units of pain killers and <param>12</param> units of sleeping pills per hour. <var>Process 2</var> produces <param>50</param> units of pain killers and <param>30</param> units of sleeping pills per hour. <var>Process 1</var> requires <param>50</param> units of preliminary material while <var>process 2</var> requires <param>60</param> units of preliminary material. The drug company has <const_dir>available</const_dir> <limit>2000</limit> units of preliminary material and must make <const_dir>at least</const_dir> <limit>1200</limit> units of pain killers and <limit>1200</limit> units of sleeping pills. How many of each process should be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A dietician recommends her client eat <var>blueberries</var> and <var>strawberries</var> to meet her anti-oxidant and mineral requirement. A pack of <var>blueberries</var> contains <param>3</param> units of anti-oxidants and <param>5</param> units of minerals. A pack of <var>strawberries</var> contains <param>1</param> unit of anti-oxidants and <param>7</param> units of minerals. The client must get <const_dir>at least</const_dir> <limit>90</limit> units of anti-oxidants and <limit>100</limit> units of minerals. In addition, because <var>blueberries</var> are not in season, the dietician recommend she eats <const_dir>at least</const_dir> <param>3</param> times as many packs of <var>strawberries</var> as <var>blueberries</var>. If a pack of <var>blueberries</var> contains <param>5</param> grams of <obj_name>sugar</obj_name> and a pack of <var>strawberries</var> contains <param>7</param> grams of <obj_name>sugar</obj_name>, how many of packs of each should she consume to <obj_dir>minimize</obj_dir> her <obj_name>sugar</obj_name> intake?", "output": "min: 5 blueberries + 7 strawberries\nst:"}
{"input": "An engineering school has a bridge building competition where students must build as many <var>beam bridges</var> and <var>truss bridges</var> as they can using Popsicle sticks and glue. A <var>beam bridge</var> requires <param>30</param> Popsicle sticks and <param>5</param> units of glue while a <var>truss bridge</var> requires <param>50</param> Popsicle sticks and <param>8</param> units of glue. Each team has <const_dir>at most</const_dir> <limit>600</limit> Popsicle sticks and <limit>100</limit> units of glue. In addition, each team can build <const_dir>at most</const_dir> <limit>5</limit> <var>truss bridges</var> and the number of <var>beam bridges</var> <const_dir>must be larger</const_dir> than the number of <var>truss bridges</var>. If a <var>beam bridge</var> can hold <param>40</param> <obj_name>grams</obj_name> and a <var>truss bridge</var> can hold <param>60</param> <obj_name>grams</obj_name>, how many of each bridge should a team build to <obj_dir>maximize</obj_dir> the <obj_name>total mass</obj_name> that can be supported?", "output": "max: 40 beam_bridge + 60 truss_bridge\nst: truss_bridges <= 5"}
{"input": "A clinic administers two vaccines available for the public to take one at a time. One vaccine is taken as a <var>pill</var> and another is taken as a <var>shot</var>. The <var>pill vaccine</var> takes <param>10</param> minutes to administer while the <var>shot</var> takes <param>20</param> minutes to administer. Since the shot has been more thoroughly studied, the clinic must deliver <const_dir>at least</const_dir> <param>3</param> times as many <var>shots</var> as <var>pill</var>. In addition, the clinic must administer <const_dir>at least</const_dir> <limit>30</limit> <var>pill vaccines</var>. If the clinic <const_dir>only</const_dir> operates for <limit>10000</limit> minutes, <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> that can be vaccinated.", "output": "max: \nst: pill_vaccines >= 30"}
{"input": "A chocolate company can transport their boxes of chocolate either using their own <var>vans</var> or by renting <var>trucks</var>. Their <var>vans</var> can transport <param>50</param> boxes per trip while a <var>truck</var> can transport <param>80</param> boxes per trip. Since they own their <var>vans</var>, the cost per <var>van</var> trip is $<param>30</param> while the cost per <var>truck</var> trip is $<param>50</param>. The company needs to transport <const_dir>at least</const_dir> <limit>1500</limit> boxes of chocolate and they have a <const_dir>budget</const_dir> of $<limit>1000</limit>. Since the <var>vans</var> also provide advertising, the number of trips by <var>van</var> <const_dir>must be larger than</const_dir> the number of trips by <var>trucks</var>. How many of trip by each should be done to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst:"}
{"input": "A bee farmer transports his honey in <var>small</var> and <var>large</var> bottles. A <var>small bottle</var> can take <param>5</param> units of <obj_name>honey</obj_name> while a <var>large bottle</var> can take <param>20</param> units of <obj_name>honey</obj_name>. The farmer has available <const_dir>at most</const_dir> <limit>300</limit> <var>small bottles</var> and <const_dir>at most</const_dir> <limit>100</limit> <var>large bottles</var>. In addition, since <var>small bottles</var> are easier to sell, <const_dir>at least</const_dir> <param>twice</param> as many <var>small bottles</var> must be used than <var>large bottles</var>. Finally, he can transport <const_dir>at most</const_dir> <limit>200</limit> bottles total and <const_dir>at least</const_dir> <limit>50</limit> must be <var>large bottles</var>. How many of each bottle should be use to <obj_dir>maximize</obj_dir> the total <obj_name>amount of honey</obj_name> he can transport?", "output": "max: 5 small_bottle + 20 large_bottle\nst: small_bottles <= 300\nlarge_bottles <= 100\nsmall_bottle + large_bottle <= 200\nlarge_bottles >= 50"}
{"input": "An international goods exporter uses <var>ships</var> and <var>planes</var> to transport goods. A <var>ship</var> can take <param>40</param> containers worth of goods and uses <param>500</param> liters of <obj_name>fuel</obj_name> per trip. A <var>plane</var> can take <param>20</param> containers worth of goods and uses <param>300</param> liters of <obj_name>fuel</obj_name> per trip. The company needs to transport <const_dir>at least</const_dir> <limit>500</limit> containers worth of goods. In addition, there can be <const_dir>at most</const_dir> <limit>10</limit> <var>plane</var> trips made and a <const_dir>minimum</const_dir> of <limit>50%</limit> of the trips made must be by <var>ship</var>. How many of each trip should be made to <obj_dir>minimize</obj_dir> the <obj_name>total amount of fuel</obj_name> consumed?", "output": "min: 500 ship + 300 plane\nst: plane <= 10"}
{"input": "There has been an oil spill in the ocean and ducks need to be taken to shore to be cleaned either by <var>boat</var> or by <var>canoe</var>. A <var>boat</var> can take <param>10</param> ducks per trip while a <var>canoe</var> can take <param>8</param> ducks per trip. Since the <var>boats</var> are motor powered, they take <param>20</param> <obj_name>minutes</obj_name> per trip while the <var>canoes</var> take <param>40</param> <obj_name>minutes</obj_name> per trip. In order to avoid further environmental damage, there can be <const_dir>at most</const_dir> <limit>12</limit> <var>boat</var> trips and <const_dir>at least</const_dir> <limit>60%</limit> of the trips should be by <var>canoe</var>. If <const_dir>at least</const_dir> <limit>300</limit> ducks need to be taken to shore, how many of each transportation method should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of time</obj_name> needed to transport the ducks?", "output": "min: 20 boats + 40 canoes\nst: boat <= 12"}
{"input": "A soda company sends bottles of their soda to stores around the city in <var>old</var> and <var>new vans</var>. An <var>old van</var> can take <param>100</param> soda bottles while a <var>new van</var> can take <param>80</param> soda bottles. An <var>old van</var> produces <param>50</param> units of <obj_name>pollution</obj_name> while a <var>new van</var> only produces <param>30</param> units of <obj_name>pollution</obj_name>. The company needs to send <const_dir>at least</const_dir> <limit>5000</limit> bottles. In addition, <const_dir>at most</const_dir> <limit>30</limit> <var>new vans</var> can be used. How many of each van should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 50 old_van + 30 new_van\nst: new_vans <= 30"}
{"input": "A lawn mowing service provides neighborhood services using <var>small teams</var> and <var>large teams</var>. A <var>small team</var> requires <param>3</param> employees and can mow <param>50</param> sq ft of <obj_name>lawn</obj_name>. A <var>large team</var> requires <param>5</param> employees and can mow <param>80</param> sq ft of <obj_name>lawn</obj_name>. The company has <limit>150</limit> employees <const_dir>available</const_dir>. Because most people have smaller lawns in the city, the number of <var>small teams</var> must be <const_dir>at least</const_dir> <param>3</param> times as much as the number of <var>large teams</var>. In addition, to make sure the company can meet all demands, there has to be <const_dir>at least</const_dir> <limit>6</limit> <var>large teams</var> and <const_dir>at least</const_dir> <limit>10</limit> <var>small teams</var>. How many of each team type should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of lawn</obj_name> that can be mowed?", "output": "max: 50 small_team + 80 large_team\nst: large_teams >= 6\nsmall_teams >= 10"}
{"input": "An aquarium does shows using <var>otters</var> and <var>dolphins</var>. An <var>otter</var> will do <param>3</param> <obj_name>tricks</obj_name> at a time and requires <param>3</param> treats to do so. A <var>dolphin</var> will do <param>1</param> <obj_name>trick</obj_name> at a time and requires <param>5</param> treats to do so. Since <var>dolphins</var> are more popular, <const_dir>at least</const_dir> <limit>10</limit> <var>dolphins</var> must be used and <const_dir>at most</const_dir> <limit>30%</limit> of the performers can be <var>otters</var>. If the aquarium only has <limit>200</limit> treats <const_dir>available</const_dir>, <obj_dir>maximize</obj_dir> the total <obj_name>number of tricks</obj_name> that can be preformed.", "output": "max: 3 otter + 1 dolphin\nst: dolphins >= 10"}
{"input": "A shoe company supplies shoes to stores via <var>vans</var> and <var>trucks</var>. A <var>van</var> can transport <param>50</param> pairs of shoes while a <var>truck</var> can transport <param>100</param> pairs of shoes. The company must supply a <const_dir>minimum</const_dir> of <limit>2000</limit> pairs of shoes around the city. Since most stores are small, the number of <var>trucks</var> used <const_dir>cannot exceed</const_dir> the number of <var>vans</var> used.  Find the <obj_dir>minimum</obj_dir> <obj_name>number of vans</obj_name> that can be used?", "output": "min: \nst:"}
{"input": "An oil and gas company is sending their oil to the port using <var>containers</var> and <var>trucks</var>. A <var>container</var> can hold <param>30</param> units of oil while a <var>truck</var> can hold <param>40</param> units of oil. Due to government restrictions, the number of <var>trucks</var> used has to <const_dir>at most</const_dir> <param>half</param> the number of <var>containers</var> used. If <const_dir>at least</const_dir> <limit>2000</limit> units of oil need to be sent to the port and <const_dir>at least</const_dir> <limit>15</limit> <var>containers</var> need to be used, <obj_dir>minimize</obj_dir> the <obj_name>total number of containers and trucks</obj_name> needed.", "output": "min: \nst: containers >= 15"}
{"input": "A school is organizing a field trip to a science center and wants to hire <var>small buses</var> and <var>large buses</var>. A <var>small bus</var> can carry <param>20</param> students while a <var>large bus</var> can carry <param>50</param> students.  The school needs to provide transportation for <const_dir>at least</const_dir> <limit>500</limit> students.  In addition, since the parking lot is rather small, a <const_dir>maximum</const_dir> of <limit>20%</limit> of the buses can be <var>large buses</var>. How many of each type of bus should be hired to <obj_dir>minimize</obj_dir> the total <obj_name>number of buses</obj_name>?", "output": "min: \nst:"}
{"input": "A meat shop ships their burger patties using refrigerated <var>trucks</var> and <var>vans</var>. Each <var>truck</var> can take <param>1000</param> patties at a cost of $<param>300</param> per trip. Each <var>van</var> can take <param>500</param> patties at a cost of $<param>100</param> per trip. Because the <var>trucks</var> have difficulty moving around in the city, the number of <var>trucks</var> <const_dir>must not exceed</const_dir> the number of <var>vans</var>. The meat shop has to ship <const_dir>at least</const_dir> <limit>50000</limit> patties and they have a <const_dir>budget</const_dir> of $<limit>12500</limit>. How should they plan their shipment to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst:"}
{"input": "A florist transports his flowers to stores in <var>small bouquets</var> and <var>large bouquets</var>. A <var>small bouquet</var> has <param>5</param> <obj_name>flowers</obj_name> while a <var>large bouquet</var> has <param>10</param> <obj_name>flowers</obj_name>. The florist can transport <const_dir>at most</const_dir> <limit>80</limit> <var>small bouquets</var> and <limit>50</limit> <var>large bouquets</var>. In total, he can transport <const_dir>at most</const_dir> <limit>70</limit> bouquets and he must transport <const_dir>at least</const_dir> <limit>20</limit> <var>large bouquets</var>. Since <var>small bouquets</var> are more popular, he must transport <const_dir>at least</const_dir> <param>twice</param> as many <var>small bouquets</var> as <var>large bouquets</var>. How many of each bouquet should he transport to <obj_dir>maximize</obj_dir> the total <obj_name>number of flowers</obj_name> that reach the stores?", "output": "max: 5 small_bouquet + 10 large_bouquet\nst: small_bouquets <= 80\nlarge_bouquets <= 50\nsmall_bouquet + large_bouquet <= 70\nlarge_bouquets >= 20"}
{"input": "A toy store decides to deliver gifts using two shipping companies, a <var>new one</var> and an <var>old one</var>. The <var>new company</var> can deliver <param>50</param> gifts per trip while the <var>old company</var> can deliver <param>70</param> gifts per trip. The <var>new company</var> uses <param>30</param> liters of <obj_name>diesel</obj_name> per trip while the <var>old company</var> uses <param>40</param> liters of <obj_name>diesel</obj_name> per trip. The toy store needs to deliver <const_dir>at least</const_dir> <limit>1000</limit> gifts. There can be <const_dir>at most</const_dir> <limit>15</limit> trips made by the <var>new company</var>. In order to make sure that the <var>old company</var> does not go out of business, <const_dir>at least</const_dir> <limit>40%</limit> of all trips must be made by the <var>old company</var>. How many trips should each company make to <obj_dir>minimize</obj_dir> the <obj_name>total amount of diesel</obj_name> used?", "output": "min: 30 new_company + 40 old_company\nst: new_company <= 15"}
{"input": "A zoo needs to transport their monkeys to the vet either by <var>bus</var> or by <var>car</var>. A <var>bus</var> can transport <param>20</param> monkeys per trip and takes <param>30</param> <obj_name>minutes</obj_name>. A <var>car</var> can transport <param>6</param> monkeys per trip and takes <param>15</param> <obj_name>minutes</obj_name>. There can be <const_dir>at most</const_dir> <limit>10</limit> <var>bus</var> trips. In addition, since the monkeys get aggressive when there are too many in one place <const_dir>at least</const_dir> <limit>60%</limit> of the trips should be by <var>car</var>. If the zoo <const_dir>needs</const_dir> to transport <limit>300</limit> monkeys, how many trips of each should be done to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> required to transport the monkeys?", "output": "min: 30 bus + 15 car\nst: bus <= 10"}
{"input": "A farmer decides to move his cows to a nearby farm using <var>helicopters</var> and <var>trucks</var>. A <var>helicopter</var> can take <param>3</param> cows per trip and creates <param>5</param> units of <obj_name>pollution</obj_name>. A <var>truck</var> can take <param>7</param> cows per trip and creates <param>10</param> units of <obj_name>pollution</obj_name>. The farmer <const_dir>needs to transport</const_dir> <limit>80</limit> cows and he only has enough money for <const_dir>at most</const_dir> <limit>8</limit> <var>truck</var> trips. How many of each type of trip should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 5 helicopter + 10 truck\nst: truck <= 8"}
{"input": "A sand company delivers sand for playgrounds in <var>small</var> and <var>large</var> containers. A <var>small container</var> requires <param>1</param> person to unload and can hold <param>20</param> units of <obj_name>sand</obj_name>. A <var>large container</var> requires <param>3</param> people to unload and can hold <param>50</param> units of <obj_name>sand</obj_name>. Since most playgrounds are small, the number of <var>small containers</var> used <const_dir>must be</const_dir> <param>thrice</param> the number of <var>large containers</var> used. In addition, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>small containers</var> and <limit>3</limit> <var>large containers</var> used. If the company has <limit>100</limit> people <const_dir>available</const_dir>, <obj_dir>maximize</obj_dir> the <obj_name>amount of sand</obj_name> that they can deliver.", "output": "max: 20 small_container + 50 large_container\nst: small_containers >= 5\nlarge_containers >= 3"}
{"input": "A meal service company delivers meals to customers either on <var>electric bikes</var> or <var>scooters</var>. A <var>bike</var> can hold <param>8</param> <obj_name>meals</obj_name> and requires <param>3</param> units of charge. A <var>scooter</var> can hold <param>5</param> <obj_name>meals</obj_name> and requires <param>2</param> units of charge. Since the city is more friendly towards <var>scooters</var>, <const_dir>at most</const_dir> <limit>30%</limit> of the electric vehicles can be <var>bikes</var> and <const_dir>at least</const_dir> <limit>20</limit> <var>scooters</var> must be used. If the company only has <limit>200</limit> units of charge <const_dir>available</const_dir>, how many of each vehicle should be used to <obj_dir>maximize</obj_dir> the <obj_name>number of meals</obj_name> that can be delivered?", "output": "max: 8 bike + 5 scooter\nst: scooters >= 20"}
{"input": "A car manufacturer ships their cars on <var>large</var> and <var>small</var> planes. A <var>large plane</var> can carry <param>30</param> cars while a <var>small plane</var> can carry <param>10</param> cars. Since <var>large planes</var> cause more pollution, the number of <var>large planes</var> must be <const_dir>less than</const_dir> the number of <var>small planes</var>. If the manufacturer wants to deliver <const_dir>at least</const_dir> <limit>300</limit> cars, find the <obj_dir>minimum</obj_dir> <obj_name>number of planes</obj_name> that can be used.", "output": "min: \nst:"}
{"input": "A mine sends ore to the surface in <var>small</var> and <var>large</var> wagons. A <var>small wagon</var> hold <param>20</param> units of ore while a <var>large wagon</var> holds <param>50</param> units of ore. To avoid taking up too much space on the ramps, the number of <var>small wagons</var> must be <const_dir>at least</const_dir> <param>twice</param> as much as the number or <var>large wagons</var>. In addition, <const_dir>at least</const_dir> <limit>10</limit> <var>large wagons</var> must be used. If <limit>2000</limit> units of ore <const_dir>need to taken</const_dir> to the surface, <obj_dir>minimize</obj_dir> the total <obj_name>number of wagons</obj_name> needed.", "output": "min: \nst: large_wagons >= 10"}
{"input": "A theme park transports its visitors around the park either by <var>scooter</var> or <var>rickshaw</var>. A <var>scooter</var> can carry <param>2</param> people while a <var>rickshaw</var> can carry <param>3</param> people. To avoid excessive pollution, <const_dir>at most</const_dir> <limit>40%</limit> of the vehicles used can be <var>rickshaws</var>. If the park needs to transport <const_dir>at least</const_dir> <limit>300</limit> visitors, <obj_dir>minimize</obj_dir> the total <obj_name>number of scooters</obj_name> used.", "output": "min: \nst:"}
{"input": "A company in the middle east delivers their packages to customers on <var>camels</var> and <var>horses</var>. A <var>camel</var> can carry <param>50</param> packages while a <var>horse</var> can carry <param>60</param> packages. A <var>camel</var> requires <param>20</param> units of food while a <var>horse</var> requires <param>30</param> units of food. The company needs to deliver <const_dir>at least</const_dir> <limit>1000</limit> packages and they have <limit>450</limit> units of food <const_dir>available</const_dir>. Since <var>horses</var> are not as suited for the hot climate, the number of <var>horses</var> <const_dir>cannot exceed</const_dir> the number of <var>camels</var>. How many of each animal should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of animals</obj_name>?", "output": "min: \nst:"}
{"input": "A snack exporter sends snacks to his customer in <var>small</var> and <var>large</var> suitcases. A <var>small suitcase</var> can hold <param>50</param> <obj_name>snacks</obj_name> while a <var>large suitcase</var> can hold <param>80</param> <obj_name>snacks</obj_name>. Most customer prefer <var>small suitcases</var>, and so <const_dir>at least</const_dir> <param>twice</param> as many <var>small suitcases</var> must be used as <var>large suitcases</var>. The exporter has available <const_dir>at most</const_dir> <limit>70</limit> <var>small suitcases</var> and <limit>50</limit> <var>large suitcases</var>. If he must send <const_dir>at least</const_dir> <limit>15</limit> <var>large suitcases</var> and can send  <const_dir>at most</const_dir> <limit>70</limit> suitcases in total, how many of each should he send to <obj_dir>maximize</obj_dir> the total <obj_name>number of snacks</obj_name> that can be delivered?", "output": "max: 50 small_suitcase + 80 large_suitcase\nst: small_suitcases <= 70\nlarge_suitcases <= 50\nlarge_suitcases >= 15\nsmall_suitcase + large_suitcase <= 70"}
{"input": "A mail delivery service in an island village delivers mail by <var>regular</var> and <var>speed boats</var>. A <var>regular boat</var> can carry <param>20</param> pieces of mail per trip and uses <param>10</param> liters of <obj_name>gas</obj_name>. A <var>speed boat</var> can carry <param>30</param> pieces of mail per trip and uses <param>20</param> liters of <obj_name>gas</obj_name>. There can be <const_dir>at most</const_dir> <limit>20</limit> <var>regular boat</var> trips. Since customers want their mail as fast as possible, <const_dir>at least</const_dir> <limit>50%</limit> of the trips must be made by <var>speed boats</var>. If the service <const_dir>needs to deliver</const_dir> <limit>1000</limit> pieces of mail, how many trips of each should be made to <obj_dir>minimize</obj_dir> the total <obj_name>amount of gas</obj_name> consumed?", "output": "min: 10 regular_boat + 20 speed_boat\nst: regular_boat <= 20"}
{"input": "A chicken farmer has sold his chicken and they need to be transported either by <var>bus</var> or by <var>car</var>. A <var>bus</var> can take <param>100</param> chicken and takes <param>2</param> <obj_name>hours</obj_name> per trip. A <var>car</var> can take <param>40</param> chicken and takes <param>1.5</param> <obj_name>hours</obj_name> per trip. There can be <const_dir>at most</const_dir> <limit>10</limit> <var>bus</var> trips and <const_dir>at least</const_dir> <limit>60%</limit> of the trips must be by <var>car</var>. If the farmer <const_dir>needs to transport</const_dir> <limit>1200</limit> chicken, how many trips of each should be done to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed to transport the chicken?", "output": "min: 2 bus + 1.5 car\nst: bus <= 10"}
{"input": "Children can go to school either by <var>van</var> or by <var>minibus</var>. A <var>van</var> can take <param>6</param> kids and produces <param>7</param> units of <obj_name>pollution</obj_name>. A <var>minibus</var> can take <param>10</param> kids and produced <param>10</param> units of <obj_name>pollution</obj_name>. There are <const_dir>at least</const_dir> <limit>150</limit> kids than need to go to school and <const_dir>at most</const_dir> <limit>10</limit> <var>minibuses</var> can be used. In addition, the number of <var>vans</var> used <const_dir>must exceed</const_dir> the number of <var>minibuses</var>. How many of each should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 7 van + 10 minibus\nst: minibuses <= 10"}
{"input": "A recycling company collects recycling from neighborhoods using <var>small</var> and <var>large bins</var>. A <var>small bin</var> requires <param>2</param> workers while a <var>large bin</var> requires <param>5</param> workers. A <var>small bin</var> can hold <param>25</param> units of <obj_name>recycling material</obj_name> and a <var>large bin</var> can hold <param>60</param> units of <obj_name>recycling material</obj_name>. The company has <const_dir>available</const_dir> <limit>100</limit> workers. Because most people don't recycle, the number of <var>small bins</var> <const_dir>must be</const_dir> <param>three</param> times the number of <var>large bins</var>. In addition, there must be <const_dir>at least</const_dir> <limit>10</limit> <var>small bins</var> and <limit>4</limit> <var>large bins</var>. How many of each bin type should be used to <obj_dir>maximize</obj_dir> the total <obj_name>amount of recycling material</obj_name> that can be collected?", "output": "max: 25 small_bin + 60 large_bin\nst: small_bins >= 10\nlarge_bins >= 4"}
{"input": "A toy store hires <var>seasonal</var> and <var>full-time</var> volunteers to deliver gifts and gives them points for service. A <var>seasonal volunteer</var> can deliver <param>5</param> <obj_name>gifts</obj_name> and gets <param>2</param> points. A <var>full-time volunteer</var> can deliver <param>8</param> <obj_name>gifts</obj_name> and gets <param>5</param> points. The store can <const_dir>only</const_dir> give out <limit>200</limit> points. In addition, a <const_dir>maximum</const_dir> of <limit>30%</limit> of the volunteers can be <var>seasonal</var> and <const_dir>at least</const_dir> <limit>10</limit> must be <var>full-time</var>. How many of each volunteer is needed to <obj_dir>maximize</obj_dir> the total <obj_name>number of gifts</obj_name> that can be delivered?", "output": "max: 5 seasonal_volunteer + 8 full-time_volunteer\nst: full-time >= 10"}
{"input": "A jam company sends its product out in <var>small</var> and <var>large</var> jars. A <var>small jar</var> can hold <param>50</param> ml of jam while a <var>large jar</var> can hold <param>200</param> ml of jam. Most store prefer the smaller size and so the number of <var>large jars</var> <const_dir>cannot exceed</const_dir> the number of <var>small jars</var>. If the company wants to ship <const_dir>at least</const_dir> <limit>100000</limit> ml of jam, find the <obj_dir>minimum</obj_dir> <obj_name>number of jars</obj_name> that can be used.", "output": "min: \nst:"}
{"input": "A corn farmer sends his corn to the city by either <var>tractor</var> or <var>car</var>.  A <var>tractor</var> can carry <param>40</param> kg of corn while a <var>car</var> can carry <param>20</param> kg of corn. Since tractors are very slow, the number of <var>cars</var> used has to be <const_dir>at least</const_dir> <param>twice</param> the number of <var>tractors</var> used. If <const_dir>at least</const_dir> <limit>500</limit> kg of corn need to be sent to the city, <obj_dir>minimize</obj_dir> the total <obj_name>number of tractors and cars</obj_name> needed.", "output": "min: \nst:"}
{"input": "A village hosts a banquet and provides <var>bike</var> and <var>car</var> transportation for everyone. A <var>bike</var> can take <param>3</param> people while a <var>car</var> can take <param>5</param> people. Since <var>cars</var> are more expensive, <const_dir>at most</const_dir> <limit>40%</limit> of the vehicles can be <var>cars</var>. If the village needs to transport <const_dir>at least</const_dir> <limit>500</limit> people, how many of each vehicle should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of bikes</obj_name> needed?", "output": "min: \nst:"}
{"input": "An industrial tire company delivers large tires for equipment to remote engineering sites either by <var>cargo planes</var> or <var>ultrawide trucks</var>. Each <var>cargo plane</var> can transport <param>10</param> tires per trip and costs $<param>1000</param>. Each <var>ultrawide truck</var> can transport <param>6</param> tires per trip and costs $<param>700</param>. The company needs to transport <const_dir>at least</const_dir> <limit>200</limit> tires and has <const_dir>available</const_dir> $<limit>22000</limit>. Because most remote sites don't have proper airports, the number of <var>plane</var> trips <const_dir>cannot exceed</const_dir> the number of <var>ultrawide truck</var> trips. How many trips of each should be done to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst:"}
{"input": "A water salesman collects water from a glacier and transports it in either <var>small</var> or <var>large</var> kegs. A <var>small keg</var> can hold <param>40</param> liters of <obj_name>water</obj_name> while a <var>large keg</var> can hold <param>100</param> liters of <obj_name>water</obj_name>. The salesman has available <const_dir>at most</const_dir> <limit>30</limit> <var>small kegs</var> and <limit>10</limit> <var>large kegs</var>. Since <var>small kegs</var> are easier to carry, <const_dir>at least</const_dir> <param>twice</param> as may <var>small kegs</var> must be used than <var>large kegs</var>. If he can transport <const_dir>at most</const_dir> <limit>25</limit> kegs total and <const_dir>at least</const_dir> <limit>5</limit> kegs must be <var>large</var>, how many of each should he use to <obj_dir>maximize</obj_dir> the total <obj_name>amount of glacial water</obj_name> he can transport?", "output": "max: 40 small_keg + 100 large_keg\nst: small_kegs <= 30\nlarge_kegs <= 10\nsmall_keg + large_keg <= 25\nlarge >= 5"}
{"input": "A tropical city full of islands sends mail either by <var>submarine</var> or by <var>boat</var>. A <var>submarine</var> can carry <param>100</param> pieces of mail per trip and uses <param>30</param> liters of <obj_name>gas</obj_name>. A <var>boat</var> can carry <param>80</param> pieces of mail per trip and uses <param>25</param> liters of <obj_name>gas</obj_name>. There can be <const_dir>at most</const_dir> <limit>6</limit> <var>submarine</var> trips and a <const_dir>minimum</const_dir> of <limit>50%</limit> of the trips must be by <var>boat</var>. If the city needs to transport <const_dir>at least</const_dir> <limit>1000</limit> pieces of mail, how many of each transportation should they use to <obj_dir>minimize</obj_dir> the total <obj_name>amount of gas</obj_name> used?", "output": "min: 30 submarine + 25 boat\nst: submarine <= 6"}
{"input": "The weather is freezing and the fish in the pond need to be transported either by <var>helicopter</var> or <var>car</var>. A <var>helicopter</var> can take <param>30</param> fish per trip and takes <param>40</param> <obj_name>minutes</obj_name>. A <var>car</var> can take <param>20</param> fish per trip and takes <param>30</param> <obj_name>minutes</obj_name>. Since <var>helicopter</var> trips are expensive, there can be <const_dir>at most</const_dir> <limit>5</limit> <var>helicopter</var> trips. In addition, <const_dir>at least</const_dir> <limit>60%</limit> of the trips should be by <var>car</var>. If <const_dir>at least</const_dir> <limit>300</limit> fish need to transported, how many of each trip should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>time</obj_name> needed?", "output": "min: 40 helicopter + 30 car\nst: helicopter <= 5"}
{"input": "A tourist spot in the mountains allows visitors to travel to the top either by <var>hot-air balloon</var> or <var>gondola lift</var>. A <var>hot air balloon</var> can carry <param>4</param> visitors while a <var>gondola lift</var> can carry <param>6</param> visitors. Each <var>hot air balloon</var> produces <param>10</param> units of <obj_name>pollution</obj_name> while each <var>gondola lift</var> produces <param>15</param> units of <obj_name>pollution</obj_name>. There can be <const_dir>at most</const_dir> <limit>10</limit> <var>hot-air balloon</var> rides and <const_dir>at least</const_dir> <limit>70</limit> visitors need to be transported. How many of each type of transport method should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>pollution</obj_name> produced?", "output": "min: 10 hot_air_balloon + 15 gondola_lift\nst: hot-air_balloon <= 10"}
{"input": "A factory transports rice to the city in horse-drawn carts that are either <var>medium</var> or <var>large</var> size. A <var>medium sized cart</var> requires <param>2</param> horses and can carry <param>30</param> kg of <obj_name>rice</obj_name>. A <var>large sized cart</var> requires <param>4</param> horses and can carry <param>70</param> kg of <obj_name>rice</obj_name>.  The factory has <limit>60</limit> horses <const_dir>available</const_dir>. Because the horses don't get along well, the number of <var>medium sized carts</var> <const_dir>must be</const_dir> <param>three</param> times the number of <var>large sized carts</var>. In addition, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>medium sized carts</var> and <const_dir>at least</const_dir> <limit>5</limit> <var>large sized carts</var>. How many of each cart size should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount of rice</obj_name> that can be transported?", "output": "max: 30 medium_sized_cart + 70 large_sized_cart\nst: medium_sized_carts >= 5\nlarge_sized_carts >= 5"}
{"input": "A dog school trains <var>labradors</var> and <var>golden retrievers</var> to deliver newspaper. A <var>labrador</var> can deliver <param>7</param> <obj_name>newspapers</obj_name> at a time and requires <param>5</param> small bone treats for service. A <var>golden retriever</var> can deliver <param>10</param> <obj_name>newspapers</obj_name> at a time and requires <param>6</param> small bone treats per service. The school <const_dir>only</const_dir> has <limit>1500</limit> small bone treats available. In addition, <const_dir>at least</const_dir> <limit>50</limit> <var>golden retrievers</var> must be used and <const_dir>at most</const_dir> <limit>60%</limit> of the dogs can be <var>labradors</var>. How many of each dog should be used to <obj_dir>maximize</obj_dir> the <obj_name>number of newspapers</obj_name> that can be delivered?", "output": "max: 7 labrador + 10 golden_retriever\nst: golden_retrievers >= 50"}
{"input": "A construction company in the tropics uses <var>cows</var> and <var>elephants</var> to carry bricks. A <var>cow</var> can carry <param>20</param> bricks on its back while an <var>elephant</var> can carry <param>50</param> bricks on its back. To avoid having <var>elephants</var> create too much traffic, the number of <var>elephant</var> <const_dir>cannot exceed</const_dir> the number of <var>cows</var>. In addition, there can be <const_dir>at most</const_dir> <param>twice</param> the number of <var>cows</var> as <var>elephants</var>. If the company needs to transport <const_dir>at least</const_dir> <limit>1000</limit> bricks, find the <obj_dir>minimum</obj_dir> <obj_name>number of animals</obj_name>, <var>cows</var> and <var>elephants</var>, that can be used..", "output": "min: \nst:"}
{"input": "A farmer on an island sends corn to the main land either by <var>ferry</var> or <var>light rail</var>. Each <var>ferry trip</var> can take <param>20</param> boxes of corn while each <var>light rail</var> trip can take <param>15</param> boxes of corn. Since <var>ferry</var> trips are slow, the number of <var>light rail</var> trip has to be <const_dir>at least</const_dir> <param>4</param> times the number of <var>ferry trips</var>. If the farmer wants to send <const_dir>at least</const_dir> <limit>500</limit> boxes of corn, <obj_dir>minimize</obj_dir> the <obj_name>total number of trips</obj_name> of either type needed.", "output": "min: \nst:"}
{"input": "A factory provides rides for its employees in either <var>taxis</var> or <var>company cars</var>. Each <var>taxi ride</var> can take <param>2</param> employees while each <var>company car ride</var> can take <param>3</param> employees. Since buying and maintaining cars is expensive, <const_dir>at most</const_dir> <limit>60%</limit> of the rides can be <var>company car rides</var>. However, there has to be <const_dir>at least</const_dir> <limit>30</limit> <var>company car rides</var>. If the company needs to transport <const_dir>at least</const_dir> <limit>500</limit> employees, how many rides of each should be done to <obj_dir>minimize</obj_dir> the total <obj_name>number of taxi rides</obj_name>.", "output": "min: \nst: company_car_rides >= 30"}
{"input": "A chemical company is transporting their hydrogen using two different methods, <var>high pressure tube</var> trailers and <var>liquefied hydrogen tankers</var>. The first method is a <var>high-pressure tube</var> trailer which can transport <param>50</param> cubic meters each per trip at a cost of $<param>500</param>. The second method is using <var>liquefied hydrogen tankers</var> which can transport <param>30</param> cubic meters each per trip at a cost of $<param>200</param>. The company needs to transport <const_dir>at least</const_dir> <limit>1000</limit> cubic meters of hydrogen and they have <const_dir>budget</const_dir> of $<limit>3750</limit> available. In addition, the number of transports done by the <var>high pressure tube trailer</var> method has to be <const_dir>less than</const_dir> the number of transports done by the <var>liquefied hydrogen tanker</var> method. How many of each transportation method should they use to <obj_dir>minimize</obj_dir> the <obj_name>total number of trips</obj_name>?", "output": "min: \nst:"}
{"input": "A grape farmer transports his grapes in either <var>small crates</var> or <var>large crates</var>. A <var>small crate</var> can take <param>200</param> <obj_name>grapes</obj_name> while a <var>large crate</var> can take <param>500</param>.  Because his customers prefer <var>smaller crates</var>, <const_dir>at least</const_dir> <param>3</param> times as many <var>small crates</var> must be used than <var>large crates</var>. The farmer has available <const_dir>at most</const_dir> <limit>100</limit> <var>small crates</var> and <const_dir>at most</const_dir> <limit>50</limit> <var>large crates</var>. In addition, his truck can take <const_dir>at most</const_dir> <limit>60</limit> crates total and he must use <const_dir>at least</const_dir> <limit>10</limit> <var>large crates</var>. How many of each crate should he use to <obj_dir>maximize</obj_dir> the total <obj_name>number of grapes</obj_name> he can transport?", "output": "max: 200 small_crate + 500 large_crate\nst: small_crates <= 100\nlarge_crates <= 50\nsmall_crate + large_crate <= 60\nlarge_crates >= 10"}
{"input": "A shipping company need to transport packages by either <var>truck</var> or <var>car</var>. A <var>truck</var> can transport <param>50</param> packages per trip while a <var>car</var> can transport <param>30</param> packages per trip. In addition, a <var>truck</var> uses <param>20</param> liters of <obj_name>gas</obj_name> per trip while a <var>car</var> uses <param>15</param> liters of <obj_name>gas</obj_name> per trip. There can be <const_dir>at most</const_dir> <limit>5</limit> <var>truck</var> trips made and <const_dir>at least</const_dir> <limit>30%</limit> of all the trips must be made by <var>car</var>. The company needs to transport <const_dir>at least</const_dir> <limit>500</limit> packages. How many of each transportation should they use to <obj_dir>minimize</obj_dir> the total <obj_name>amount of gas</obj_name> consumed?", "output": "min: 20 truck + 15 car\nst: truck <= 5"}
{"input": "There has been a horrible accident and patients need to be taken to the hospital by either a <var>helicopter</var> or <var>bus</var>. A <var>helicopter</var> can transport <param>5</param> patients per trip and takes <param>1</param> <obj_name>hour</obj_name>. On the other hand, a <var>bus</var> can transport <param>8</param> patients per trip and takes <param>3</param> <obj_name>hours</obj_name>. <const_dir>At least</const_dir> <limit>120</limit> patients need to be transported and <const_dir>at least</const_dir> <limit>30%</limit> of the trips should be by <var>helicopter</var>. In addition, there can be <const_dir>at most</const_dir> <limit>10</limit> <var>bus</var> trips. How should the patients be taken to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> to transport the patients?", "output": "min: 1 helicopter + 3 bus\nst: bus <= 10"}
{"input": "Employees have the option of <var>car</var>-pooling to work or taking the company <var>bus</var>. A <var>car</var> can take <param>4</param> employees and produces <param>10</param> units of <obj_name>pollution</obj_name>, while a <var>bus</var> can take <param>20</param> employees and produces <param>30</param> units of <obj_name>pollution</obj_name>. <const_dir>At least</const_dir> <limit>300</limit> employees need to be transported and <const_dir>at most</const_dir> <limit>4</limit> <var>buses</var> can be used. How many of each type of transport should be taken to <obj_dir>minimize</obj_dir> the total <obj_name>pollution</obj_name> produced.", "output": "min: 10 car + 30 bus\nst: buses <= 4"}
{"input": "A snow removal company removes snow from neighborhoods using <var>small trucks</var> and <var>large trucks</var>. A <var>small truck</var> requires <param>2</param> people to shovel the snow and can carry <param>30</param> units of <obj_name>snow</obj_name>. A <var>large truck</var> require <param>4</param> people to shovel the snow and car carry <param>50</param> units of <obj_name>snow</obj_name>. The company has <const_dir>available</const_dir> <limit>30</limit> people. In addition, because some neighbourhood don\u2019t allow big trucks, <const_dir>at least</const_dir> <limit>10</limit> trucks must be <var>small</var>. There must be <const_dir>at least</const_dir> <limit>3</limit> <var>large trucks</var> as well and the number of <var>small trucks</var> <const_dir>must be</const_dir> <param>twice</param> as much as the number of <var>large trucks</var>. How many of each truck should be used to <obj_dir>maximize</obj_dir> the total <obj_name>amount of snow</obj_name> that can be transported?", "output": "max: 30 small_truck + 50 large_truck\nst: small >= 10\nlarge_trucks >= 3"}
{"input": "A magic school sends letters to student either by <var>carrier pigeons</var> or <var>owls</var>. A <var>carrier pigeon</var> can carry <param>two</param> <obj_name>letters</obj_name> at a time and requires <param>3</param> treats for service. An <var>owl</var> can carry <param>5</param> <obj_name>letters</obj_name> at a time and requires <param>5</param> treats for service.  <const_dir>At most</const_dir> <limit>40%</limit> of the birds can be <var>owls</var>. In addition, the school <const_dir>only</const_dir> has <limit>1000</limit> treats available and <const_dir>at least</const_dir> <limit>20</limit> <var>carrier pigeons</var> must be uses. How many of each bird can be used to <obj_dir>maximize</obj_dir> the total <obj_name>number of letters</obj_name> that can be sent.", "output": "max: two carrier_pigeon + 5 owl\nst: carrier_pigeons >= 20"}
{"input": "An international shipping company uses <var>large</var> and <var>small ships</var> to transport containers around the world. A <var>large ship</var> can carry <param>500</param> containers while a <var>small ship</var> can carry <param>200</param> containers. Because most ports are small, the number of <var>large ships</var> <const_dir>cannot exceed</const_dir> the number of <var>small ships</var>. If the company is under contract needs to transport <const_dir>at least</const_dir> <limit>3000</limit> containers, find the <obj_dir>minimum</obj_dir> <obj_name>number of ships</obj_name> that can be used.", "output": "min: \nst:"}
{"input": "A large fishing boat sends fish back to shore either by <var>small canoes</var> or <var>smaller diesel boats</var>. A <var>canoe</var> can carry back <param>10</param> fish while a <var>small diesel boat</var> can carry back <param>15</param> fish. In order to follow environmental rules, the number of <var>small canoes</var> used has to be <const_dir>at least</const_dir> <param>3</param> times as many as the number of <var>diesel boats</var> uses. If  <const_dir>at least</const_dir> <limit>1000</limit> fish need to be transported to shore, <obj_dir>minimize</obj_dir> the <obj_name>total number of canoes and diesel boats</obj_name> needed.", "output": "min: \nst:"}
{"input": "A volunteer organization transports voters to the polls on Election Day either by <var>vans</var> or <var>cars</var>. They have <var>vans</var> which can carry <param>6</param> people and <var>cars</var> which can carry <param>3</param> people.  They need to transport <const_dir>at least</const_dir> <limit>200</limit> voters to the polls. In addition, <const_dir>at most</const_dir> <limit>30%</limit> of the vehicles can be <var>vans</var>. How many of each vehicle should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of cars</obj_name> used?", "output": "min: \nst:"}
{"input": "A car manufacturing company makes <var>hamburgers</var> and <var>chicken wraps</var> for workers. They need to ensure workers get <const_dir>at least</const_dir> <limit>2200</limit> calories, <limit>50</limit> grams of protein, and <limit>70</limit> grams of carbs. One <var>hamburger</var> <obj_name>costs</obj_name> $<param>6.5</param> and contains <param>800</param> calories, <param>19</param> grams of protein, and <param>20</param> grams of carbs. One <var>chicken wrap</var> <obj_name>costs</obj_name> $<param>4</param> and contains <param>450</param> calories, <param>12</param> grams of protein, and <param>10</param> grams of carbs. What is the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> diet that the company can provide for its workers?", "output": "min: 6.5 hamburger + 4 chicken_wrap\nst:"}
{"input": "A meat processing plant uses two machines, a meat slicer and a meat packer, to make their <var>hams</var> and <var>pork ribs</var>. To produce one batch of <var>hams</var> requires <param>4</param> hours on the meat slicer and <param>2.5</param> hours on the meat packer. To produce one batch of <var>pork ribs</var> requires <param>2</param> hours on the meat slicer and <param>3.5</param> hours on the meat packer. Each machine runs for <const_dir>at most</const_dir> <limit>4000</limit> hours per year. If the <obj_name>profit</obj_name> per batch of <var>hams</var> is $<param>150</param> and the <obj_name>profit</obj_name> per batch of <var>pork ribs</var> is $<param>300</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 hams + 300 pork_ribs\nst:"}
{"input": "An appliance company sells and installs <var>refrigerators</var> and <var>stoves</var>. Each <var>refrigerator</var> takes <param>60</param> minutes of mover time and <param>20</param> minutes of setup time. Each <var>stove</var> takes <param>45</param> minutes of mover time and <param>25</param> minutes of setup time. The company has <const_dir>available</const_dir> <limit>20000</limit> minutes of mover time and <limit>13000</limit> minutes of setup time. If the <obj_name>profit</obj_name> per <var>refrigerator</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>stove</var> is $<param>260</param>, how many of each should they sell in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 260 stove + 400 refrigerator\nst:"}
{"input": "An office company makes <var>desks</var> and <var>drawers</var>. Each <var>desk</var> requires <param>40</param> minutes of assembly and <param>20</param> minutes of sanding. Each <var>drawer</var> requires <param>30</param> minutes of assembly and <param>10</param> minutes of sanding. The company has <const_dir>available</const_dir> <limit>4000</limit> minutes for assembly and <limit>3500</limit> minutes for sanding. If the <obj_name>profit</obj_name> per <var>desk</var> is $<param>100</param> and the <obj_name>profit</obj_name> per <var>drawer</var> is $<param>90</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 desk + 90 drawer\nst:"}
{"input": "A milk tea shop owner would like to sell two different milk teas: <var>black milk tea</var> and <var>matcha milk tea</var>. Each contains both milk and honey. A bottle of <var>black milk tea</var> contains <param>600</param> grams of milk and <param>10</param> grams of honey, whereas a bottle of <var>matcha milk tea</var> contains <param>525</param> grams of milk and <param>5</param> grams of honey. The <obj_name>profit</obj_name> from each bottle of <var>black milk tea</var> sold is $<param>7.5</param> and the <obj_name>profit</obj_name> from each bottle of <var>matcha milk tea</var> sold is $<param>5</param>. If his total production must not exceed his <const_dir>available</const_dir> stock of <limit>30000</limit> grams of milk and <limit>500</limit> grams of honey, how many bottles of each type of milk tea should be made to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 5 matcha_milk_tea + 7.5 black_milk_tea\nst:"}
{"input": "A young boy is trying to grow taller by drinking <var>milk</var> and eating <var>vegetables</var>. He wants to get a <const_dir>minimum</const_dir> of <limit>100</limit> units of calcium and <limit>50</limit> units of iron per day. A glass of <var>milk</var> <obj_name>costs</obj_name> $<param>1</param> and contains <param>40</param> units of calcium and <param>25</param> units of iron. A plate of <var>vegetables</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>15</param> units of calcium and <param>30</param> units of iron. How many of each should he consume to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 1 milk + 2 vegetables\nst:"}
{"input": "Bob wants to design a diet consisting of <var>protein bars</var> and <var>noodles</var>. Assume that each serving of <var>noodles</var> <obj_name>costs</obj_name> $<param>5</param> and contains <param>600</param> calories and <param>1.5</param> grams of protein. Assume that each serving of <var>protein bar</var> <obj_name>costs</obj_name> $<param>2.5</param> and contains <param>250</param> calories and <param>5</param> grams of protein. He's interested in spending as little money as possible but he wants to ensure that his meals have <const_dir>at least</const_dir> <limit>2000</limit> calories and <const_dir>at least</const_dir> <limit>16</limit> grams of protein per day. Formulate a linear programming problem that will help <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of the diet.", "output": "min: 5 noodles + 2.5 protein_bar\nst:"}
{"input": "A toy store sells <var>plush toys</var> and <var>dolls</var>. Each <var>plush toy</var> costs the store $<param>3</param> and each <var>doll</var> costs the store $<param>2</param>. The store owner can spend <const_dir>at most</const_dir> $<limit>700</limit> on inventory. Each <var>plush toy</var> is then sold for a <obj_name>profit</obj_name> of $<param>4</param> while each <var>doll</var> is sold for a <obj_name>profit</obj_name> of $<param>2</param>. The owner estimates that <const_dir>at least</const_dir> <limit>90</limit> <var>plush toys</var> but <const_dir>at most</const_dir> <limit>190</limit> <var>plush toys</var> are sold each month. He also estimates that the number of <var>dolls</var> sold is <const_dir>at most</const_dir> <param>twice</param> the amount of <var>plush toys</var> sold. How many of each should be bought and sold to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 plush_toy + 2 doll\nst: plush_toys >= 90\nplush_toys <= 190"}
{"input": "Forest Paper makes two types of products: <var>graph paper</var> and <var>music paper</var>. Each type of paper requires the use of two machines, a printing machine and a scanning machine. It takes <param>3</param> minutes on the printing machine and <param>5.5</param> minutes on the scanning machine to make a ream of <var>graph paper</var>. On the other hand, it takes <param>1.5</param> minutes on the printing machine and <param>3</param> minutes on the scanning machine to make a ream of <var>music paper</var>. Each machine is available for a <const_dir>maximum</const_dir> of <limit>350</limit> minutes per day. The company sells a package of <var>graph paper</var> at a <obj_name>profit</obj_name> of $<param>4</param> and a package of <var>music paper</var> at a <obj_name>profit</obj_name> of $<param>2.5</param>. The company can sell all the paper it makes. How many reams of each type should the company produce in a day in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is that profit?", "output": "max: 4 graph_paper + 2.5 music_paper\nst:"}
{"input": "Calcium and Magnesium are found in two health supplements, <var>health supplement A</var> and <var>health supplement B.</var> One serving of <var>health supplement A</var> contains <param>30</param> grams of Calcium and <param>50</param> grams of Magnesium. One serving of <var>health supplement B</var> contains <param>60</param> grams of Calcium and <param>10</param> grams of Magnesium. The <obj_name>cost</obj_name> per health supplement for <var>health supplement A</var> is $<param>14</param> and the <obj_name>cost</obj_name> per health supplement for <var>health supplement B</var> is $<param>25</param>. A patient must consume these two health supplements every day to get <const_dir>at least</const_dir> <limit>400</limit> grams of Calcium and <limit>50</limit> grams of Magnesium. Determine how much servings of each supplement the patient needs to <obj_dir>minimize</obj_dir> her daily <obj_name>cost</obj_name>.", "output": "min: 14 health_supplement_A + 25 health_supplement_B\nst:"}
{"input": "Lucy has a dog and she wants his food to be mixed.  In order to keep the dog healthy but also keep the food tasty, the mix needs to have a <const_dir>minimum</const_dir> of <limit>15</limit> units of calcium, <limit>20</limit> units of vitamin mix, and <limit>20</limit> units of protein. A <var>regular brand</var> <obj_name>costs</obj_name> $<param>20</param> per bag and contains <param>4</param> units of calcium, <param>7</param> units of vitamin mix, and <param>10</param> units of protein. A <var>premium brand</var> <obj_name>costs</obj_name> $<param>35</param> per bag and contains <param>12</param> units of calcium, <param>10</param> units of vitamin mix, and <param>16</param> units of protein. How many bags of each brand should Lucy mix in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while also meeting the taste and health requirements.", "output": "min: 35 premium_brand + 20 regular_brand\nst:"}
{"input": "Maple Oil processes three types of crude oil: <var>light oil</var>, <var>non-sticky oil</var> and <var>heavy oil</var>. Each tank of <var>light oil</var> produces a <obj_name>net revenue</obj_name> of $<param>550</param>, each tank of <var>non-sticky oil</var> produces a <obj_name>net revenue</obj_name> of $<param>750</param>, and each tank of <var>heavy oil</var> produces a <obj_name>net revenue</obj_name> of $<param>950</param>. To process a tank of <var>light oil</var>, <param>3</param> units of compound A and <param>3</param> units of compound B are required. To process a tank of <var>non-sticky oil</var>, <param>6</param> units of compound A and <param>2</param> units of compound B are required. To process a tank of <var>heavy oil</var>, <param>9</param> units of compound A and <param>3</param> units of compound B are required. Currently the company <const_dir>has</const_dir> <limit>250</limit> units of compound A and <limit>150</limit> units of compound B to process. How many full or partial tanks of each oil should the company process so that <obj_name>net revenue</obj_name> is <obj_dir>maximized</obj_dir>?", "output": "max: 550 light_oil + 750 non-sticky_oil + 950 heavy_oil\nst:"}
{"input": "A flooring company produces engineered <var>laminate planks</var> and <var>carpets</var>. The chief marketer reports an expected demand of <const_dir>at least</const_dir> <limit>15,000</limit> square feet of <var>laminate planks</var> and <limit>5,000</limit> square feet of <var>carpets</var> each week. The shipping contract requires a <const_dir>total of at least</const_dir> <limit>50,000</limit> square feet of products each week. However, due to a shortage of raw materials, <const_dir>no more than</const_dir> <limit>40,000</limit> square feet of <var>laminate planks</var> and <limit>20,000</limit> square feet of <var>carpets</var> can be produced weekly. If a square foot of <var>laminate planks</var> produces a $<param>2.1</param> <obj_name>profit</obj_name> and a square foot of <var>carpets</var> yields a $<param>3.3</param> <obj_name>profit</obj_name>, how many of each type of product should be made weekly to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 2.1 laminate_planks + 3.3 carpets\nst: laminate_planks >= 15,000\ncarpets >= 5,000\nlaminate_planks + carpets <= 50,000\nlaminate_planks <= 40,000\ncarpets <= 20,000"}
{"input": "A man takes two supplements to get his daily iron and calcium requirements. A pill of <var>supplement A</var> has <param>5</param> units of iron and <param>10</param> units of calcium. A pill of <var>supplement B</var> contains <param>4</param> units of iron and <param>15</param> units of calcium.  The man needs a <const_dir>minimum</const_dir> of <limit>40</limit> units of iron and <limit>50</limit> units of calcium per day. If the <obj_name>cost</obj_name> per pill of <var>supplement A</var> is $<param>2</param> and the <obj_name>cost</obj_name> per pill of <var>supplement B</var> is  $<param>3</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 3 supplement_B + 2 supplement_A\nst:"}
{"input": "A fashion company sells <var>regular handbags</var> and <var>premium handbags</var> made of higher quality material. They can sell <var>regular handbags</var> at a <obj_name>profit</obj_name> of $<param>30</param> each and <var>premium handbags</var> at a <obj_name>profit</obj_name> of $<param>180</param> each. The total monthly cost of manufacturing is $<param>200</param> per <var>regular handbag</var> and $<param>447</param> per <var>premium handbag</var>. The company has a total <const_dir>budget</const_dir> of $<limit>250000</limit> and can sell <const_dir>at most</const_dir> <limit>475</limit> handbags of either type per month. How many of each handbag should they sell to <obj_dir>maximize</obj_dir> its monthly <obj_name>profit</obj_name>?", "output": "max: 30 regular_handbags + 180 premium_handbags\nst: regular_handbags + premium_handbags <= 475"}
{"input": "A woman <const_dir>has</const_dir> $<limit>100000</limit> to gamble on two sports bets: a <var>basketball tournament</var>, a <var>horse race</var>, and a <var>soccer game</var>. Based on simple analysis, the woman determines her chance of losing her money would be <param>50%</param> for <var>basketball tournament</var>, <param>25%</param> for <var>horse race</var>, and <param>10%</param> for the <var>soccer game</var>. The <obj_name>payout</obj_name> for each dollar put on each bet will be $<param>1.2</param> for <var>basketball tournament</var>, $<param>0.5</param> for <var>horse race</var>, and $<param>0.1</param> for the <var>soccer game</var>. Knowing herself, she limits her average chance of losing her money should be <const_dir>at most</const_dir> <limit>30%</limit>. Could you help her determine how much to money to put on each sport bet to <obj_dir>maximize</obj_dir> her average <obj_name>payout</obj_name>?", "output": "max: 1.2 basketball_tournament + 0.5 horse_race + 0.1 soccer_game\nst: basketball_tournament + horse_race + soccer_game <= 100000"}
{"input": "A repairman fixes washing machines and <var>freezers</var>. Each <var>washing machine</var> takes <param>30</param> minutes of inspection and <param>90</param> minutes of fixing time. Each <var>freezer</var> takes <param>20</param> minutes of inspection and <param>125</param> minutes of fixing time. The repairman has <limit>5000</limit> minutes <const_dir>available</const_dir> for inspection and <limit>20000</limit> minutes <const_dir>available</const_dir> in his schedule. If each <var>washing machine</var> repaired <obj_name>earns</obj_name> him $<param>250</param> and each <var>freezer</var> repaired <obj_name>earns</obj_name> his $<param>375</param>, how many of each appliance should he fix to <obj_dir>maximize</obj_dir> his <obj_name>earnings</obj_name>?", "output": "max: 250 washing_machine + 375 freezer\nst:"}
{"input": "A small bakery <const_dir>has</const_dir> <limit>20000</limit> grams of batter and <limit>14000</limit> grams of milk to make their <var>crepe cakes</var>, <var>sponge cakes</var>, and <var>birthday cakes</var>. A <var>crepe cake</var> needs <param>400</param> grams of batter and <param>200</param> grams of milk. A <var>sponge cake</var> requires <param>500</param> grams of batter and <param>300</param> grams of milk. A <var>birthday cake</var> requires <param>450</param> grams of batter and <param>350</param> grams of milk. If the <obj_name>profit</obj_name> per <var>crepe cake</var> is $<param>12</param>, the <obj_name>profit</obj_name> per <var>sponge cake</var> is $<param>10</param>, and the <obj_name>profit</obj_name> per <var>birthday cake</var> is $<param>15</param>, how many of each should the bakery make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 12 crepe_cake + 10 sponge_cake + 15 birthday_cake\nst:"}
{"input": "Super Shop sells cat paw snacks and gold shark snacks in bulk. It plans to sell them into two snack mix products. The <var>first mix</var> contains <param>20%</param> cat paw snacks and <param>80%</param> gold shark snacks. The <var>second mix</var> contains <param>35%</param> cat paw snacks and <param>65%</param> gold shark snacks. The store <const_dir>has on hand</const_dir> <limit>20</limit> kg of cat paw snacks and <limit>50</limit> kg of gold shark snacks. If the <obj_name>profit</obj_name> per kg of the <var>first mix</var> is $<param>12</param> and the <obj_name>profit</obj_name> per kg of the <var>second mix</var> is $<param>15</param>, how many kg of each should be prepared to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 first_mix + 15 second_mix\nst:"}
{"input": "A taco stand sells <var>regular tacos</var> and <var>deluxe tacos</var> with extra meat. The stand makes x1 <var>regular tacos</var> at a <obj_name>profit</obj_name> of $<param>2.50</param> each and x2 <var>deluxe tacos</var> at a <obj_name>profit</obj_name> of $<param>3.55</param> each (x1 and x2 are unknown variables both greater than or equal to 0). There is a demand for <const_dir>at most</const_dir> <limit>50</limit> <var>regular tacos</var> and <const_dir>at most</const_dir> <limit>40</limit> <var>deluxe tacos</var>. The stand only has enough supplies to sell <const_dir>at most</const_dir> <limit>70</limit> tacos of either type. How many of each taco should the stand make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.55 deluxe_tacos + 2.50 regular_tacos\nst: regular_tacos <= 50\ndeluxe_tacos <= 40\ndeluxe_tacos + regular_tacos <= 70"}
{"input": "A printing company sells <var>math workbooks</var> and <var>English workbooks</var>. To meet demand, they must make <const_dir>at least</const_dir> <limit>40</limit> <var>math workbooks</var> and <const_dir>at least</const_dir> <limit>60</limit> <var>English workbooks</var>. However, they can make <const_dir>at most</const_dir> <limit>140</limit> <var>math workbooks</var> and <const_dir>at most</const_dir> <limit>170</limit> <var>English workbooks</var>. The company has a contract with a school to send <const_dir>at least</const_dir> <limit>200</limit> workbooks of either type. If the <obj_name>profit</obj_name> per <var>math workbook</var> is $<param>15</param> and the <obj_name>profit</obj_name> per <var>English workbook</var> is $<param>17</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 17 English_workbook + 15 math_workbook\nst: math_workbooks >= 40\nEnglish_workbooks >= 60\nmath_workbooks <= 140\nEnglish_workbooks <= 170\nEnglish_workbook + math_workbook <= 200"}
{"input": "A music company produces two types of digital keyboards, one is <var>full-weighted</var> and another is <var>semi-weighted</var>. Both keyboards are <obj_name>sold</obj_name> for $<param>2800</param> and $<param>2400</param> respectively. There are about <limit>3500</limit> oscillator chips <const_dir>available</const_dir> every day from which the <var>full-weighted version</var> requires <param>20</param> chips while the <var>semi-weighted version</var> requires <param>15</param> chips. The company has <const_dir>a total of</const_dir> <limit>6</limit> working hours a day. Both of these keyboards require a production time of <param>1.2</param> hours. What should be the manufacturing quantity for each of the keyboards to <obj_dir>maximize</obj_dir> the <obj_name>total revenue</obj_name>?", "output": "max: 2800 full-weighted + 2400 semi-weighted\nst:"}
{"input": "Platinum Database sells two types of subscription software packages: a <var>personal license</var> and a <var>commercial license</var> which will cost $<param>550</param> and $<param>2000</param> to generate respectively. The marketing department estimates that they can sell <const_dir>at most</const_dir> <limit>300</limit> licenses for both versions combined a month. The <obj_name>profit</obj_name> per <var>personal license</var> is $<param>450</param> and the <obj_name>profit</obj_name> per <var>commercial version</var> is $<param>1200</param>. If the company does not want to spend <const_dir>more than</const_dir> $<limit>400000</limit>, how many of each software package should they produce to <obj_dir>maximize</obj_dir> the <obj_name>profits</obj_name>.", "output": "max: 450 personal_license + 1200 commercial_version\nst: personal_license + commercial_version <= 300"}
{"input": "Zeta Bakery sells two types of cookies. They sell a <var>strawberry cookie</var> and a <var>sugar cookie</var>. Let's say they make x1 <var>strawberry cookies</var>, at a <obj_name>profit</obj_name> of $<param>5.5</param> each, and x2 <var>sugar cookies</var>, at a <obj_name>profit</obj_name> of $<param>12</param> each (x1 and x2 are unknowns both greater than or equal to 0). The daily demand for these cookies is <const_dir>at most</const_dir> <limit>100</limit> <var>strawberry cookies</var> and <const_dir>at most</const_dir> <limit>80</limit> <var>sugar cookies</var>. The bakery is short staffed and can make a <const_dir>maximum</const_dir> of <limit>100</limit> cookies of either type per day. How much of each cookie should the bakery make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5.5 strawberry_cookies + 12 sugar_cookies\nst: strawberry_cookies <= 100\nsugar_cookies <= 80\nstrawberry_cookies + sugar_cookies <= 100"}
{"input": "A food company would like to run its commercials on three streaming platforms: <var>Pi TV</var>, <var>Beta Video</var> and <var>Gamma Live</var>. The cost for a commercial as well as the expected <obj_name>audience</obj_name> reach is given. On <var>Pi TV</var>, a commercial costs $<param>1200</param> and attracts <param>2000</param> <obj_name>viewers</obj_name>. On <var>Beta Video</var>, a commercial costs $<param>2000</param> and attracts <param>5000</param> <obj_name>viewers</obj_name>. On <var>Gamma Live</var>, a commercial costs $<param>4000</param> and attracts <param>9000</param> <obj_name>viewers</obj_name>. <var>Beta Video</var> <const_dir>limits the number</const_dir> of commercials from a single company to <limit>8</limit>. In order to attract a wide range of people, <const_dir>at most</const_dir> a <limit>third</limit> of all commercials should occur on <var>Gamma Live</var> and a <const_dir>minimum</const_dir> of <limit>20%</limit> should occur on <var>Pi TV</var>. If the weekly <const_dir>budget</const_dir> is $<limit>20000</limit>, how many commercials should be run in each of the three possible choices in order to <obj_dir>maximize</obj_dir> <obj_name>audience</obj_name>?", "output": "max: 2000 Pi_TV + 5000 Beta_Video + 9000 Gamma_Live\nst: Beta_Video <= 8"}
{"input": "A disease testing station is conducting a <var>temperature check</var> and/or a <var>blood test</var> on each patient. A <var>temperature check</var> takes <param>2</param> minutes while a <var>blood test</var> takes <param>10</param> minutes. The disease testing station must conduct <const_dir>at least</const_dir> <limit>45</limit> <var>blood tests</var>. Since the <var>temperature check</var> is recommended to be performed on most people, the testing station requires that the <var>temperature check</var> is performed <const_dir>at least</const_dir> <param>5 times</param> as many as the <var>blood test</var>. If the disease testing station <const_dir>only</const_dir> has a total of <limit>22000</limit> staff minutes, how many of each <var>test</var> or <var>check</var> should be done to <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> seen?", "output": "max: \nst: blood_tests >= 45"}
{"input": "The government is reworking the pipes to transport water to houses in the area. The water can be transported through <var>wide pipes</var> or <var>narrow pipes</var>. <var>Wide pipes</var> can transport <param>25</param> units of water per minute and <var>narrow pipes</var> can transport <param>15</param> units of water per minute. Due to logistics, the number of <var>wide pipes</var> can be <const_dir>at most</const_dir> <param>a third</param> the number of <var>narrow pipes</var>. If there needs to be <const_dir>at least</const_dir> <limit>900</limit> units of water transported every minute, and <const_dir>at least</const_dir> <limit>5</limit> <var>wide pipes</var> must be used, <obj_dir>minimize</obj_dir> the total <obj_name>number of pipes</obj_name> required.", "output": "min: \nst: wide_pipes >= 5"}
{"input": "A concert organizer has to transport equipment using <var>carts</var> or <var>trolleys</var>. <var>Carts</var> can transport <param>5</param> kg/min of equipment and requires <param>2</param> <obj_name>workers</obj_name>. <var>Trolleys</var> can transport <param>7</param> kg/min of equipment and requires <param>4</param> <obj_name>workers</obj_name>. There must be <const_dir>at least</const_dir> <limit>12</limit> <var>trolleys</var> to be used. Additionally, only a <const_dir>maximum</const_dir> of <limit>40%</limit> of the transportation can be using <var>trolleys</var>. The organizer <const_dir>has to deliver</const_dir> at a rate of <limit>100</limit> kg/min of equipment. How many of each transportation method should be used to <obj_dir>minimize</obj_dir> the <obj_name>total number of workers</obj_name>?", "output": "min: 2 Carts + 4 Trolleys\nst: trolleys >= 12"}
{"input": "Both <var>subsoil</var> and <var>topsoil</var> need to be added to a garden bed. One bag of <var>subsoil</var> requires <param>10</param> units of <obj_name>water</obj_name> to hydrate while one bag of <var>topsoil</var> requires <param>6</param> units of <obj_name>water</obj_name> to hydrate every day. The truck used to transport the dirt has limited capacity and therefore, the farmer has <const_dir>available</const_dir> <limit>150</limit> bags of <var>topsoil</var> and <var>subsoil</var> combined. In addition, <const_dir>at least</const_dir> <limit>10</limit> bags of <var>topsoil</var> must be used. Since the <var>topsoil</var> is more expensive, <const_dir>at most</const_dir> <limit>30%</limit> of all bags of soil can be <var>topsoil</var>. How many bags of each should be bought to <obj_dir>minimize</obj_dir> the total <obj_name>amount of water</obj_name> required to hydrate the garden bed?", "output": "min: 10 subsoil + 6 topsoil\nst: subsoil + topsoil <= 150\ntopsoil >= 10"}
{"input": "An extremely large ski resort is looking into purchasing two types of <obj_name>ski lifts</obj_name>, a <var>densely-seated one</var> and a <var>loosely-seated one</var>. The <var>densely-seated ski lift</var> is able to bring <param>45</param> guests up the slopes every minute whereas the <var>loosely-seated ski</var> lift can transport <param>20</param> guests every minute.  The <var>densely-seated ski</var> lift uses <param>30</param> units of electricity and the <var>loosely-seated lift</var> uses <param>22</param> units of electricity. There must be <const_dir>at least</const_dir> <limit>five</limit> <var>loosely-seated ski</var> lifts because they move slower and are friendlier for beginners. The ski resort needs <const_dir>at least</const_dir> <limit>1000</limit> guests every minute to make a profit and has <const_dir>available</const_dir> <limit>940</limit> units of electricity. How many of each type of <obj_name>ski lifts</obj_name> should they plan to install to <obj_dir>minimize</obj_dir> <obj_name>the total number of ski lifts</obj_name> needed?", "output": "min: \nst: loosely-seated_ski >= five"}
{"input": "A strata-management company is looking into purchasing two types of <obj_name>air conditioners</obj_name>, a <var>low-power</var> and a <var>high-power model</var>. A <var>low-powered air</var> conditioner can cool down <param>12</param> housing units and uses <param>150</param> units of electricity every day. A <var>high-power model</var> can cool down <param>17</param> housing units and uses <param>250</param> units of electricity every day. Since the <var>low-powered model</var> is not good for the aesthetics, the strata decided to <const_dir>limit</const_dir> the number of <var>low-powered models</var> to only <limit>30%</limit> and <const_dir>at least</const_dir> <limit>7</limit> <var>high-powered models</var> must be used. If the apartment needs to condition <const_dir>at least</const_dir> <limit>250</limit> housing units and has <limit>3400</limit> units of electricity <const_dir>available</const_dir>, how many of each <obj_name>air conditioner</obj_name> should the strata company buy to <obj_dir>minimize</obj_dir> <obj_name>the total number of air conditioners</obj_name>?", "output": "min: \nst: high-powered_models >= 7"}
{"input": "A student takes <var>calcium pills</var> and <var>vitamin D pills</var> one after the other. Each <var>calcium pill</var> takes <param>5</param> <obj_name>minutes</obj_name> to be effective while each <var>vitamin D pill</var> takes <param>6</param> <obj_name>minutes</obj_name> to be effective. Over a month, the student must take <const_dir>at least</const_dir> <limit>130</limit> pills of medication and <const_dir>at least</const_dir> <limit>40</limit> should be <var>vitamin D pills</var> because they enhance the absorption of calcium in the body. Since <var>vitamin D</var> is complimentary to calcium, the student must take <const_dir>more</const_dir> <var>calcium pills</var> than <var>vitamin D pills</var>. How many pills of each should the student take to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for the medication to be effective?", "output": "min: 5 calcium_pill + 6 vitamin_D_pill\nst: calcium_pill + vitamin_D_pill <= 130\nvitamin_D_pills >= 40"}
{"input": "An amusement park has two types of games: <var>throwing</var> and <var>climbing games</var>. <var>Throwing games</var> attract <param>15</param> <obj_name>customers every hour</obj_name> and <var>climbing games</var> attract <param>8</param> <obj_name>customers every hour</obj_name>. <var>Throwing games</var> costs the amusement park $<param>2</param> in prizes per hour whereas <var>climbing games</var> cost $<param>3</param> in prizes per hour. Since <var>throwing games</var> yield the most profit, there must be <const_dir>at least</const_dir> <param>twice</param> as many <var>throwing games</var> as <var>climbing games</var>. However, <const_dir>at least</const_dir> <limit>5</limit> games must be <var>climbing</var>. If the amusement park can have <const_dir>at most</const_dir> $<limit>100</limit> in prizes every hour, <obj_dir>maximize</obj_dir> the <obj_name>total number of customers attracted every hour</obj_name>.", "output": "max: 8 climbing_games + 15 Throwing_games\nst: climbing >= 5"}
{"input": "In a science fair, there are two types of tables that can be used to display the children\u2019s science experiments. At the <var>circular tables</var>, <param>4</param> poster boards and <param>5</param> participants can fit around the table to cater to <param>8</param> <obj_name>guests</obj_name>. At the <var>rectangular tables</var>, <param>4</param> poster boards and <param>4</param> participants can fit around the table to cater to <param>12</param> <obj_name>guests</obj_name>. However, each <var>circular table</var> takes up <param>15</param> units of space while each <var>rectangular table</var> takes up <param>20</param> units of space. The science fair has must be able to fit <const_dir>at least</const_dir> <limit>500</limit> participants and <limit>300</limit> poster boards. If the science fair has <const_dir>available</const_dir> <limit>1900</limit> units of space, how many of each type of table should be set up to <obj_dir>maximize</obj_dir> the <obj_name>number of catered guests</obj_name>?", "output": "max: 8 circular_tables + 12 rectangular_tables\nst:"}
{"input": "An oil and gas company has two types of <obj_name>pipes</obj_name>, a <var>high-volume and</var> a <var>low-volume one</var>. Every day, the <var>high-volume pipe</var> allows <param>10000</param> US gallons and it is recommended that <param>12</param> technicians closely monitor the pipes to ensure that it is functioning properly. Each day, the <var>low-volume pipe</var> allows <param>5000</param> US gallons and <param>5</param> technicians should closely monitor for safety reasons. Every day, the oil and gas company needs to meet the demands of <const_dir>at least</const_dir> <limit>150000</limit> US gallons of gas and they <const_dir>have</const_dir> <limit>160</limit> technicians that are on their staff. Since the <var>high-volume pipe</var> has a higher risk of environmental damage, <const_dir>at most</const_dir> <limit>35 percent</limit> of the pipes can be <var>high-volume ones</var>. Additionally, there must be a <const_dir>minimum</const_dir> of <limit>8</limit> <var>low-volume pipes</var>. How many of each pipe types should be used to <obj_dir>reduce</obj_dir> the total <obj_name>number of pipes</obj_name> required?", "output": "red: \nst: low-volume_pipes >= 8"}
{"input": "A hospital hires <var>ultrasound technicians</var> and <var>graduate researchers</var> to image patients. An <var>ultrasound technician</var> works <param>8</param> hours per shift while a <var>graduate researcher</var> works <param>5</param> hours per shift. <var>Ultrasound technicians</var> are paid $<param>300</param> per shift while <var>graduate researchers</var> are paid $<param>100</param> per shift. However, due to regulations, there <const_dir>must be</const_dir> <param>twice</param> as many <var>ultrasound technician</var> shifts than <var>graduate researcher</var> shifts. Currently, the hospital <const_dir>needs</const_dir> <limit>500</limit> hours of ultrasound services to meet needs. If the hospital has a <const_dir>budget</const_dir> of $<limit>14000</limit>, how many of each <obj_name>worker</obj_name> certified to use the ultrasound should be scheduled to <obj_dir>reduce</obj_dir> the total <obj_name>number of workers</obj_name>?", "output": "red: \nst:"}
{"input": "A dentist <const_dir>has</const_dir> <limit>3000</limit> units of resin to fill cavities in both <var>molars</var> and <var>canines</var>. <var>Molars</var> require <param>20</param> units of resin and <param>3</param> units of <obj_name>pain killer</obj_name>. <var>Canines</var> require <param>15</param> units of resin and <param>2.3</param> units of <obj_name>pain killer</obj_name>. Since this dentist sees more cavities in <var>canines</var>, <const_dir>at least</const_dir> <limit>60%</limit> of cavities filled must be in <var>canines</var>. In addition, the dentist must reserve materials to fill <const_dir>at least</const_dir> <limit>45</limit> <var>molars</var>. How many of each type of teeth should the dentist schedule to fill to <obj_dir>minimize</obj_dir> the <obj_name>amount of pain killer</obj_name> needed?", "output": "min: 2.3 Canines + 3 Molars\nst: molars >= 45"}
{"input": "A food delivery person can either have shifts on <var>bikes</var> or <var>scooters</var>. A shift on a <var>bike</var> can deliver <param>10</param> orders, takes <param>5</param> units of energy, and brings in $<param>50</param> on <obj_name>tips</obj_name> because it is faster. A shift on a <var>scooter</var> can deliver <param>7</param> orders, takes <param>6</param> units of energy, and brings in $<param>43</param> on <obj_name>tips</obj_name>.  The delivery person has <const_dir>available</const_dir> <limit>40</limit> shifts a month and <const_dir>has</const_dir> <limit>230</limit> units of energy and must bring <const_dir>at least</const_dir> <limit>320</limit> orders. He must have <const_dir>at least</const_dir> <limit>5</limit> shifts on a <var>scooter</var> because <var>bikes</var> are harder to get. How many shifts on each type of transportation should the delivery person schedule to <obj_dir>maximize</obj_dir> <obj_name>tips received</obj_name>?", "output": "max: 50 bike + 43 scooter\nst: bike + scooter <= 40\nscooter >= 5"}
{"input": "A singer has two types of concerts he can hold, <var>pop</var> and <var>R&B.</var> Each <var>pop concert</var> will bring in <param>100</param> audience members and take <param>2</param> days of practice. Every <var>R&B concert</var> brings in <param>240</param> audience members and takes <param>4</param> days of practice. The singer must bring in <const_dir>at least</const_dir> <limit>10000</limit> audience members and only has <const_dir>available</const_dir> <limit>180</limit> days for practice. If he can <const_dir>at most</const_dir> perform <limit>40%</limit> of his concerts as <var>R&B</var> because he likes <var>pop</var> songs more, how many of each type of concert should be created to <obj_dir>minimize</obj_dir> the <obj_name>total number of concerts</obj_name>?", "output": "min: \nst:"}
{"input": "A neighbourhood pizza restaurant has opened and sells pizzas in two sizes; <var>large pizza</var> and <var>medium pizza</var>. <var>Large pizzas</var> require <param>12</param> units of dough, and <param>5</param> units of toppings. <var>Medium pizzas</var> require <param>8</param> units of dough, and <param>4</param> units of toppings. While <var>large pizzas</var> take <param>12</param> <obj_name>minutes to bake</obj_name>, <var>medium pizzas</var> require <param>8</param> <obj_name>minutes to bake</obj_name>. The neighbourhood pizza restaurant must use <const_dir>at least</const_dir> <limit>10000</limit> units of dough and <limit>4400</limit> units of toppings. <var>Medium pizzas</var> are popular due to a promotion, therefore, <const_dir>at least</const_dir> <limit>200</limit> <var>medium pizzas</var> must be made. There are regulars that prefer <var>large pizzas</var> and <const_dir>at least</const_dir> <param>two</param> times as many <var>large pizzas</var> should be made than <var>medium pizzas</var>. How many of each size of pizzas should the neighbourhood pizza restaurant make to <obj_dir>reduce</obj_dir> <obj_name>time spent baking</obj_name>?", "output": "red: 8 medium_pizzas + 12 large_pizzas\nst: medium_pizzas >= 200"}
{"input": "A party organizer needs to transport party goers either by <var>limousine</var> or <var>bus</var>. <var>Limousines</var> can carry <param>12</param> people and <var>buses</var> can carry <param>18</param> people. They need to transport <const_dir>at least</const_dir> <limit>400</limit> people. Because <var>limousines</var> are more attractive, <const_dir>at least</const_dir> <limit>70%</limit> of the vehicles must be <var>limousines</var>. How many of each type of vehicle should be used to <obj_dir>minimize</obj_dir> the <obj_name>total number of limousines and buses used</obj_name>?", "output": "min: \nst:"}
{"input": "A hospital purchases two pills available for the patients to take one at a time. One pill is taken as a <var>prevention</var> and another is taken for <var>treatment</var>. The <var>prevention pill</var> takes <param>15</param> dollars to make while the <var>treatment pill</var> takes <param>25</param> dollars to make. Since the <var>prevention pill</var> is in higher demand, the hospital must purchase <const_dir>at least</const_dir> <param>two times</param> as many <var>prevention pills</var> as <var>treatment pills</var>. In addition, the hospital must purchase <const_dir>at least</const_dir> <limit>50</limit> <var>treatment pills</var>. If the clinic only has a <const_dir>budget</const_dir> of <limit>10000</limit> dollars, <obj_dir>maximize</obj_dir> the <obj_name>number of patients</obj_name> that can be treated.", "output": "max: \nst: treatment_pills >= 50"}
{"input": "A dim sum restaurant can deliver their food by <var>cart</var> or by <var>hand</var>. Servers can deliver by <var>cart</var> and have <param>70</param> customer interactions and will have to refill food <param>five</param> <obj_name>times an hour</obj_name>. They can also deliver more food by <var>hand</var>, due to the increased mobility, and have <param>85</param> customer interactions while refilling food <param>twenty</param> <obj_name>times an hour</obj_name>. However, the customers get more options when delivering by cart, therefore <const_dir>at least</const_dir> <limit>70%</limit> of delivery shifts must be by <var>cart</var>. There must be <const_dir>at least</const_dir> <limit>3</limit> servers delivering by <var>hand</var> for their direct customer service. If the restaurant wants to <const_dir>have</const_dir> <limit>4000</limit> customer interactions per hour, how many of each form of delivery should the dim sum restaurant schedule to <obj_dir>minimize</obj_dir> the <obj_name>total number of refills per hour</obj_name>?", "output": "min: five cart + twenty hand\nst: hand >= 3"}
{"input": "A macro-counting fitness guru only eats <var>salmon</var> and <var>eggs</var>. Each bowl of <var>salmon</var> contains <param>300</param> calories, <param>15</param> grams of protein, and <param>80</param> mg of <obj_name>sodium</obj_name>. Each bowl of <var>eggs</var> contains <param>200</param> calories, <param>8</param> grams of protein, and <param>20</param> mg of <obj_name>sodium</obj_name>. Since the fitness guru has a limit to how many <var>eggs</var> he would like to eat, <const_dir>at most</const_dir> <limit>40%</limit> of his meals can be <var>eggs</var>. The fitness guru needs to eat <const_dir>at least</const_dir> <limit>2000</limit> calories and <limit>90</limit> grams of protein. How many of each type of meal should he eat to <obj_dir>minimize</obj_dir> his <obj_name>sodium intake</obj_name>?", "output": "min: 80 salmon + 20 eggs\nst:"}
{"input": "A restaurant has two combos available to their customers, an <var>original</var> and an <var>experimental meal</var>. The <var>original meal</var> typically generates <param>20</param> units of food waste and <param>45</param> units of wrapping waste and takes <param>10</param> <obj_name>minutes to cook</obj_name>. In comparison, the <var>experimental meal</var> generates <param>25</param> units of food waste and <param>35</param> units of wrapping waste and takes <param>15</param> <obj_name>minutes to cook</obj_name>. The restaurant can have <const_dir>at most</const_dir> <limit>900</limit> units of wrapping waste and can have <const_dir>at most</const_dir> <limit>800</limit> units of food waste as regulated by the government. How many of each combo should be pushed for by the waiting staff to <obj_dir>minimize</obj_dir> the <obj_name>cooking time</obj_name>?", "output": "min: 15 experimental_meal + 10 original_meal\nst:"}
{"input": "A metal-working shop has access to two types of <obj_name>metal-working equipment</obj_name>, a <var>chop saw</var> and a <var>steel cutter</var>. A <var>chop saw</var> can work <param>25</param> pounds of steel and generates <param>25</param> units of waste every day. A <var>steel cutter</var> can only cut <param>5</param> pounds of steel and generates <param>3</param> units of waste every day.  The metal-working shop is expecting an increase in demand and <const_dir>must cut</const_dir> <limit>520</limit> pounds of metal every day. However, there is a waste limitation due to the fines that may be in place if too much heavy metal is discarded and they may <const_dir>at most</const_dir> produce <limit>400</limit> units of waste every day. How should the metal-working shop purchase their <obj_name>metal-working equipment</obj_name> to <obj_dir>decrease</obj_dir> the total <obj_name>number of metal-working equipment</obj_name> needed?", "output": "dec: \nst:"}
{"input": "A cruise company can either have two types of trips, a <var>large cruise ship</var> or a <var>small cruise ship</var>. A <var>large cruise ship</var> trip can carry <param>2000</param> customers and produces <param>20</param> <obj_name>units of pollution</obj_name>. A <var>small cruise ship</var> trip can carry <param>800</param> customers and produces <param>15</param> <obj_name>units of pollution</obj_name>. There can be <const_dir>at most</const_dir> <limit>7</limit> <var>large cruise ship</var> trips and <const_dir>at least</const_dir> <limit>40%</limit> of the total trips must be made by <var>small cruise ships</var>. If the cruise company aims to transport <const_dir>at least</const_dir> <limit>20000</limit> customers, how many of each size of cruise ships should the company use to <obj_dir>minimize</obj_dir> the total <obj_name>amount of pollution</obj_name> produced?", "output": "min: 20 large_cruise_ship + 15 small_cruise_ship\nst: large_cruise_ship <= 7"}
{"input": "A lighting company has access to two types of lights to provide their customers, an <var>LED fixture</var>, and a <var>fluorescence lamp</var>. The <var>LED light</var> uses <param>5</param> units of electricity per hour and needs to be changed <param>3</param> <obj_name>times</obj_name> a decade. Conversely, the <var>fluorescence lamp</var> uses <param>8</param> units of electricity per hour and needs to be changed <param>4</param> <obj_name>times</obj_name> a decade. Due to previous installations, <const_dir>at least</const_dir> <limit>30%</limit> implemented lights must be <var>fluorescence lamps</var>. If the customer requires <const_dir>at least</const_dir> <limit>300</limit> light fixtures and can use <const_dir>at most</const_dir> <limit>2000</limit> units of electricity, how many of each light should be installed to <obj_dir>reduce</obj_dir> the <obj_name>total number of light changes</obj_name>?", "output": "red: 3 LED_light + 4 fluorescence_lamp\nst: LED_light + fluorescence_lamp <= 300"}
{"input": "A market owner wants to start a jam business. He can either sell <obj_name>one unit of jam</obj_name> to customers in a set of <var>small packets</var> or <var>jugs</var>. A set of <var>small packets</var> can hold <param>1000</param> ml of jam while a <var>jug</var> can hold <param>1250</param> ml of jam. Since a set of <var>small packets</var> are more expensive to make, <const_dir>at least</const_dir> <param>three times</param> as many <var>jugs</var> must be used than sets of <var>small packets</var>. On the other hand, <const_dir>at least</const_dir> <limit>35</limit> sets of <var>small packets</var> should be filled. If the market owner <const_dir>has</const_dir> <limit>65000</limit> ml of jam, how many sets of small packets or <var>jugs</var> should be selected to <obj_dir>maximize</obj_dir> the <obj_name>total number of units</obj_name> that he can sell to his customers?", "output": "max: \nst: small_packets >= 35"}
{"input": "A navy ship is stocking food onto their submarine and their staff can eat either a <var>salad</var> or <var>fruit bowl</var> for their fibre and vitamin intake. The nutritionist in charge of this voyage needs to ensure that their staff gets <const_dir>at least</const_dir> <limit>90</limit> units of vitamin and <limit>110</limit> units of fibre each. Each <var>salad</var> contains <param>7</param> units of vitamins and <param>12</param> units of fibre. Each <var>fruit bowl</var> contains <param>15</param> units of vitamin and <param>3</param> units of fibre. In addition, since <var>fruit bowls</var> take longer to prepare, <const_dir>at most</const_dir> <limit>30%</limit> of their meals should be <var>fruit bowls</var>. If each <var>salad</var> contains <param>2</param> units of <obj_name>potassium</obj_name> and each <var>fruit bowl</var> contains <param>8</param> units of <obj_name>potassium</obj_name>, how many of each should they prepare for each staff to <obj_dir>maximize</obj_dir> their <obj_name>potassium intake</obj_name>?", "output": "max: 2 salad + 8 fruit_bowl\nst:"}
{"input": "A clothing company can sell their product in two types of stores, a <var>retail store</var> and a <var>factory outlet</var>. A <var>retail store</var> brings in <param>200</param> customers every day and requires <param>6</param> employees to operate. A <var>factory outlet</var> brings in <param>80</param> customers every day and due to the lower traffic and being in more remote areas, requires <param>4</param> employees to run. Company executives decided that there must be <const_dir>at least</const_dir> <limit>1200</limit> customers every day, and can make <const_dir>available</const_dir> <limit>50</limit> employees. How should the company distribute their product to the two types of store to <obj_dir>reduce</obj_dir> the <obj_name>number of stores</obj_name> that must be open?", "output": "red: \nst:"}
{"input": "A soda company sells soda in two types of containers: <var>cans</var> and <var>glass bottles</var>. A <var>can</var> holds <param>250</param> ml of soda whereas a <var>bottle</var> holds <param>1000</param> ml of soda. The soda company needs to bottle <const_dir>at least</const_dir> <limit>1000000</limit> ml of soda every day and due to the ability to sell <var>soda cans</var> as packs, there must be <const_dir>at least</const_dir> <param>three times</param> more <var>cans</var> than <var>glass bottles</var>. However, because of previous contracts with gas stations, there must be <const_dir>at least</const_dir> <limit>100</limit> <var>glass bottles</var> made. How many of each should be made to <obj_dir>maximize</obj_dir> the total <obj_name>number of units</obj_name> produced?", "output": "max: \nst: glass_bottles >= 100"}
{"input": "A candle-making company can move their inventory of candles using <var>freight</var> and <var>air</var>. <var>Freight</var> can transport <param>5</param> tons per trip while using <var>air</var> can transport <param>3</param> tons per trip. Since <var>freight</var> take longer, the cost for each <var>freight trip</var> is $<param>300</param> while the cost over <var>air</var> for each trip is $<param>550</param>. The company needs to transport <const_dir>at least</const_dir> <limit>200</limit> tons of candles and they have a <const_dir>budget</const_dir> of $<limit>20000</limit>. Additionally, due to some urgent orders, <const_dir>at least</const_dir> <limit>30%</limit> of tons of candles must be transported through <var>air</var>. There must also be <const_dir>at least</const_dir> <limit>5</limit> trips through <var>freight</var>. How many of trip by each should be scheduled to <obj_dir>minimize</obj_dir> the total <obj_name>number of trips</obj_name>?", "output": "min: \nst: freight >= 5"}
{"input": "A production company needs to transport their equipment and staff for a movie they are shooting using <var>large mobile production units</var> or <var>small mobile production units</var>. <var>Large mobile production units</var> can hold <param>6</param> people and takes up <param>2</param> <obj_name>parking spots</obj_name> whereas <var>small mobile production units</var> can hold only <param>2</param> people and takes up <param>1</param> <obj_name>parking spot</obj_name>. Movie stars prefer to have their <var>small mobile production unit</var> to share with a close staff, therefore <const_dir>at least</const_dir> <limit>5</limit> units must be <var>small mobile units</var>. However, due to logistic limitations, <var>large mobile production units</var> are more space efficient per spot, they must make up <const_dir>at least</const_dir> <limit>75%</limit> of all vehicles. If the movie <const_dir>needs to transport</const_dir> <limit>80</limit> people, <obj_dir>minimize</obj_dir> the <obj_name>total number of parking spots</obj_name> required by this production.", "output": "min: 2 Large_mobile_production_units + 1 small_mobile_production_units\nst: small_mobile_units >= 5"}
{"input": "A mask making company ships masks to their retail stores using <var>small boxes</var> and <var>large boxes</var>. A <var>small box</var> holds <param>25</param> masks whereas a <var>large box</var> holds <param>45</param> masks. Since <var>small boxes</var> are easier to stack and will be used first to stock stores, there must be <const_dir>at least</const_dir> <param>three times</param> as many <var>small boxes</var> as <var>large boxes</var>. Additionally, <const_dir>at least</const_dir> <limit>5</limit> <var>large boxes</var> must be used. If <const_dir>at least</const_dir> <limit>750</limit> masks are required to be distributed, how many of each size of box should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of boxes</obj_name> needed?", "output": "min: \nst: large_boxes >= 5"}
{"input": "Grain is transported from a farm to local grocery stores in either <var>large bags</var> or <var>tiny bags</var>. <var>Large bags</var> can hold <param>25</param> <obj_name>kg of grain</obj_name> and requires <param>4</param> units of energy to transport. <var>Tiny bags</var> can hold <param>6</param> <obj_name>kg of grain</obj_name> and requires <param>1.5</param> units of energy to transport. The distribution process has <const_dir>access to</const_dir> <limit>110</limit> units of energy. Because of popularity of buying in bulk, there <const_dir>must be</const_dir> <param>twice</param> as many <var>large bags</var> as <var>tiny bags</var> of rice. Additionally, there must be <const_dir>at least</const_dir> <limit>20</limit> <var>tiny bags</var> of rice. How many of each size of rice bags should be used to <obj_dir>maximize</obj_dir> the total <obj_name>amount of grain</obj_name> in weight?", "output": "max: 25 Large_bags + 6 Tiny_bags\nst: tiny_bags >= 20"}
{"input": "An autobody shop needs to purchase two types of car jacks, an <var>automatic electric one</var>, or a <var>gas-powered one</var>. The <var>automatic electric one</var> can process <param>5</param> <obj_name>cars every hour</obj_name> and uses <param>6</param> units of electricity whereas the <var>gas-powered one</var> can process <param>4</param> <obj_name>cars each hour</obj_name> using <param>7</param> units of gas. Since there is a limit to how many <var>automatic electric ones</var> there can be due to the limited number of power outlets, the shop must use <const_dir>less than</const_dir> <limit>15</limit> <var>automatic electric ones</var>. The shop can use <const_dir>at most</const_dir> <limit>50</limit> units of electricity and <limit>80</limit> units of gas. How many of each type of jack should the shop purchase to <obj_dir>maximize</obj_dir> the <obj_name>amount of cars processed every hour</obj_name>?", "output": "max: 4 gas-powered_one + 5 automatic_electric_one\nst: automatic_electric_ones <= 15"}
{"input": "A railway company is planning the infrastructure for the city and is considering two types of transportation, <var>trains</var> and <var>trams</var>. Each <var>train</var> can transport <param>120</param> people per hour comfortably and each <var>tram</var> can transport <param>30</param> people per hour comfortably. Since <var>trains</var> take longer to build, the number of <var>trams</var> must be <const_dir>at least</const_dir> <param>twice</param> the number of <var>trains</var>. If the railway company wants to transport <const_dir>at least</const_dir> <limit>600</limit> people per hour, <obj_dir>minimize</obj_dir> the <obj_name>total number of transportation units</obj_name> required.", "output": "min: \nst:"}
{"input": "Platinum in combination with palladium has been used as a catalyst in cars and it changes carbon monoxide, which is toxic, into <obj_name>carbon dioxide</obj_name>. An automotive company is comparing two different catalysts, a <var>palladium-heavy catalyst</var> and a <var>platinum-heavy catalyst</var>. The process with a <var>palladium-heavy catalyst</var> requires <param>15</param> units of platinum and <param>25</param> units of palladium and can perform the conversion to carbon dioxide at a rate of <param>5</param> <obj_name>units per second</obj_name>. A <var>platinum-heavy catalyst</var> requires <param>20</param> units of platinum and <param>14</param> units of palladium and converts to carbon dioxide at a rate of <param>4</param> <obj_name>units per second</obj_name>. There are <limit>450</limit> units of platinum and <limit>390</limit> units of palladium <const_dir>available</const_dir>. How many of each catalyst should be used to <obj_dir>maximize</obj_dir> the <obj_name>amount converted into carbon dioxide</obj_name>?", "output": "max: 5 palladium-heavy_catalyst + 4 platinum-heavy_catalyst\nst:"}
{"input": "There are two ways to extract a metal from mined ores. The first way is to use <var>process J</var> and the second is <var>process P.</var> <var>Process J</var> can extract <param>5</param> units of <obj_name>metal</obj_name> using <param>8</param> units of water and produces <param>3</param> units of pollution. <var>Process P</var> can extract <param>9</param> units of <obj_name>metal</obj_name> using <param>6</param> units of water and produces <param>5</param> units of pollution. There can be <const_dir>at most</const_dir> <limit>1500</limit> units of water <limit>1350</limit> units of pollution. How many of each type of processes should be performed to <obj_dir>maximize</obj_dir> the <obj_name>amount of metal</obj_name> extracted?", "output": "max: 5 Process_J + 9 Process_P\nst:"}
{"input": "An airport can either install <var>escalators</var> or <var>elevators</var>. <var>Escalators</var> can transport <param>20</param> people every minute whereas <var>elevators</var> can transport <param>8</param> people every minute. <var>Escalators</var> take up <param>5</param> <obj_name>units of space</obj_name> while <var>elevators</var> take <param>2</param> <obj_name>units of space</obj_name>. The airport needs to have enough capacity to transport <const_dir>at least</const_dir> <limit>400</limit> people every minute. Additionally, there must be <const_dir>at least</const_dir> <limit>three</limit> times more <var>escalators</var> than <var>elevators</var> and <const_dir>at least</const_dir> <limit>2</limit> <var>elevators</var> must be used. How many of each type should the airport install to <obj_dir>minimize</obj_dir> the <obj_name>total units of space taken</obj_name>?", "output": "min: 2 elevators + 5 Escalators\nst: elevators >= 2"}
{"input": "A research group is making fabric and plastic using two methods, <var>method A</var> and <var>method B.</var> <var>Method A</var> produces <param>25</param> units of fabric and <param>14</param> units of plastic per <obj_name>hour</obj_name>. <var>Method B</var> produces <param>45</param> units of fabric and <param>25</param> units of plastic per <obj_name>hour</obj_name>. <var>Method A</var> requires <param>60</param> units of a special element while <var>method B</var> requires <param>65</param> units of the same special element. The research group has <const_dir>available</const_dir> <limit>3500</limit> units of the special element and must make <const_dir>at least</const_dir> <limit>1400</limit> units of fabric and <limit>1000</limit> units of plastic. How many of each method should be executed to <obj_dir>minimize</obj_dir> the total <obj_name>time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A taxi company will purchase vehicles to rent to their drivers. They are interested in purchasing either <var>motorcycles</var> or <var>sedans</var>. A <var>motorcycle</var> can transport <param>30</param> people, produces <param>4</param> units of pollution, and <obj_name>earns</obj_name> the taxi company $<param>100</param> per shift. A <var>sedan</var> can transport <param>70</param> people, produces <param>15</param> units of pollution and <obj_name>earns</obj_name> the company $<param>225</param> per shift. Because not every customer is comfortable with a <var>motorcycle</var>, <const_dir>at most</const_dir> <limit>25%</limit> of vehicles can be <var>motorcycles</var>. Additionally, the company has committed to producing <const_dir>less than</const_dir> <limit>200</limit> units of pollution. The company needs to transport <const_dir>at least</const_dir> <limit>1200</limit> people every shift. How many of each type of vehicle should be used to <obj_dir>maximize</obj_dir> the <obj_name>total earnings</obj_name> for the taxi company per shift?", "output": "max: 100 motorcycle + 225 sedan\nst:"}
{"input": "Due to an accident, <const_dir>at least</const_dir> <limit>550</limit> locals must be moved across a lake. They can either be transported over the lake by a <var>kayak</var> or a <var>motorboat</var>. <var>Kayaks</var> can transport <param>4</param> people every trip and <var>motorboats</var> can transport <param>5</param> people every trip. <var>Kayaks</var> take <param>5</param> <obj_name>minutes per trip</obj_name> whereas <var>motorboats</var> take <param>3</param> <obj_name>minutes per trip</obj_name>. Due to the limited number of <var>motorboats</var> available to the locals, there can be <const_dir>at most</const_dir> <limit>25</limit> <var>motorboat</var> trips and <const_dir>at least</const_dir> <limit>75%</limit> of the trips should be by <var>kayak</var>. How many of each transportation method should be used to <obj_dir>minimize</obj_dir> the total <obj_name>amount of time</obj_name> needed to transport all the locals?", "output": "min: 5 Kayaks + 3 motorboats\nst: motorboat <= 25"}
{"input": "A drop-in clinic is performing a <obj_name>test</obj_name> either through the <var>ear</var> or <var>blood</var>. A <var>blood test</var> takes <param>30</param> minutes to perform while an <var>ear test</var> takes <param>5</param> minutes to perform. Since the <var>blood test</var> is more accurate, <const_dir>at least</const_dir> <param>three times</param> as many <var>blood tests</var> should be performed as <var>ear tests</var>. However, <const_dir>at least</const_dir> <limit>12</limit> <var>ear tests</var> must be administered. If the drop-in clinic <const_dir>operates</const_dir> for <limit>7525</limit> minutes, <obj_dir>maximize</obj_dir> the <obj_name>number of tests</obj_name> that can be performed.", "output": "max: \nst: ear_tests >= 12"}
{"input": "A researcher is outsourcing annotations and has two options: a <var>specialized third-party</var> or a <var>common third-party annotation company</var>. The <var>specialized company</var> can annotate at a rate of <param>60</param> images per hour whereas the <var>common company</var> can annotate at a rate of <param>40</param> images per hour. However, the <var>specialized company</var> charges $<param>100</param> <obj_name>per hour</obj_name> and the <var>common company</var> charges $<param>72</param> <obj_name>per hour</obj_name>. The researcher has deadlines to meet and must complete a dataset of <const_dir>at least</const_dir> <limit>10,000</limit> images. They also have some special images that only the <var>specialized company</var> can annotate. Therefore, <const_dir>at least</const_dir> a <limit>third</limit> of work must be allocated to the <var>specialized company</var>. How should the researcher distribute the annotations to the two companies to <obj_dir>minimize</obj_dir> the <obj_name>cost of annotating the whole dataset</obj_name>?", "output": "min: 100 specialized_company + 72 common_company\nst: specialized_company >= third"}
{"input": "A golf course is hosting an event and can transport guests using either <var>golf carts</var> or <var>pull carts</var>. A <var>golf cart</var> can take <param>4</param> guests while a <var>pull cart</var> can take <param>1</param> guest. Since <var>golf carts</var> take up a lot of space, <const_dir>at most</const_dir> <limit>60</limit>% of carts can be <var>golf carts</var>. If the golf course needs to transport <const_dir>at least</const_dir> <limit>80</limit> guests, how many of each cart should be used to <obj_dir>minimize</obj_dir> the total <obj_name>number of carts</obj_name> needed?", "output": "min: \nst:"}
{"input": "A smoothie shop has a promotion for their two smoothies; an <var>acai berry smoothie</var> and a <var>banana chocolate smoothie</var>. It takes <param>7</param> units of acai berries and <param>3</param> units of <obj_name>water</obj_name> to make the <var>acai berry smoothie</var>. It takes <param>6</param> units of banana chocolate and <param>4</param> units of <obj_name>water</obj_name> to make the <var>banana chocolate smoothie</var>. <var>Banana chocolate smoothies</var> are more popular and thus the number of <var>banana chocolate</var> smoothies made must be <const_dir>more than</const_dir> the number of <var>acai berry smoothies</var> made. However, the <var>acai berry smoothies</var> have a loyal customer base, and <const_dir>at least</const_dir> <limit>35%</limit> of the smoothies made must be <var>acai berry smoothies</var>. If the smoothie shop <const_dir>has</const_dir> <limit>3500</limit> units of acai berries and <limit>3200</limit> units of banana chocolate, to <obj_dir>reduce</obj_dir> the total <obj_name>amount of water</obj_name>, how many of each smoothie type should be made?", "output": "red: 3 acai_berry_smoothie + 4 banana_chocolate_smoothie\nst:"}
{"input": "A handmade sports equipment manufacturing company makes <var>basketballs</var> and <var>footballs</var>. <var>Basketballs</var> require <param>5</param> units of materials and <param>1</param> hour to make whereas <var>footballs</var> require <param>3</param> units of materials and <param>2</param> hours to make. The manufacturing company has <const_dir>available</const_dir> <limit>1500</limit> units of materials and their workers working at max capacity can work for <const_dir>at most</const_dir> <limit>750</limit> hours. Since <var>basketballs</var> sell better, there must be <const_dir>at least</const_dir> <param>three times</param> as many <var>basketballs</var> as <var>footballs</var> but the manufacturing company would like <const_dir>at least</const_dir> <limit>50</limit> <var>footballs</var>. How many of each should the manufacturing company make to <obj_dir>maximize</obj_dir> the <obj_name>total number of sports equipment produced</obj_name>?", "output": "max: \nst: footballs >= 50"}
{"input": "A researcher must perform two types of experiments, <var>in-vivo</var> and <var>ex-vivo</var>. <var>In-vivo experiments</var> requires <param>30</param> minutes to prepare and <param>60</param> minutes to execute. <var>Ex-vivo experiments</var> require <param>45</param> minutes to prepare and <param>30</param> minutes to execute. In addition, <var>in-vivo experiments</var> gives the researcher <param>2</param> units of <obj_name>radiation</obj_name> while <var>ex-vivo experiments</var> give the researcher <param>3</param> unites of <obj_name>radiation</obj_name>. <const_dir>At most</const_dir> <limit>400</limit> minutes can be used for preparation and <limit>500</limit> minutes for execution of the experiment. How many of each experiment should be scheduled by the researcher to <obj_dir>minimize</obj_dir> the <obj_name>total radiation</obj_name> received by the researcher?", "output": "min: 2 in-vivo_experiments + 3 ex-vivo_experiments\nst:"}
{"input": "A village delivers mail to nearby villages either by <var>runners</var> or <var>canoers</var>. <var>Runners</var> can carry <param>three</param> <obj_name>bags of mail</obj_name> each time and takes <param>4</param> hours. <var>Canoers</var> can carry <param>ten</param> <obj_name>bags of mail</obj_name> each time and takes <param>2</param> hours. <const_dir>At most</const_dir> <limit>33%</limit> of deliveries can be by <var>canoe</var>. Additionally, the village can spare <const_dir>at most</const_dir> <limit>200</limit> total hours and <const_dir>at least</const_dir> <limit>4</limit> <var>runners</var> must be used. How many of each way to deliver must be used to <obj_dir>maximize</obj_dir> the total <obj_name>amount of mail</obj_name> that can be delivered?", "output": "max: ten Canoers + three Runners\nst: runners >= 4"}
{"input": "A woman on a diet needs to eat two types of meal preps, a <var>smoothie</var> and a <var>protein bar</var>. Each <var>smoothie</var> contains <param>2</param> units of <obj_name>protein</obj_name> and <param>300</param> calories. Each <var>protein bar</var> contains <param>7</param> units of <obj_name>protein</obj_name> and <param>250</param> calories. The woman must eat <param>2 times</param> <const_dir>more</const_dir> <var>protein bars</var> than <var>smoothies</var>. If the woman can consume <const_dir>at most</const_dir> <limit>2000</limit> calories, how many of each should she eat or drink to <obj_dir>maximize</obj_dir> her <obj_name>protein intake</obj_name>?", "output": "max: 2 smoothie + 7 protein_bar\nst:"}
{"input": "A clinical firm has two factories, a <var>northern factory</var> and a <var>western factory</var>, where they make expensive anti-itch injections and topical cream. Every <obj_name>hour</obj_name>, the <var>northern factory</var> makes <param>800</param> g of anti-itch injections and <param>700</param> g of topical cream. Every <obj_name>hour</obj_name>, the <var>western factory</var> makes <param>650</param> g of anti-itch injections and <param>750</param> g of topical cream. The <var>northern factory</var> requires <param>40</param> units of plastic per <obj_name>hour</obj_name> while the <var>western factory</var> requires <param>35</param> units of plastic to manufacture the packaging. The clinical firm has <const_dir>available</const_dir> <limit>60,000</limit> units of plastic. Further, they must make <const_dir>at least</const_dir> <limit>800,000</limit> g of anti-itch injections and <limit>700,000</limit> g of topical cream. How many <obj_name>hours</obj_name> should each factory be run to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> needed?", "output": "min: \nst:"}
{"input": "A hospital prepares batches of <var>medication patches</var> and <var>anti-biotic creams</var>. Each <var>medication patch</var> requires <param>3</param> minutes to prepare and <param>5</param> units of materials. Each <var>anti-biotic cream</var> requires <param>5</param> minutes to prepare and <param>6</param> units of materials. Since <var>anti-biotic creams</var> are used more often, there must be <const_dir>at least</const_dir> <param>twice</param> as many <var>anti-biotic creams</var> as <var>medication patches</var>. Due to storage reasons, the hospital can make <const_dir>at most</const_dir> <limit>100</limit> batches of <var>medication patches</var> and <var>anti-biotic creams</var> in total. The hospital has <const_dir>available</const_dir> <limit>400</limit> minutes of staff to spare and <limit>530</limit> units of materials. If each batch of <var>medication patches</var> can treat <param>3</param> <obj_name>people</obj_name> and each batch of <var>anti-biotic cream</var> can treat <param>2</param> <obj_name>people</obj_name>, how many batches of each should be made to <obj_dir>maximize</obj_dir> the <obj_name>number of people</obj_name> that can be treated?", "output": "max: 3 medication_patches + 2 anti-biotic_cream\nst: medication_patches + anti-biotic_cream <= 100"}
{"input": "A company in the desert can transport goods to rural cities either by <var>camel caravans</var> or <var>desert trucks</var>. A <var>camel caravan</var> can deliver <param>50</param> units of goods per trip and takes <param>12</param> <obj_name>hours</obj_name>. A <var>desert truck</var> can deliver <param>150</param> units of goods per trip and takes <param>5</param> <obj_name>hours</obj_name>. However, due to the cost of fuel, the company prefers to have <const_dir>more</const_dir> <var>camel caravans</var> than <var>desert trucks</var>.  If the company <const_dir>needs to deliver</const_dir> <limit>1500</limit> units of goods, how many of each method of transportation should the company organize to <obj_dir>minimize</obj_dir> the <obj_name>total number of hours</obj_name> required?", "output": "min: 12 camel_caravan + 5 desert_truck\nst:"}
{"input": "A biotechnology company has <limit>35,000</limit> units of antibiotics <const_dir>available</const_dir> which is important to the process of making a <var>first-dose</var> and <var>second-dose</var> of vaccines. The <var>first-dose vaccine</var> requires <param>30</param> units of antibiotics and <param>20</param> mg of <obj_name>gelatine</obj_name> whereas the <var>second-dose vaccine</var> requires <param>65</param> units of antibiotics and <param>60</param> mg of <obj_name>gelatine</obj_name>. Since the <var>first-dose vaccine</var> is required before the <var>second-dose vaccine</var>, there must be <const_dir>more</const_dir> <var>first-dose</var> than <var>second-dose vaccines</var> manufactured. However, <const_dir>at least</const_dir> <limit>40</limit> <var>second-dose vaccines</var> must be made. How many of each vaccine should be made to <obj_dir>minimize</obj_dir> the <obj_name>amount of gelatine</obj_name> used?", "output": "min: 20 first-dose_vaccine + 60 second-dose_vaccine\nst: second-dose_vaccines >= 40"}
{"input": "Both <var>chemical A</var> and <var>chemical B</var> need to be added to a mixer for making bread. One unit of <var>chemical A</var> takes <param>30</param> <obj_name>seconds</obj_name> to be effective while one unit of <var>chemical B</var> takes <param>45</param> <obj_name>seconds</obj_name> to be effective. Because <var>chemical A</var> can be dangerous, there has to be <const_dir>at most</const_dir> a <param>third</param> as much <var>chemical A</var> as <var>chemical B</var> in the mixer. If there has to be <const_dir>at least</const_dir> <limit>300</limit> units of <var>chemical A</var> in the mixer and <const_dir>at least</const_dir> <limit>1500</limit> units of total chemicals in the mixer, how many units of each should be added to <obj_dir>minimize</obj_dir> the <obj_name>total time</obj_name> it takes for the mixed bread to be ready?", "output": "min: 30 chemical_A + 45 chemical_B\nst: chemical_A >= 300\nchemical_A + chemical_B <= 1500"}
{"input": "A senior home has snacks of <var>spinach</var> and <var>soybeans</var> to increase their intake of iron. A cup of <var>spinach</var> contains <param>100</param> units of fibre and <param>5</param> mg of iron. A cup of <var>soybeans</var> contains <param>80</param> units of fibre and <param>12</param> mg of iron. Due to other nutritional requirements, the nurses decided that the number of cups of <var>spinach</var> <const_dir>must exceed</const_dir> the number of cups of <var>soybeans</var>. Furthermore, a cup of <var>spinach</var> contains <param>30</param> <obj_name>calories</obj_name> while a cup of <var>soybeans</var> contains <param>100</param> <obj_name>calories</obj_name>. If they schedule that the elderly need in total <const_dir>at least</const_dir> <limit>12000</limit> units of fibre and <limit>300</limit> mg of iron, how many cups of each should the nurses schedule to <obj_dir>maximize</obj_dir> the seniors\u2019 total <obj_name>caloric intake</obj_name>?", "output": "max: 30 spinach + 100 soybeans\nst:"}
{"input": "A keyboard manufacturer makes <var>mechanical</var> and <var>standard keyboards</var>. <var>Mechanical keyboards</var> are becoming more popular and thus the manufacturer <const_dir>aims to have</const_dir> <param>five times</param> as many <var>mechanical</var> than <var>standard keyboards</var>. A <var>mechanical keyboard</var> costs <param>five</param> units of plastic and <param>two</param> units of solder whereas a <var>standard keyboard</var> costs <param>two</param> units of plastic and <param>one</param> unit of solder. There are still customers that prefer a less noisy alternative. Therefore, there must be <const_dir>at least</const_dir> <limit>30</limit> <var>standard keyboards</var>. If the company has <const_dir>available</const_dir> <limit>1000</limit> units of plastic and <limit>250</limit> units of solder, how many of each type should be manufactured to <obj_dir>maximize</obj_dir> the total <obj_name>number of keyboards</obj_name>?", "output": "max: \nst: standard_keyboards >= 30"}
{"input": "A tourism company can buy <var>sedans</var> or <var>buses</var> to add to their fleet of <obj_name>vehicles</obj_name> to increase their capacity for more tourists. A <var>sedan</var> can seat <param>50</param> tourists per day but results in <param>10</param> units of pollution. A <var>bus</var> can seat <param>250</param> tourists per day but results in <param>40</param> units of pollution. The city has limited this tourism company to producing <const_dir>at most</const_dir> <limit>800</limit> units of pollutants per day. To make a profit, this tourism company must take care of <const_dir>at least</const_dir> <limit>4600</limit> customers per day. Planning to make a profit, how many <var>sedans</var> and how many <var>buses</var> should this tourism company purchase to <obj_dir>decrease</obj_dir> the <obj_name>total number of vehicles</obj_name> needed?", "output": "dec: \nst:"}
{"input": "A dessert shop is popular for their only two desserts - <var>matcha ice cream</var> and <var>orange sorbet</var>. <param>Two</param> units of <obj_name>flavouring</obj_name> and <param>four</param> units of ice cream is required to make one order of <var>matcha ice cream</var>. <param>Four</param> units of <obj_name>flavouring</obj_name> and <param>three</param> units of water is required to make an order of <var>orange sorbet</var>. The dessert shop has recently been getting more orders online for <var>orange sorbet</var> and therefore, there should be <const_dir>more</const_dir> <var>orange sorbet</var> made than <var>matcha ice cream</var>. However, <const_dir>at least</const_dir> <limit>fifteen percent</limit> of desserts made must be <var>matcha ice cream</var>. The dessert shop has <const_dir>available</const_dir> <limit>600</limit> units of ice cream and <limit>550</limit> units of water. How many of each dessert should the shop make to <obj_dir>minimize</obj_dir> the <obj_name>total amount of flavouring needed</obj_name>?", "output": "min: Two matcha_ice_cream + Four orange_sorbet\nst:"}
{"input": "A daycare center has children they must pick up and can use two types of vehicles: <var>bus</var> or a <var>personal car</var>. A <var>bus</var> can carry <param>9</param> children while a <var>personal car</var> can carry <param>4</param> children. The daycare has to pick up <const_dir>at least</const_dir> <limit>100</limit> children. Additionally, due to limitations of pollution, there <const_dir>must be more</const_dir> <var>buses</var> than <var>personal cars</var>. But some children require extra attention. Therefore, there must be <const_dir>at least</const_dir> <limit>5</limit> <var>personal cars</var>. How many of each form of transportation should the daycare center schedule for to <obj_dir>minimize</obj_dir> the <obj_name>total number of vehicles</obj_name>?", "output": "min: \nst: personal_cars >= 5"}
{"input": "Both <var>coconut oil</var> and <var>lavender</var> need to be added to a body wash. One unit of <var>coconut oil</var> takes <param>0.7</param> <obj_name>minutes</obj_name> to be effective while one unit of <var>lavender</var> takes <param>0.9</param> <obj_name>minutes</obj_name> to be effective. The body wash must contain <const_dir>at least</const_dir> <limit>300</limit> units of <var>coconut oil</var> and <const_dir>at most</const_dir> <limit>550</limit> units of both ingredients. Since too much <var>coconut oil</var> can make the body wash too oily, there can be <const_dir>at most</const_dir> <param>thrice</param> the amount of <var>coconut oil</var> as <var>lavenders</var> in the body wash. How many units of each should be added to the body wash to <obj_dir>minimize</obj_dir> the <obj_name>total amount of time</obj_name> it takes for the mixture to be effective? (Note: one must be added before the other)", "output": "min: 0.7 coconut_oil + 0.9 lavender\nst: coconut_oil >= 300\ncoconut_oil + lavender <= 550"}
{"input": "A chemical company uses two tests, a <var>salinity test</var> and a <var>pH test</var>. Each unit of the <var>salinity test</var> requires <param>three</param> <obj_name>probes</obj_name>. Whereas each unit of the <var>pH test</var> requires <param>two</param> <obj_name>probes</obj_name>. The chemical company must perform <const_dir>at least</const_dir> <limit>250</limit> <var>pH tests</var>. In total, <const_dir>at least</const_dir> <limit>400</limit> tests must be performed. Further, because of the importance of the <var>salinity test</var>, there must be <const_dir>at most</const_dir> <param>1.5 times</param> more <var>pH tests</var> than <var>salinity tests</var>. How many times should each test be performed to <obj_dir>minimize</obj_dir> the total <obj_name>number of probes</obj_name> used?", "output": "min: three salinity_test + two pH_test\nst: pH_tests >= 250\nsalinity_test + pH_test <= 400"}
{"input": "A municipality hires <var>full-time and</var> <var>part-time staff</var> to deliver mail. <var>Part-time staff</var> works <param>15</param> hours per week and gets paid <param>450</param> dollars whereas a <var>full-time staff</var> works <param>40</param> hours every week and gets paid <param>1280</param> dollars  for that week.  Since it is the week leading up to a holiday, planning ahead, the municipality <const_dir>needs</const_dir> <limit>1000</limit> hours of mail staff labor. The municipality has a <const_dir>budget</const_dir> of <limit>31500</limit> dollars for mail delivery for this season. How many of each type of <obj_name>staff</obj_name> should the municipality hire to <obj_dir>decrease</obj_dir> the total <obj_name>number of staff</obj_name>?", "output": "dec: \nst:"}
{"input": "A landscaper <const_dir>has</const_dir> <limit>2500</limit> square feet of grass land in a customer\u2019s backyard where they need to cut grass using either a <var>heavy-duty yard machine</var> or a <var>gas lawn mower</var>. For each square foot of land, the <var>heavy-duty yard machine</var> requires <param>2</param> <obj_name>seconds</obj_name> while the <var>gas lawn mower</var> takes <param>5</param> <obj_name>seconds</obj_name>. Per square foot, the <var>heavy-duty yard machine</var> produces <param>12</param> units of pollution and requires <param>3</param> units of fuel. Conversely, the <var>gas lawn mower</var> generates <param>10</param> units of pollution for each square foot and requires <param>2</param> units of fuel. There are <limit>450</limit> units of fuel <const_dir>available</const_dir> and the landscaper can produce <const_dir>no more than</const_dir> <limit>2000</limit> units of pollution. For how many square feet should each machine be used to <obj_dir>minimize</obj_dir> the <obj_name>time required</obj_name> to cut this customer\u2019s backyard?", "output": "min: 5 gas_lawn_mower + 2 heavy-duty_yard_machine\nst: gas_lawn_mower + heavy-duty_yard_machine <= 2500"}
{"input": "A park is designing their trails and can either create a <var>wide trail</var> or a <var>narrow trail</var>. A <var>wide trail</var> can take <param>50</param> visitors every day while the <var>narrow trail</var> expects <param>20</param> visitors every day. The <var>wide trail</var> will introduce <param>6</param> <obj_name>units of garbage</obj_name> and the <var>narrow trail</var> will introduce <param>3</param> <obj_name>units of garbage</obj_name>. There can be <const_dir>at most</const_dir> <limit>3</limit> <var>wide trails</var> and the park hopes to have <const_dir>at most</const_dir> <limit>225</limit> visitors every day. How many of each type of trail should the park construct to <obj_dir>minimize</obj_dir> the <obj_name>total amount of garbage</obj_name> produced.", "output": "min: 6 wide_trail + 3 narrow_trail\nst: wide_trails <= 3"}
{"input": "A brewery can ferment their product into either <var>wine</var> or <var>kombucha</var>. Each unit of <var>wine</var> requires <param>3</param> <obj_name>units of fruit</obj_name> and <param>8</param> units of water. Each unit of <var>kombucha</var> requires <param>5</param> <obj_name>units of fruit</obj_name> and <param>7</param> units of tea. The company has <const_dir>available</const_dir> <limit>7000</limit> units of water and <limit>9000</limit> units of tea. <var>Wine</var> sells for more, therefore the number of <var>wine</var> must be <const_dir>larger than</const_dir> the number of <var>kombucha</var>. Additionally, <const_dir>at least</const_dir> <limit>20%</limit> of their products made must be <var>kombucha</var>. How many of each should the brewery make to <obj_dir>minimize</obj_dir> the <obj_name>total units of fruit required</obj_name>?", "output": "min: 3 wine + 5 kombucha\nst:"}
{"input": "A hospital can transport their patients either using a <var>type II ambulance</var> or <var>hospital van</var>. The hospital <const_dir>needs to transport</const_dir> <limit>320</limit> patients every day. A <var>type II ambulance</var> is mounted on a truck-style chassis and can move <param>20</param> patients every shift and <obj_name>costs</obj_name> the hospital (including gas and salary) $<param>820</param>. A <var>hospital van</var> can move <param>15</param> patients and <obj_name>costs</obj_name> the hospital $<param>550</param> every shift. The hospital can have <const_dir>at most</const_dir> <limit>60%</limit> of shifts be <var>hospital vans</var> due to union limitations of the <var>type II ambulance</var> drivers. How many of shift using each type of vehicle should be scheduled to <obj_dir>minimize</obj_dir> the <obj_name>total cost</obj_name> to the hospital?", "output": "min: 820 type_II_ambulance + 550 hospital_van\nst:"}
{"input": "An incandescent bulb manufacturing company uses either an <var>argon gas approach</var> or <var>halogen gas approach</var> to fill their <obj_name>light bulbs</obj_name>. The <var>argon gas approach</var> uses <param>10</param> units of gas and <param>12</param> units of glass to make <param>2</param> <obj_name>light bulbs</obj_name>. The <var>halogen gas approach</var> uses <param>12</param> units of gas and <param>8</param> units of glass to make <param>3</param> <obj_name>light bulbs</obj_name>. Additionally, the <var>argon gas approach</var> generates <param>3</param> units of heat while the <var>halogen gas approach</var> creates <param>4</param> units of heat. The manufacturing company has <const_dir>available</const_dir> <limit>150</limit> units of gas and <limit>120</limit> units of glass. If <const_dir>at most</const_dir> <limit>28</limit> units of heat can be generated during the manufacturing process, how many of each method should be used to <obj_dir>maximize</obj_dir> the <obj_name>number of light bulbs</obj_name> produced?", "output": "max: 2 argon_gas_approach + 3 halogen_gas_approach\nst:"}
