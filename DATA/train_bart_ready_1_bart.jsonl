{"input": "You are playing a game where a <var>short shot</var> is worth <param>2</param> <obj_name>points</obj_name> and a <var>long shot</var> is worth <param>5</param> <obj_name>points</obj_name>. In total, you can take <const_dir>at most</const_dir> <limit>14</limit> shots. You must take <const_dir>at least</const_dir> <limit>5</limit> <var>short shots</var> and <limit>2</limit> <var>long shots</var>, but time restricts taking <const_dir>more than</const_dir> <limit>8</limit> of either type. How many of each shot must you take, assuming all your shots get points, to <obj_dir>maximize</obj_dir> your <obj_name>score</obj_name>? What is your maximum score?", "output": "max: 2 short_shot + 5 long_shot\nst: short_shot + long_shot <= 14\n     short_shots >= 5\n     long_shots >= 2\n     short_shots <= 8\n     long_shots <= 8"}
{"input": "A hot dog store sells two products: its <var>regular hot-dog</var>, and a <var>premium hot-dog</var> with more toppings. The store makes x1 <var>regular hot-dogs</var> a day at a <obj_name>profit</obj_name> of $<param>3</param> each and x2 <var>premium hot-dogs</var> a day at a <obj_name>profit</obj_name> of $<param>5</param> each. (x1 and x2 are unknowns and they both must be greater than or equal to 0). Currently, the demand is limited to <const_dir>at most</const_dir> <limit>100</limit> <var>regular hot-dogs</var> per day and <const_dir>at most</const_dir> <limit>250</limit> <var>premium hot-dogs</var> per day. Also, the store can make a <const_dir>maximum</const_dir> of <limit>300</limit> hot-dogs of either type per day. How many of each hot-dog should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 regular_hot-dogs + 5 premium_hot-dogs\nst: regular_hot-dogs <= 100\n     regular_hot-dogs + premium_hot-dogs <= 300\n     premium_hot-dogs <= 250"}
{"input": "A jacket company makes <var>winter jackets</var> and <var>rain jackets</var>. Due to factory limitations, <const_dir>at most</const_dir> <limit>60</limit> <var>winter jackets</var> and <limit>70</limit> <var>rain jackets</var> can be made daily. Projections indicate a demand of <const_dir>at least</const_dir> <limit>30</limit> <var>winter jackets</var> and <limit>35</limit> <var>rain jackets</var> daily. To satisfy a contract with a retail store, a total of <const_dir>at least</const_dir> <limit>80</limit> jackets must be made daily. Because the factory wants to get rid of material, each <var>winter jacket</var> sold results in a $<param>5</param> <obj_name>loss</obj_name>. However, each <var>rain jacket</var> sold results in a $<param>50</param> <obj_name>profit</obj_name>. How many of each type of jacket should be made daily to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 winter_jacket + 50 rain_jacket\nst: winter_jackets <= 60\n     rain_jackets <= 70\n     winter_jackets >= 30\n     rain_jackets >= 35\n     winter_jacket + rain_jacket <= 80"}
{"input": "A bubble tea store sells <var>peach</var> and <var>mango</var> flavored drinks. The store can make <const_dir>at most</const_dir> <limit>150</limit> drinks total. To stay in business, they must sell <const_dir>at least</const_dir> <limit>60</limit> <var>mango drinks</var> and <limit>40</limit> <var>peach drinks</var>. Due to fruit shortages however, they can make <const_dir>at most</const_dir> <limit>120</limit> <var>mango drinks</var> and <const_dir>at most</const_dir> <limit>70</limit> <var>peach drinks</var>. The <obj_name>profit</obj_name> per <var>mango drink</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>peach drink</var> is $<param>3</param>. How many of each drink should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 mango_drink + 3 peach_drink\nst: mango_drink + peach_drink <= 150\n     mango_drinks >= 60\n     mango_drinks <= 120\n     peach_drinks >= 40\n     peach_drinks <= 70"}
{"input": "A luggage company makes <var>carry-on</var> and <var>large suitcases</var> in their factory. A different team produces each kind of suitcase and each team has a different <const_dir>maximum</const_dir> production rate: <limit>15</limit> <var>carry-on suitcases</var> per day and <limit>20</limit> <var>large suitcases</var> per day respectively. Both teams require use of a sewing machine and this machine can process <const_dir>at most</const_dir> <limit>25</limit> suitcases per day of either type. While the <var>carry-on suitcases</var> generate a <obj_name>profit</obj_name> of $<param>100</param> per suitcase, the <var>large suitcases</var> generate a <obj_name>profit</obj_name> of $<param>150</param> per suitcase. Assuming the company can sell all the suitcases they make, how many of each type of suitcase should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 carry-on_suitcases + 150 large_suitcases\nst: carry-on_suitcases <= 15\n     large_suitcases <= 20\n     carry-on_suitcases + large_suitcases <= 25"}
{"input": "A banana farmer has to transport his bananas using <var>cars</var> and <var>motor bikes</var>. Each <var>car</var> can take <param>100</param> <obj_name>bananas</obj_name> and each <var>bike</var> can take <param>30</param> <obj_name>bananas</obj_name>. The cost of running each <var>car</var> is $<param>10</param> per trip and the cost of running each <var>bike</var> is $<param>6</param> per trip. The farmer wants to spend <const_dir>at most</const_dir> $<limit>200</limit> on transporting his bananas. Due to traffic laws, the number of <var>cars</var> must be <const_dir>less than</const_dir> the number of <var>bikes</var>. Formulate a LP to <obj_dir>maximize</obj_dir> the number of <obj_name>bananas</obj_name> that can be transported.", "output": "max: 100 car + 30 bike\nst: 10 car + 6 bike <= 200\n     cars <= bikes"}
{"input": "A keyboard factory makes <var>regular</var> and <var>mechanical keyboards</var>. Projections indicate a demand of <const_dir>at least</const_dir> <limit>165</limit> <var>regular keyboards</var> and <limit>70</limit> <var>mechanical keyboards</var> each day. Because of the manual labor involved, <const_dir>at most</const_dir> <limit>300</limit> <var>regular keyboards</var> and <limit>150</limit> <var>mechanical keyboards</var> can be made each day. To satisfy a contract with an electronics shop, <const_dir>at least</const_dir> <limit>250</limit> keyboards of either type must be made each day. The factory makes a <obj_name>profit</obj_name> of $<param>30</param> per <var>regular keyboard</var> and $<param>60</param> per <var>mechanical keyboard</var>. How many of each keyboard should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 regular_keyboard + 60 mechanical_keyboard\nst: regular_keyboards >= 165\n     mechanical_keyboards >= 70\n     regular_keyboards <= 300\n     mechanical_keyboards <= 150\n     regular_keyboard + mechanical_keyboard <= 250"}
{"input": "A wine company sells two products. Its <var>regular wine</var> and a <var>premium aged wine</var>. The company makes x1 bottles of the <var>regular wine</var> per day and x2 bottled of the <var>premium wine</var> per day (x1 and x2 are unknown values greater than or equal to 0). The <obj_name>profit</obj_name> per bottle of <var>regular wine</var> is $<param>20</param> ad the <obj_name>profit</obj_name> per bottle of the <var>premium wine</var> is $<param>50</param>. Current demand for the wine is <const_dir>at most</const_dir> <limit>80</limit> bottles of the <var>regular wine</var> per day and <const_dir>at most</const_dir> <limit>50</limit> bottles of the <var>premium wine</var> per day. The company <const_dir>only</const_dir> has enough supply to make <limit>120</limit> bottles of either type each day. How many bottles of each wine, <var>regular</var> and <var>premium</var>, should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 regular_wine + 50 premium_wine\nst: regular_wine <= 80\n     premium_wine <= 50\n     regular_wine + premium_wine <= 120"}
{"input": "You are playing a game where you have to throw a ball at a target. Throwing a <var>small ball</var> is worth <param>5</param> <obj_name>points</obj_name> and throwing a <var>large ball</var> is worth <param>2</param> <obj_name>points</obj_name>. You can throw <const_dir>at most</const_dir> <limit>20</limit> balls total. You must also throw <const_dir>at least</const_dir> <limit>6</limit> <var>small balls</var> and <limit>5</limit> <var>large balls</var>. You cannot throw <const_dir>more than</const_dir> <limit>12</limit> of either type. Assuming you always hit the target, how many balls of each type should you throw to <obj_dir>maximize</obj_dir> your <obj_name>score</obj_name>? What is that score?", "output": "max: 5 small_ball + 2 large_ball\nst: small_ball + large_ball <= 20\n     small_balls >= 6\n     large_balls >= 5\n     small_balls <= 12\n     large_balls <= 12"}
{"input": "You decide to take part in a math contest with <var>algebra questions</var> worth <param>1</param> <obj_name>point</obj_name> each and <var>calculus questions</var> worth <param>3</param> <obj_name>points</obj_name> each. In this contest, you can answer <const_dir>at most</const_dir> <limit>25</limit> questions. In addition, you must answer <const_dir>at least</const_dir> <limit>10</limit> <var>algebra questions</var> and <const_dir>at least</const_dir> <limit>6</limit> <var>calculus questions</var>. Time restricts you from answering <const_dir>more than</const_dir> <limit>15</limit> of either type. Assuming all your answers are correct, how many of each type of question should you answer to <obj_dir>maximize</obj_dir> your <obj_name>score</obj_name>? What is your maximum score?", "output": "max: 1 algebra_questions + 3 calculus_questions\nst: algebra_questions + calculus_questions <= 25\n     algebra_questions >= 10\n     calculus_questions >= 6\n     algebra_questions <= 15\n     calculus_questions <= 15"}
{"input": "A sandwich store makes <var>peanut butter sandwiches</var> and <var>chocolate spread sandwiches</var>. The store only has enough bread to make <const_dir>at most</const_dir> <limit>150</limit> sandwiches. To stay in business, they must sell <const_dir>at least</const_dir> <limit>45</limit> <var>peanut butter sandwiches</var> and <const_dir>at least</const_dir> <limit>65</limit> <var>chocolate spread sandwiches</var>. However, they only have enough spread, peanut butter and chocolate, to make <const_dir>at most</const_dir> <limit>80</limit> <var>peanut butter sandwiches</var> and <const_dir>at most</const_dir> <limit>100</limit> <var>chocolate spread sandwiches</var>. The <obj_name>profit</obj_name> per <var>peanut butter sandwich</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>chocolate spread sandwich</var> is $<param>2</param>. How many of each sandwich should the store sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 peanut_butter_sandwich + 2 chocolate_spread_sandwich\nst: peanut_butter_sandwich + chocolate_spread_sandwich <= 150\n     peanut_butter_sandwiches >= 45\n     chocolate_spread_sandwiches >= 65\n     peanut_butter_sandwiches <= 80\n     chocolate_spread_sandwiches <= 100"}
{"input": "A food truck sells <var>tacos</var> and <var>burritos</var>. To stay in business, they must sell <const_dir>at least</const_dir> <limit>50</limit> <var>tacos</var> and <const_dir>at least</const_dir> <limit>30</limit> <var>burritos</var>. However, they <const_dir>only</const_dir> have enough supplies to make <const_dir>at most</const_dir> <limit>80</limit> <var>tacos</var> and <const_dir>at most</const_dir> <limit>50</limit> <var>burritos</var>. Given their tight schedule, they can also cook <const_dir>at most</const_dir> <limit>100</limit> items total. The <obj_name>profit</obj_name> per <var>taco</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>burrito</var> is $<param>6</param>. How many of each item should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 taco + 6 burrito\nst: tacos >= 50\n     burritos >= 30\n     tacos <= 80\n     burritos <= 50\n     taco + burrito <= 100"}
{"input": "A shoe company makes <var>black</var> and <var>blue shoes</var>. The company can make <const_dir>at most</const_dir> <limit>150</limit> <var>black shoes</var> and <const_dir>at most</const_dir> <limit>100</limit> <var>blue shoes</var> everyday. Long-term projections indicate an expected demand of <const_dir>at least</const_dir> <limit>75</limit> <var>black shoes</var> and <limit>60</limit> <var>blue shoes</var> each day. The company has a contract with a store, and a <const_dir>minimum</const_dir> of <limit>125</limit> shoes must be shipped each day. If each <var>black shoe</var> sold results in a $<param>3</param> <obj_name>loss</obj_name>, but each <var>blue shoe</var> sold results in a $<param>6</param> <obj_name>profit</obj_name>, how many of each type of shoe should be made daily to <obj_dir>maximize</obj_dir> <obj_name>net profits</obj_name>?", "output": "max: 3 black_shoe + 6 blue_shoe\nst: black_shoes <= 150\n     blue_shoes <= 100\n     black_shoes >= 75\n     blue_shoes >= 60\n     black_shoe + blue_shoe <= 125"}
{"input": "Avian cosmetics makes luxury beauty products whose main customers are wealthy women, both young girls and middle-aged women. In order to promote their product line, they decided to invest in short commercial spots on two types of programs: <var>concerts</var> and <var>cinema</var>. While each <var>concert commercial</var> is seen by <param>9</param> million young girls and <param>4</param> million middle-aged women, each <var>cinema commercial</var> is seen by <param>5</param> million young girls and <param>45</param> million middle-aged women. A 1-minute <var>concert ad</var> <obj_name>costs</obj_name> $<param>80,000</param>, and a 1-minute <var>cinema ad</var> <obj_name>costs</obj_name> $<param>30,000</param>. Avian would like the commercials to be seen by <const_dir>at least</const_dir> <limit>86</limit> million young girls and <limit>72</limit> million middle-aged women. Use linear programming to determine how Avian cosmetics can meet its advertising requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 30,000 cinema_ad + 80,000 concert_ad\nst: 9 concert_commercial + 5 cinema_commercial >= 86\n     4 concert_commercial + 45 cinema_commercial >= 72"}
{"input": "A fruit farmer has two small farms where he grows apples, oranges, and pears. It <obj_name>costs</obj_name> $<param>500</param> per day to operate <var>farm 1</var> and $<param>400</param> per day to operate <var>farm 2</var>. In a day, <var>farm 1</var> yields <param>10</param> apples, <param>15</param> oranges, and <param>5</param> pears. In a day, <var>farm 2</var> yields <param>7</param> apples, <param>8</param> oranges, and <param>9</param> pears. The farmer must <const_dir>provide</const_dir> <limit>50</limit> apples, <limit>60</limit> oranges, and <limit>55</limit> pears to the market. Formulate a LP to <obj_dir>minimize</obj_dir> the farmer's <obj_name>cost</obj_name>.", "output": "min: 500 farm_1 + 400 farm_2\nst: 10 farm_1 + 7 farm_2 >= 50\n     15 farm_1 + 8 farm_2 >= 60\n     5 farm_1 + 9 farm_2 >= 55"}
{"input": "A store manufactures 2 types of tools, <var>hammers</var> and <var>screwdrivers</var>, which require the use of two machines, a lathe and a CNG. It takes <param>28</param> minutes on the lathe and <param>82</param> minutes on CNG machine to manufacture a package of <var>hammers</var>, while it takes <param>23</param> minutes on the lathe and <param>76</param> minutes on the CNG machine to manufacture a package of <var>screwdrivers</var>. Each machine is available for a <const_dir>maximum</const_dir> of <limit>720</limit> minutes on any day. The manufacturer can sell a package of <var>hammers</var> at a <obj_name>profit</obj_name> of $<param>72</param> and a package of <var>screwdrivers</var> at a <obj_name>profit</obj_name> of $<param>70</param>. Assuming that he can sell all the tools he manufactures, how many packages of each type should the store owner produce in a day in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>? Determine the maximum profit.", "output": "max: 72 hammers + 70 screwdrivers\nst: 28 hammers + 76 screwdrivers <= 720\n     82 hammers + 23 screwdrivers <= 720"}
{"input": "A furniture maker creates two types of tables, <var>standing table</var> and <var>dining table</var>. It takes <param>2</param> hours to produce the parts of a <var>standing table</var> and <param>4</param> hours for those of a <var>dining table</var>. In addition, it takes <param>1</param> hour and <param>2.5</param> hours to assemble a <var>dining table</var> and <var>standing table</var> respectively. Finally, polishing a <var>dining table</var> takes <param>1.5</param> hours whereas polishing a <var>standing table</var> requires <param>2</param> hours. Every month, there are a total of <limit>6000</limit> hours <const_dir>available</const_dir> for producing the parts, <limit>3000</limit> hours for assembling the parts, and <limit>4500</limit> hours for polishing the tables. If the <obj_name>profit</obj_name> made on a <var>standing table</var> is $<param>45</param> and the <obj_name>profit</obj_name> on a <var>dining table</var> $<param>95</param>, how many of each type of tables should be manufactured  to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 45 standing_table + 95 dining_table\nst: 2 standing_table + 4 dining_table <= 6000\n     1 dining_table + 2.5 standing_table <= 3000\n     1.5 dining_table + 2 standing_table <= 4500"}
{"input": "A laundromat mixes cans of product from two companies, <var>Omega</var> and <var>Omini</var>, to create a new mixture. A can from <var>Omega</var> <obj_name>costs</obj_name> $<param>30</param> while a can from <var>Omini</var> <obj_name>costs</obj_name> $<param>40</param>. A can from <var>Omega</var> contains <param>3</param> units of water, <param>5</param> units of detergent, and <param>6</param> units of bleach. A can from <var>Omini</var> contains <param>5</param> units of water, <param>6</param> units of detergent, and <param>5</param> units of bleach. The new mixture must contain <const_dir>at least</const_dir> <limit>30</limit> units of water, <limit>35</limit> units of detergent, and <limit>40</limit> units of bleach. How many cans from each brand should be used to create the mixture at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 30 Omega + 40 Omini\nst: 3 Omega + 5 Omini >= 30\n     5 Omega + 6 Omini >= 35\n     6 Omega + 5 Omini >= 40"}
{"input": "A company manufactures two calculators: <var>scientific</var> and <var>graphing</var>, using silicon, plastic, and silver. To make a <var>scientific calculator</var>, <param>2</param> grams of silicon, <param>4</param> grams of plastic, and <param>1</param> gram of silver are needed. The <obj_name>profit</obj_name> per <var>scientific calculator</var> is $<param>6</param>. To make a <var>graphing calculator</var>, <param>4</param> grams of silicon, <param>6</param> grams of plastic, and <param>2</param> grams of silver are needed. The <obj_name>profit</obj_name> per <var>graphing calculator</var> is $<param>8</param>. Even though the company can sell as many calculators as it produces, there is <const_dir>only</const_dir> <limit>100</limit> grams of silicon, <limit>200</limit> grams of plastic, and <limit>50</limit> grams of silver <const_dir>available</const_dir>. Formulate a LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 6 scientific_calculator + 8 graphing_calculator\nst: 2 scientific_calculator + 4 graphing_calculator <= 100\n     6 graphing_calculator + 4 scientific_calculator <= 200\n     1 scientific_calculator + 2 graphing_calculator <= 50"}
{"input": "A peanut farmer has to send his product to the city. He can transport his peanut packages on the <var>train</var> which can take <param>80</param> <obj_name>packages</obj_name> per trip or by <var>truck</var> which can take <param>50</param> <obj_name>packages</obj_name> per trip. The cost per <var>train trip</var> is $<param>50</param> and the cost per <var>truck trip</var> is $<param>40</param>. He wants to spend <const_dir>at most</const_dir> $<limit>3000</limit> and the number of <var>train trips</var> <const_dir>must not exceed</const_dir> the number of <var>truck trips</var>. Formulate a LP to <obj_dir>maximize</obj_dir> the <obj_name>number of peanut packages</obj_name> that can be transported.", "output": "max: 80 train + 50 truck\nst: 50 train_trip + 40 truck_trip <= 3000\n     train_trips <= truck_trips"}
{"input": "Emma makes fancy <var>dresses</var> and <var>suits</var> in her shop. Both of these items require use of a sewing machine and embroidery machine. A <var>dress</var> requires <param>2</param> hours on the sewing machine and <param>4</param> hours on the embroidery machine. A <var>suit</var> requires <param>1</param> hour on the sewing machine and <param>1</param> hour on the embroidery machine. In a week, there are <limit>30</limit> hours <const_dir>available</const_dir> on the sewing machine and <limit>50</limit> hours <const_dir>available</const_dir> on the embroidery machine.  If the <obj_name>profit</obj_name> per <var>dress</var> is $<param>500</param> and the <obj_name>profit</obj_name> per <var>suit</var> is $<param>800</param>, what should the weekly production be to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 dress + 800 suit\nst: 2 dress + 1 suit <= 30\n     4 dress + 1 suit <= 50"}
{"input": "My cousin sells two different coffee blends: the <var>Drummondville blend</var> and the <var>Victoriaville blend</var>. Each blend contains both arabica and robusta coffee beans. A bag of the <var>Drummondville blend</var> contains <param>600</param> grams of arabica beans and <param>400</param> grams of robusta beans, whereas a bag of the <var>Victoriaville blend</var> contains <param>375</param> grams of arabica beans and <param>625</param> grams of robusta beans. The <obj_name>profit</obj_name> from each bag of <var>Drummondville</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> from each bag of <var>Victoriaville blend</var> sold is $<param>7</param>. If his total production must not exceed his <const_dir>available stock</const_dir> of <limit>24000</limit> grams of arabica beans and <limit>17000</limit> grams of robusta beans, how many bags of each type of blend should be blended to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>? Formulate and solve.", "output": "max: 5 Drummondville + 7 Victoriaville_blend\nst: 600 Drummondville_blend + 375 Victoriaville_blend <= 24000\n     400 Drummondville_blend + 625 Victoriaville_blend <= 17000"}
{"input": "A chemical plant produces two types of compounds, <var>Alnolyte</var> and <var>Blenzoate</var>. To produce each type of compound, we need to use both an automatic device and a human-operated device. On a given day, each processing device is available for <const_dir>at most</const_dir> <limit>500</limit> minutes. To extract a package of <var>Alnolyte</var>, it takes <param>5</param> minutes of processing on the automatic device and <param>4</param> minutes on human-operated device. To extract a package of <var>Blenzoate</var>, the automatic device needs to be run for <param>7</param> minutes and the human-operated device for <param>3</param> minutes. The manufacturer can sell a package of <var>Alnolyte</var> for a <obj_name>revenue</obj_name> of $<param>7</param> and <var>Blenzoate</var> for a <obj_name>revenue</obj_name> of $<param>10</param>. Assuming that the plant can sell all the compounds it produces, how many packages of each type should be produced daily in order to <obj_dir>maximize</obj_dir> the <obj_name>revenue</obj_name>?", "output": "max: 7 Alnolyte + 10 Blenzoate\nst: 5 Alnolyte + 7 Blenzoate <= 500\n     4 Alnolyte + 3 Blenzoate <= 500"}
{"input": "A student group makes <var>chocolate chip</var> and <var>oatmeal cookies</var>. To make a batch of <var>chocolate chip cookies</var>, it take <param>10</param> minutes to gather the ingredients, <param>20</param> minutes to mix them, and <param>50</param> minutes for baking. To make a batch of <var>oatmeal cookies</var>, it takes <param>8</param> minutes to gather the ingredients, <param>15</param> minutes to mix them, and <param>30</param> minutes for baking.  Per week, the group <const_dir>has</const_dir> <limit>1000</limit> minutes to gather ingredients, <limit>1200</limit> minutes for mixing, and <limit>3000</limit> minutes for baking. If the <obj_name>profit</obj_name> per batch of <var>chocolate chip cookies</var> is $<param>12</param> and the <obj_name>profit</obj_name> per batch of <var>oatmeal cookies</var> is $<param>15</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 chocolate_chip_cookies + 15 oatmeal_cookies\nst: 10 chocolate_chip_cookies + 8 oatmeal_cookies <= 1000\n     20 chocolate_chip_cookies + 15 oatmeal_cookies <= 1200\n     50 chocolate_chip_cookies + 30 oatmeal_cookies <= 3000"}
{"input": "Bob has a small coffee shop. He mainly sells cups of <var>coffee</var> and <var>tea</var>. It takes <param>5</param> minutes to make a cup of <var>coffee</var> and <param>3</param> minutes to make a cup of <var>tea</var>. Bob <const_dir>only</const_dir> has <limit>500</limit> minutes a week to make drinks (<var>coffee</var> and <var>tea</var>). In addition, Bob <const_dir>only</const_dir> has enough product to make <limit>300</limit> total cups per week. He makes a <obj_name>profit</obj_name> of $<param>1</param> on each cup of <var>coffee</var> and a <obj_name>profit</obj_name> of $<param>2</param> on each cup of <var>tea</var>. How many cups of <var>coffee</var> and <var>tea</var> should Bob make each week to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>, assuming he sells all his cups?", "output": "max: 1 coffee + 2 tea\nst: 5 coffee + 3 tea <= 500\n     coffee + tea <= 300"}
{"input": "A pharmacist wants to mix two drugs in such a way to create a mixture that contains <const_dir>at least</const_dir> <limit>5</limit> units of pain killer and <limit>12</limit> units of fever reliever. The amount of pain killer and fever reliever in <var>drug A</var> is <param>3</param> units/mg and <param>2.5</param> units/mg respectively. On the other hand, the amount of pain killer and fever reliever in <var>drug B</var> is <param>2</param> units/mg and <param>3.5</param> units/mg respectively. It <obj_name>costs</obj_name> $<param>0.50</param> per mg to purchase <var>drug A</var> and $<param>0.30</param> per mg to purchase <var>drug B.</var> Formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> of such a mixture.", "output": "min: 0.50 drug_A + 0.30 drug_B.\nst: 3 drug_A + 2 drug_B >= 5\n     2.5 drug_A + 3.5 drug_B >= 12"}
{"input": "A farmer must allocate his farming equipment between his two farms, a <var>beet farm</var> and a <var>carrot farm</var>. The <obj_name>revenue</obj_name> per acre of <var>beets</var> is $<param>200</param> and the <obj_name>revenue</obj_name> per acre of <var>carrots</var> is $<param>340</param>. He has one tractor, one plow, and one combine. Each equipment <const_dir>can be used for</const_dir> <limit>10</limit> hours a day divided in any way between his two farms. On his <var>beet farm</var>, harvesting an acre of <var>beets</var> requires <param>0.6</param> hours on the tractor, <param>0.3</param> hours on the plow, and <param>0.2</param> hours on the combine. On his <var>carrot farm</var>, harvesting an acre of <var>carrots</var> requires <param>0.7</param> hours on the tractor, <param>0.25</param> hours on the plow, and <param>0.1</param> hours on the combine. How should the farmer allocate his equipment between his farms to <obj_dir>maximize</obj_dir> his <obj_name>revenue</obj_name>?", "output": "max: 200 beets + 340 carrots"}
{"input": "A wine company offers two promotion packages, <var>package A</var> and <var>package B.</var> Each promotion package consists of some combination of red and white wines. <var>Package A</var> has <param>2</param> bottles of red wine and <param>1</param> bottle of white wine, and yields a <obj_name>profit</obj_name> of $<param>120</param>. In comparison, <var>package B</var> has <param>2</param> bottles of red wine and <param>3</param> bottles of white wine, and yields a <obj_name>profit</obj_name> of $<param>200</param>. However, the company <const_dir>only</const_dir> has <limit>1000</limit> bottles of red wine and <limit>800</limit> bottles of white wine. Find the best mix of packages to achieve <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 120 Package_A + 200 package_B\nst: 2 Package_A + 2 package_B <= 1000\n     3 package_B + 1 Package_A <= 800"}
{"input": "A candy company makes 3 different sized gift boxes: small, medium, and large. These gift boxes are made by their <var>mall kiosk</var> and <var>flagship store</var> location. The <var>mall kiosk</var> <obj_name>costs</obj_name> $<param>150</param> to operate per hour and can make <param>5</param> small gift boxes, <param>6</param> medium gift boxes, and <param>2</param> large gift boxes in that hour. The <var>flagship store</var> <obj_name>costs</obj_name> $<param>500</param> to operate per hour and can make <param>10</param> small gift boxes, <param>15</param> medium gift boxes, and <param>9</param> large gift boxes in that hour. To meet demands, the company must make a <const_dir>minimum</const_dir> of <limit>80</limit> small gift boxes, <limit>100</limit> medium gift boxes, and <limit>50</limit> large gift boxes per day. Formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 500 flagship_store + 150 mall_kiosk\nst: 5 mall_kiosk + 10 flagship_store >= 80\n     6 mall_kiosk + 15 flagship_store >= 100\n     2 mall_kiosk + 9 flagship_store >= 50"}
{"input": "A keyboard company produces two types of analog synthesizer keyboards, one with <var>61 keys</var> and another with <var>81 keys</var>. Both keyboards are <obj_name>sold</obj_name> for $<param>1500</param> and $<param>2500</param> respectively. There are about <limit>3000</limit> oscillator chips <const_dir>available</const_dir> every day from which the <var>61 key version</var> requires <param>8</param> chips while the <var>81 key version</var> requires <param>16</param> chips. The company has a <const_dir>total</const_dir> <limit>8</limit> working hours a day.  Both of these synthesizers require a production time of <param>1.5</param> hours. What should be the manufacturing quantity for each of the keyboards to <obj_dir>maximize</obj_dir> the <obj_name>total revenue</obj_name>?", "output": "max: 1500 61_keys + 2500 81_keys\nst: 8 61_key_version + 16 81_key_version <= 3000\n     1.5 61_key_version + 1.5 81_key_version <= 8"}
{"input": "Fiber and iron can be obtained in two supplement drinks. One is <var>orange flavored</var> and <obj_name>costs</obj_name> $<param>8</param> per serving. The other is <var>apple flavored</var> and <obj_name>costs</obj_name> $<param>5</param> per serving. One serving of the <var>orange flavored drink</var> contains <param>4</param> grams of fiber and <param>5</param> grams of iron. One serving of the <var>apple flavored drink</var> contains <param>6</param> grams of fiber and <param>3</param> grams of iron. In a day, it is recommended to get a <const_dir>minimum</const_dir> of <limit>13</limit> grams of fiber and iron each. Find the mix and formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 8 orange_flavored + 5 apple_flavored\nst: 4 orange_flavored_drink + 6 apple_flavored_drink >= 13\n     5 orange_flavored_drink + 3 apple_flavored_drink >= 13"}
{"input": "George buys <var>sneakers</var> and <var>boots</var> for resale. Each <var>sneaker</var> costs him $<param>150</param> and each <var>boot</var> costs him $<param>200</param>. He knows the monthly demand for these shoes, both <var>sneakers</var> and <var>boots</var>, is <const_dir>at most</const_dir> <limit>50</limit>. Also, George does not want to spend <const_dir>more than</const_dir> $<limit>8750</limit> buying these shoes. If the <obj_name>profit</obj_name> per <var>sneaker</var> sold is $<param>50</param> and the <obj_name>profit</obj_name> per <var>boot</var> sold is $<param>80</param>, how many of each should he buy to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 50 sneaker + 80 boot\nst: sneaker + boot <= 50\n     150 sneaker + 200 boot <= 8750"}
{"input": "Jack makes <var>rings</var> and <var>necklaces</var> using gems, each requiring the use of a heating machine and a polishing machine. On any day the heating machine is available for <const_dir>at the most</const_dir> <limit>15</limit> hours and the polishing machine for <const_dir>at the most</const_dir> <limit>12</limit> hours. It takes <param>1</param> hour on the heating machine and <param>2</param> hours on the polishing machine to make a <var>ring</var>. It takes <param>3</param> hours on the heating machine and <param>4</param> hours on the polishing machine to make a <var>necklace</var>. The <obj_name>profit</obj_name> from the sale of a <var>ring</var> is $<param>50</param> and the <obj_name>profit</obj_name> from the sale of a <var>necklace</var> is $<param>75</param>. Assuming Jack can sell all the <var>rings</var> and <var>necklaces</var> he makes, how should he schedule his daily production in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 50 ring + 75 necklace\nst: 3 necklace + 1 ring <= 15\n     2 ring + 4 necklace <= 12"}
{"input": "To pay his monthly rent for his beach house, Roy needs to find <const_dir>at least</const_dir> <limit>50</limit> seashells and <limit>30</limit> crabs. There are two beaches that Roy frequents: <var>Bonzai Beach</var> and <var>Marina Beach</var>. Each day at <var>Bonzai beach</var>, Roy finds <param>3</param> seashells and <param>5</param> crabs. Each day at <var>Marina Beach</var>, Roy finds <param>7</param> seashells and <param>2</param> crabs. Formulate an LP to help Roy meet his requirements while spending a <obj_dir>minimal</obj_dir> <obj_name>amount of time</obj_name> in the mines.", "output": "min: \nst: 3 Bonzai_beach + 7 Marina_Beach >= 50\n     5 Bonzai_beach + 2 Marina_Beach >= 30"}
{"input": "An electronics store sells two web cams: a <var>standard definition</var> one and a <var>high definition</var> one. The <var>standard definition</var> web-cam costs the store $<param>150</param> and yields a <obj_name>profit</obj_name> of $<param>100</param>. The <var>high definition</var> web-cam costs the store $<param>250</param> and yields a <obj_name>profit</obj_name> of $<param>125</param>. The store owner does not want to invest <const_dir>more than</const_dir> $<limit>40000</limit> in web-cam inventory and estimates a total monthly demand of <const_dir>at most</const_dir> <limit>275</limit> web-cams. How many web-cams of either type should be stocked in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 standard_definition + 125 high_definition\nst: 150 standard_definition + 250 high_definition <= 40000\n     standard_definition + high_definition <= 275"}
{"input": "A factory uses two types of apples, <var>green</var> and <var>red</var>, to make a large batch of pie filling. <var>Green apples</var> consist of <param>5%</param> sugar and <param>16%</param> fiber and <var>red apples</var> consists of <param>25%</param> sugar and <param>8%</param> fiber. They need to make sure the filling has a <const_dir>minimum</const_dir> of <limit>12</limit> kg of sugar and <limit>5</limit> kg of fiber. If <var>green apples</var> <obj_name>cost</obj_name> $<param>9</param> per kg and <var>red apples</var> <obj_name>cost</obj_name> $<param>7</param> per kg, how many kg of each apple should be used to make the filling at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>? What is the minimum cost?", "output": "min: 9 green_apples + 7 red_apples\nst: 5% Green_apples + 25% red_apples >= 12\n     16% Green_apples + 8% red_apples >= 5"}
{"input": "A sandwich store sells <var>tuna salad</var> and <var>chicken salad sandwiches</var>. Both sandwiches require time to mix the ingredients and time to put together the sandwich. To make a <var>tuna salad sandwich</var> requires <param>3</param> minutes to mix the ingredients and <param>5</param> minutes to put together the sandwich. To make a <var>chicken salad sandwich</var> requires <param>5</param> minutes to mix the ingredients and <param>6</param> minutes to put together the sandwich. In a day, there are <limit>300</limit> minutes <const_dir>available</const_dir> for mixing the ingredients and <limit>400</limit> minutes <const_dir>available</const_dir> for putting together sandwiches. If the <obj_name>profit</obj_name> per <var>tuna salad sandwich</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>chicken salad sandwich</var> is $<param>3</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 chicken_salad_sandwich + 2 tuna_salad_sandwich\nst: 3 tuna_salad_sandwich + 5 chicken_salad_sandwich <= 300\n     5 tuna_salad_sandwich + 6 chicken_salad_sandwich <= 400"}
{"input": "A restaurant makes <var>chicken</var> and <var>goat</var> curry. One serving of <var>chicken curry</var> requires <param>1</param> unit of tomatoes, <param>2</param> units of curry paste, and <param>3</param> units of water. One serving of <var>goat curry</var> requires <param>2</param> units of tomatoes, <param>3</param> units of curry paste, and <param>1</param> unit of water. The restaurant has <const_dir>available</const_dir> <limit>20</limit> units of tomatoes, <limit>30</limit> units of curry paste, and <limit>25</limit> units of water. If the <obj_name>profit</obj_name> per serving of <var>chicken curry</var> is $<param>5</param> and the <obj_name>profit</obj_name> per serving of <var>goat curry</var> is $<param>7</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 chicken_curry + 7 goat_curry\nst: 1 chicken_curry + 2 goat_curry <= 20\n     2 chicken_curry + 3 goat_curry <= 30\n     3 chicken_curry + 1 goat_curry <= 25"}
{"input": "A bakery makes <var>chocolate</var> and <var>blueberry muffins</var>, each requiring both sugar and butter. The bakery has <limit>6000</limit> grams of sugar and <limit>4000</limit> grams of butter <const_dir>available</const_dir>. <var>Chocolate muffins</var> require <param>30</param> grams of sugar and <param>10</param> grams of butter, while <var>blueberry muffins</var> require <param>20</param> grams of sugar and <param>15</param> grams of butter. Assuming all other ingredients are available, what is the <obj_dir>maximum</obj_dir> <obj_name>number of muffins</obj_name> that can be made?", "output": "max: \nst: 30 Chocolate_muffins + 20 blueberry_muffins <= 6000\n     10 Chocolate_muffins + 15 blueberry_muffins <= 4000"}
{"input": "A small wood shop that specializes in kitchen tools and can make a <const_dir>maximum</const_dir> of <limit>30</limit> <var>cutting boards</var> and <limit>50</limit> <var>knife handles</var> in a week. It takes a worker <param>5</param> hours to make a <var>cutting board</var> and <param>10</param> hours to make a <var>knife handle</var>. The <obj_name>profit</obj_name> on a <var>cutting board</var> is $<param>100</param> and the <obj_name>profit</obj_name> on a <var>knife handle</var> is $<param>250</param>.  The total number of hours by all of the employees is <const_dir>at most</const_dir> <limit>200</limit> hours per week. Formulate an LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 100 cutting_board + 250 knife_handle\nst: cutting_boards <= 30\n     knife_handles <= 50\n     5 cutting_board + 10 knife_handle <= 200"}
{"input": "A syrup factory makes <var>chocolate</var> and <var>caramel syrup</var>. They can make <const_dir>at most</const_dir> <limit>15</limit> tons of each per week. In addition, they must make <const_dir>at least</const_dir> <limit>2</limit> tons of <var>chocolate syrup</var> and <const_dir>at least</const_dir> <limit>3</limit> tons of <var>caramel syrup</var> per week. Each ton of <var>chocolate</var> and <var>caramel syrup</var> requires <param>3</param> hours on the heating machine. The heating machine is available for <const_dir>at most</const_dir> <limit>50</limit> hours per week. If the <obj_name>profit</obj_name> per ton of <var>chocolate syrup</var> is $<param>500</param> and the <obj_name>profit</obj_name> per ton of <var>caramel syrup</var> is $<param>350</param>, how many tons of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 chocolate_syrup + 350 caramel_syrup\nst: chocolate <= 15\n     caramel_syrup <= 15\n     chocolate_syrup >= 2\n     caramel_syrup >= 3\n     3 chocolate + 3 caramel_syrup <= 50"}
{"input": "Banana sells two types of subscription software packages: a <var>student version</var> and a <var>professional version</var> which will cost $<param>750</param> and $<param>3000</param> to produce respectively. The marketing department estimates that they can sell <const_dir>at most</const_dir> <limit>350</limit> licenses for both versions combined a month. The <obj_name>profit</obj_name> per <var>student version</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>professional version</var> is $<param>1500</param>. If Banana does not want to spend <const_dir>more than</const_dir> $<limit>500000</limit>, how many of each software package should they produce to <obj_dir>maximize</obj_dir> the <obj_name>profits</obj_name>.", "output": "max: 400 student_version + 1500 professional_version\nst: 750 student_version + 3000 professional_version <= 500000\n     student_version + professional_version <= 350"}
{"input": "To make their <var>sausages</var> and <var>burger patties</var>, a factory uses two machines, a meat-grinder and a meat-packer. To produce one batch of <var>sausages</var> requires <param>2</param> hours on the meat-grinder and <param>3</param> hours on the meat-packer. To produce one batch of <var>burger patties</var> requires <param>4</param> hours on the meat-grinder and <param>1.5</param> hours on the meat-packer. Each machine runs for <const_dir>at most</const_dir> <limit>3000</limit> hours per year. If the <obj_name>profit</obj_name> per batch of <var>sausages</var> is $<param>200</param> and the <obj_name>profit</obj_name> per batch of <var>burger patties</var> is $<param>250</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 sausages + 250 burger_patties\nst: 2 sausages + 4 burger_patties <= 3000\n     3 sausages + 1.5 burger_patties <= 3000"}
{"input": "A small business makes <var>soccer balls</var> and <var>basket balls</var> by hand. The <obj_name>profit</obj_name> per <var>soccer ball</var> is $<param>5</param>, and the <obj_name>profit</obj_name> per <var>basket ball</var> is $<param>8</param>. To make one <var>soccer ball</var>, <param>20</param> minutes of sewing and <param>10</param> minutes of quality checking is required. To make a <var>basket ball</var> <param>15</param> minutes of sewing and <param>12</param> minutes of quality checking is required. In a month, <limit>5000</limit> minutes of sewing time and <limit>4500</limit> minutes of quality checking time is <const_dir>available</const_dir>. How many of each ball should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 soccer_ball + 8 basket_ball\nst: 20 soccer_ball + 15 basket_ball <= 5000\n     10 soccer_ball + 12 basket_ball <= 4500"}
{"input": "A clothing company makes <var>blue</var> and <var>dark blue t-shirts</var>. A <var>blue t-shirt</var> requires <param>3</param> unit of dye, <param>5</param> units of water, and <param>30</param> worker minutes. A <var>dark blue t-shirt</var> requires <param>5</param> units of dye, <param>4</param> units of water, and <param>25</param> worker minutes. The company only has <limit>1000</limit> units of dye, <limit>1200</limit> units of water, and <limit>8000</limit> worker minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>blue t-shirt</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>dark blue t-shirt</var> is $<param>15</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 15 dark_blue_t-shirt + 10 blue_t-shirt\nst: 3 blue_t-shirt + 5 dark_blue_t-shirt <= 1000\n     5 blue_t-shirt + 4 dark_blue_t-shirt <= 1200\n     30 blue_t-shirt + 25 dark_blue_t-shirt <= 8000"}
{"input": "A paper company makes <var>lined paper</var> and <var>graph paper</var>. All paper has to go through a cutting machine and a line-printing machine. A ream of <var>lined paper</var> requires <param>2</param> minutes on the cutting machine and <param>6</param> minutes on the line-printing machine. A ream of <var>graph paper</var> requires <param>2</param> minutes on the cutting machine and <param>10</param> minutes on the line-printing machine. In a week, each machine is <const_dir>available</const_dir> for <limit>3500</limit> minutes. There is a <obj_name>profit</obj_name> of $<param>11</param> per ream of <var>lined paper</var> and a <obj_name>profit</obj_name> of $<param>13</param> per ream of <var>graph paper</var>. How many reams of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 11 lined_paper + 13 graph_paper\nst: 2 lined_paper + 2 graph_paper <= 3500\n     6 lined_paper + 10 graph_paper <= 3500"}
{"input": "A snow removal company uses their equipment in two cities and gets paid per kilogram of snow they remove. In the <var>northern city</var>, the <obj_name>net revenue</obj_name> per kilogram of snow is $<param>2</param>. In the <var>southern city</var>, the <obj_name>net revenue</obj_name> per kilogram of snow is $<param>1.50</param>. The company has one snow plow, one truck, and one shovel. Each item can be used for <const_dir>at most</const_dir> <limit>500</limit> minutes per day. At the <var>northern city</var>, to remove 1 kilogram of snow requires <param>2</param> minutes on the snow plow, <param>1</param> minute on the truck, and <param>5</param> minutes with the shovel. At the <var>southern city</var>, to remove 1 kilogram of snow requires <param>1</param> minute on the snow plow, <param>3</param> minutes on the truck, and <param>2</param> minutes with the shovel. How many kilograms of snow should be removed from each city to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 northern_city + 1.50 southern_city\nst: 2 northern_city + 1 southern_city <= 500\n     1 northern_city + 3 southern_city <= 500\n     5 northern_city + 2 southern_city <= 500"}
{"input": "Jane <const_dir>has</const_dir> a field of <limit>200</limit> acres to grow <var>tulips</var> and <var>daffodils</var>. The bulbs for <var>tulips</var> cost $<param>10</param> per acre while the bulbs for <var>daffodils</var> cost $<param>5</param> per acre. Jane <const_dir>has</const_dir> $<limit>1500</limit> to spend on bulbs. If the <obj_name>profit</obj_name> per acre of <var>tulips</var> is $<param>325</param> and the <obj_name>profit</obj_name> per acre of <var>daffodils</var> is $<param>200</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 325 tulips + 200 daffodils\nst: tulips + daffodils <= 200\n     10 tulips + 5 daffodils <= 1500"}
{"input": "A toy company makes toys and knows that most of their customers are young boys and girls. To reach these groups, the company has decided to purchase commercial spots on <var>cartoons</var> and <var>kids-movies</var>. Each <var>cartoon</var> is seen by <param>2</param> millions young boys and <param>1</param> million young girls. Each <var>kids-movie</var> is seen by <param>4</param> million young boys and <param>6</param> million young girls. The company wants their commercials to be seen by <const_dir>at least</const_dir> <limit>30</limit> million young boys and <limit>40</limit> million young girls. If a commercial during a <var>cartoon</var> <obj_name>costs</obj_name> $<param>5000</param> and a commercial during a <var>kids-movie</var> <obj_name>costs</obj_name> $<param>12000</param>, how many of each should be purchased to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 12000 kids-movie + 5000 cartoon\nst: 2 cartoon + 4 kids-movie >= 30\n     1 cartoon + 6 kids-movie >= 40"}
{"input": "A flower grower <const_dir>has</const_dir> <limit>120</limit> acres of agricultural land in which he wants to plant <var>tulips</var> and <var>orchids</var>. The seed for <var>tulips</var> costs $<param>15</param> per acre whereas the seed for <var>orchids</var> costs $<param>40</param> per acre. The <obj_name>profit</obj_name> per acre of <var>tulips</var> is $<param>75</param> whereas the <obj_name>profit</obj_name> for <var>orchids</var> is $<param>105</param> an acre. If the grower has a <const_dir>maximum budget</const_dir> of $<limit>1200</limit> to spend on seeds, determine how many <var>tulips</var> and <var>orchids</var> he needs to plant to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>.", "output": "max: 75 tulips + 105 orchids\nst: 15 tulips + 40 orchids <= 1200\n     tulips + orchids <= 120"}
{"input": "A gardener <const_dir>has</const_dir> a field of <limit>100</limit> square feet in which he plants <var>sunflowers</var> and <var>roses</var>. The seed for <var>sunflowers</var> costs $<param>67</param> per square foot. The seed for <var>roses</var> costs $<param>52</param> per square foot. The gardener has available a <const_dir>budget</const_dir> of $<limit>6500</limit> to spend on seeds. The <obj_name>profit</obj_name> per square foot of <var>sunflowers</var> is $<param>450</param> and the <obj_name>profit</obj_name> per square foot of <var>roses</var> is $<param>100</param>. Find the optimal solution for the gardener in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 450 sunflowers + 100 roses\nst: sunflowers + roses <= 100\n     67 sunflowers + 52 roses <= 6500"}
{"input": "The Notorious Desk company wants to promote a new brand of wine and wants to market it using a total market <const_dir>budget</const_dir> of $<limit>87,000</limit>. To do so, the company needs to decide how much to allocate on each of its two advertising channels: (1) <var>morning TV show</var> and (2) <var>social media</var>. Each day, it costs the company $<param>1,000</param> and $<param>2000</param> to run advertisement spots on <var>morning TV</var> show and <var>social media</var> respectively. The expected daily <obj_name>reach</obj_name>, based on past ratings, is <param>15,000</param> viewers for each <var>morning show</var> spot and <param>30,000</param> internet users for a <var>social media spot</var>. The chief marketer knows from her experience that both channels are key to the success of the product launch. She wants to plan <const_dir>at least</const_dir> <limit>4</limit> but <const_dir>no more than</const_dir> <limit>7</limit> <var>morning show</var> spots. In addition, the <var>social media spots</var> needs to be <const_dir>at least</const_dir> <limit>30</limit> due to pricing tier policy. How many times should each of the media channels be used to <obj_dir>maximize</obj_dir> the <obj_name>reach</obj_name> of  the campaign?", "output": "max: 15,000 morning_show + 30,000 social_media_spot\nst: 1,000 morning_TV + 2000 social_media <= 87,000\n     morning_show >= 4\n     morning_show <= 7\n     social_media_spots >= 30"}
{"input": "A smoothies store makes <var>blueberry</var> and <var>chocolate smoothies</var>. All smoothies have to go through a preparation phase and a blending phase. A <var>blueberry smoothies</var> requires <param>3</param> minutes of preparation and <param>2</param> minutes of blending. A <var>chocolate smoothie</var> requires <param>5</param> minutes of preparation and <param>1</param> minute of blending. The store has <limit>1000</limit> minutes <const_dir>available</const_dir> for preparation and <limit>750</limit> minutes <const_dir>available</const_dir> for blending. If the <obj_name>profit</obj_name> per <var>blueberry smoothie</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>chocolate smoothie</var> is $<param>3</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 chocolate_smoothie + 2 blueberry_smoothie\nst: 3 blueberry_smoothies + 5 chocolate_smoothie <= 1000\n     2 blueberry_smoothies + 1 chocolate_smoothie <= 750"}
{"input": "An electronics repair shop fixes old <var>phones</var> and <var>laptops</var>. Each <var>phone</var> requires <param>20</param> minutes of inspection and <param>30</param> minutes of fixing. Each <var>laptop</var> requires <param>30</param> minutes of inspection and <param>50</param> minutes of fixing. The store makes a <obj_name>profit</obj_name> of $<param>50</param> per <var>phone</var> repaired and a <obj_name>profit</obj_name> of $<param>60</param> per <var>laptop</var> repaired. If there are <limit>6000</limit> minutes <const_dir>available</const_dir> for inspection and <limit>7000</limit> minutes <const_dir>available</const_dir> for fixing, how many of each should the shop repair to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 phone + 60 laptop\nst: 20 phone + 30 laptop <= 6000\n     30 phone + 50 laptop <= 7000"}
{"input": "At the suggestion of a dietitian, Jamie wants to eat a diet which contains a <const_dir>minimum</const_dir> of <limit>100</limit> units of proteins and <limit>60</limit> units of fat. She can eat <var>chicken</var> and <var>beef</var> to supplement her current vegetable based diet. <var>Chicken</var> <obj_name>costs</obj_name> $<param>3.4</param> per unit and <var>beef</var> <obj_name>costs</obj_name> $<param>7.5</param> per unit. One unit of <var>chicken</var> has <param>10</param> units of proteins and <param>6</param> units of fat. One unit of <var>beef</var> has <param>30</param> units of proteins and <param>40</param> units of fat. Formulate this as a linear programming problem. Find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> for a diet that consists of a mixture of these two meats and also meets the minimal nutritional requirements.", "output": "min: 3.4 Chicken + 7.5 beef\nst: 10 chicken + 30 beef >= 100\n     6 chicken + 40 beef >= 60"}
{"input": "In a company, two types of teams can be formed: a <var>small team</var> and a <var>large team</var>. A <var>small team</var> can preform <param>8</param> tasks per hour, requires <param>1</param> supervisor, and <obj_name>costs</obj_name> $<param>5000</param>. A <var>large team</var> can preform <param>20</param> tasks per hour, requires <param>3</param> supervisors, and <obj_name>costs</obj_name> $<param>15000</param>. The company wants to <const_dir>competes</const_dir> <limit>100</limit> tasks per hour with a <const_dir>maximum</const_dir> of <limit>10</limit> supervisors. How many of each type of team, <var>small</var> and <var>large</var>, need to be formed in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> and meet the requirements?", "output": "min: 5000 small_team + 15000 large_team\nst: 1 small_team + 3 large_team <= 10"}
{"input": "You are buying trucks to transport goods and will keep them in your parking lot. A <var>small truck</var> costs $<param>5000</param>, takes <param>1</param> parking spot, and can carry <param>10</param> <obj_name>boxes</obj_name>. A <var>large truck</var> costs $<param>8000</param>, takes <param>2</param> parking spots, and can carry <param>15</param> <obj_name>boxes</obj_name>. You have a $<limit>100000</limit> <const_dir>limit</const_dir> and have <const_dir>at most</const_dir> <limit>15</limit> parking spots. How many of each truck should be purchased to <obj_dir>maximize</obj_dir> the <obj_name>number of boxes</obj_name> you can carry?", "output": "max: 10 small_truck + 15 large_truck\nst: 5000 small_truck + 8000 large_truck <= 100000\n     1 small_truck + 2 large_truck <= 15"}
{"input": "A fashion company makes two types of bags: <var>hand-bags</var> and <var>backpacks</var>. Each <var>hand-bag</var> requires <param>6</param> minutes of sewing while each <var>backpack</var> requires <param>7</param> minutes of sewing. Each <var>hand-bag</var> requires <param>3</param> minutes of painting while each <var>backpack</var> requires <param>5</param> minutes of painting. There are <limit>400</limit> minutes <const_dir>available</const_dir> for sewing and <limit>600</limit> minutes <const_dir>available</const_dir> for painting. The <obj_name>profit</obj_name> per <var>hand-bag</var> is $<param>75</param> and the <obj_name>profit</obj_name> per <var>backpack</var> is $<param>60</param>. How many of each type of bag should the company make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 75 hand-bag + 60 backpack\nst: 6 hand-bag + 7 backpack <= 400\n     3 hand-bag + 5 backpack <= 600"}
{"input": "A candy shop makes a mixture of candy using <var>sour drops</var> and <var>sour belts</var>. Each <var>sour drop</var> has <param>2</param> units of sourness and <param>4</param> units of flavoring. Each <var>sour belt</var> has <param>4</param> units of sourness and <param>3</param> units of flavoring. The shop want to make sure the mixture contains <const_dir>at least</const_dir> <limit>30</limit> units of sourness and <limit>40</limit> units of flavoring.  The mixture can also contain <const_dir>at most</const_dir> <limit>5</limit> <var>sour belts</var>. If it <obj_name>costs</obj_name> $<param>0.50</param> per <var>sour drop</var> and $<param>0.40</param> per <var>sour belt</var>, how many of each should be used to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> of the mixture?", "output": "min: 0.50 sour_drop + 0.40 sour_belt\nst: 2 sour_drop + 4 sour_belt >= 30\n     4 sour_drop + 3 sour_belt >= 40\n     sour_belts <= 5"}
{"input": "A store sells two types of donuts, <var>regular</var> and <var>jelly-filled</var>.  The store pays a baker $<param>4</param> and $<param>6</param> for each unit of a <var>regular</var> and <var>jelly-filled donut</var> respectively. The store makes a <obj_name>profit</obj_name> of $<param>2</param> per <var>regular donut</var> and a <obj_name>profit</obj_name> of $<param>3</param> per <var>jelly-filled donut</var>. In a month, the store owner expects to sell <const_dir>at most</const_dir> <limit>1000</limit> donuts and wants to spend <const_dir>at most</const_dir> $<limit>5000</limit> in buying donuts from the bakery. How many of each type of donut should be bought in order to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 2 regular_donut + 3 jelly-filled_donut\nst: 4 regular + 6 jelly-filled_donut <= 5000\n     regular_donut + jelly-filled_donut <= 1000"}
{"input": "A furniture company sells two types of tables \u2013 a <var>dinning table</var> and a <var>coffee table</var>. They cost $<param>250</param> and $<param>150</param> to make respectively. The company estimates that the total monthly demand of these two types of tables combined will be <const_dir>at most</const_dir> <limit>200</limit> units. The monthly manufacturing <const_dir>budget</const_dir> on tables is $<limit>20000</limit>. Determine the number of units of each type of tables the company should make to get <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name> if the <obj_name>profit</obj_name> on each <var>dinning table</var> and <var>coffee table</var> are $<param>200</param> and $<param>100</param> respectively.", "output": "max: 200 dinning_table + 100 coffee_table\nst: 250 dinning_table + 150 coffee_table <= 20000\n     dinning_table + coffee_table <= 200"}
{"input": "You have participated in a math contest. There are two types of problems to solve: <var>long answer questions</var> and <var>multiple choice questions</var>. <var>Long answer questions</var> are worth <param>10</param> <obj_name>points</obj_name> and <var>multiple choice questions</var> are worth <param>2</param> <obj_name>points</obj_name>. In total, you have enough time to answer <const_dir>at most</const_dir> <limit>15</limit> questions. You need to answer <const_dir>at least</const_dir> <limit>5</limit> <var>long answer questions</var> and <limit>7</limit> <var>multiple choice questions</var>, but time restricts answering <const_dir>more than</const_dir> <limit>11</limit> of either type. How many of each type of questions do you need to answer to <obj_dir>maximize</obj_dir> your <obj_name>score</obj_name>? What is your maximum score? Assume all of your answers are correct.", "output": "max: 10 Long_answer_questions + 2 multiple_choice_questions\nst: Long_answer_questions + multiple_choice_questions <= 15\n     long_answer_questions >= 5\n     multiple_choice_questions >= 7\n     long_answer_questions <= 11\n     multiple_choice_questions <= 11"}
{"input": "A man wants to sell his berries at the market down the river. He can either use a <var>boat</var> to carry it down stream or have his <var>neighbor</var> carry it. A <var>boat</var> can take <param>200</param> units of <obj_name>berries</obj_name> per trip and cost $<param>30</param> per trip. His <var>neighbor</var> can take <param>40</param> units of <obj_name>berries</obj_name> per trip and costs $<param>8</param>. The man does <const_dir>not want to spend more than</const_dir> $<limit>500</limit> and the number of <var>boat</var> trips <const_dir>cannot exceed</const_dir> the number of trips his <var>neighbor</var> does. Formulate a LP to <obj_dir>maximize</obj_dir> the <obj_name>number of berries</obj_name> he can transport to the market?", "output": "max: 200 boat + 40 neighbor\nst: 30 boat + 8 neighbor <= 500\n     boat <= neighbor"}
{"input": "A small factory makes plush toys in a <var>small</var> and <var>large</var> size using cotton. To make a <var>small plush</var> requires <param>5</param> units of cotton and <param>10</param> minutes of worker time. To make a <var>large plush</var> requires <param>8</param> units of cotton and <param>12</param> minutes of worker time. In a day, there are <limit>250</limit> units of cotton <const_dir>available</const_dir> and <limit>500</limit> minutes of worker time. If the <obj_name>profit</obj_name> per <var>small plush</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>large plush</var> is $<param>5</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 large_plush + 3 small_plush\nst: 5 small_plush + 8 large_plush <= 250\n     10 small_plush + 12 large_plush <= 500"}
{"input": "Northwest Golden Bakery wishes to make some cakes that have some chocolate and <var>strawberry toppings</var>. Each <var>chocolate topping</var> contains <param>1</param> gram of sugar and <param>2</param> grams of butter; each <var>strawberry topping</var> contains <param>0.5</param> grams of sugar and <param>0.7</param> grams of butter. For health reasons, the cake will have <const_dir>at most</const_dir> <limit>5</limit> <var>chocolate toppings</var>. To make a tasty cake, <const_dir>at least</const_dir> <limit>10</limit> grams of sugar and <limit>15</limit> grams of butter must be used in the toppings of the cake. If it <obj_name>costs</obj_name> $<param>2</param> to make one <var>chocolate topping</var> and $<param>3</param> for one <var>strawberry topping</var>, what is the optimal combination of chocolate and <var>strawberry toppings</var> to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name>?", "output": "min: 2 chocolate_topping + 3 strawberry_topping\nst: chocolate_toppings <= 5\n     0.5 strawberry_topping + 1 chocolate_topping >= 10\n     2 chocolate_topping + 0.7 strawberry_topping >= 15"}
{"input": "Joel is on a strict diet and insists on only drinking <var>chocolate protein shakes</var> and vanilla <var>meal replacement smoothies</var>. He want to save money and minimize <obj_name>cost</obj_name> but must get enough protein and carbs, and not too much fat. <var>Chocolate protein shakes</var> <obj_name>cost</obj_name> $<param>8</param> per serving and contain <param>35</param> units of protein, <param>20</param> units of carbs, and <param>3</param> units of fat. <var>Meal replacement smoothies</var> <obj_name>cost</obj_name> $<param>10</param> per serving and contain <param>15</param> units of protein, <param>25</param> units of carbs, and <param>10</param> units of fat. John requires <const_dir>at least</const_dir> <limit>150</limit> units of protein and <limit>130</limit> units of carbs but must <const_dir>not eat more than</const_dir> <limit>50</limit> units of fat each day. Formulate the problem as an LP problem in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 8 Chocolate_protein_shakes + 10 Meal_replacement_smoothies\nst: 35 Chocolate_protein_shakes + 15 Meal_replacement_smoothies >= 150\n     3 Chocolate_protein_shakes + 10 Meal_replacement_smoothies <= 50\n     20 Chocolate_protein_shakes + 25 Meal_replacement_smoothies >= 130"}
{"input": "A bike shop sells two models of a bike: a <var>mountain bike</var> and a <var>road bike</var>. The <var>mountain bike</var> costs $<param>750</param> and yields a <obj_name>profit</obj_name> of $<param>300</param>. The <var>road bike</var> costs $<param>1000</param> and yields a <obj_name>profit</obj_name> of $<param>500</param>. The bike shop owner knows that the monthly demand will be <const_dir>at most</const_dir> <limit>150</limit> bikes. He also wants to make sure that there is <const_dir>at most</const_dir> $<limit>40000</limit> worth of bikes in stock. How many bikes of each type should be stocked in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 road_bike + 300 mountain_bike\nst: 750 mountain_bike + 1000 road_bike <= 40000\n     road_bike + mountain_bike <= 150"}
{"input": "A nut farmer <const_dir>has</const_dir> <limit>80</limit> acres of land on which he grows <var>almonds</var> and <var>pecans</var>. The <obj_name>net revenue</obj_name> per acre of <var>almonds</var> is $<param>500</param> and the <obj_name>net revenue</obj_name> per acre of <var>pecans</var> is $<param>600</param>. Each acre of <var>almonds</var> requires <param>1.5</param> days worth of labor and $<param>200</param> in maintenance costs. Each acre of <var>pecans</var> requires <param>3</param> days worth of labor and $<param>250</param> in maintenance costs. The farmer has $<limit>10000</limit> <const_dir>available</const_dir> to spend on maintenance costs and <limit>275</limit> days worth of labor <const_dir>available</const_dir>. How many acres of each should be grown in order to <obj_dir>maximize</obj_dir> <obj_name>net revenue</obj_name>?", "output": "max: 500 almonds + 600 pecans\nst: 200 almonds + 250 pecans <= 10000\n     1.5 almonds + 3 pecans <= 275"}
{"input": "Lily's dog requires his food to be mixed.  In order to keep the dog healthy but also keep the food tasty, the mix needs to have a <const_dir>minimum</const_dir> of <limit>20</limit> units of calcium, <limit>30</limit> units of vitamin mix, and <limit>50</limit> units of meat. A <var>local brand</var> <obj_name>costs</obj_name> $<param>30</param> per bag and contains <param>5</param> units of calcium, <param>8</param> units of vitamin mix, and <param>20</param> units of meat. A <var>specialty health brand</var> <obj_name>costs</obj_name> $<param>50</param> per bag and contains <param>15</param> units of calcium, <param>20</param> units of vitamin mix, and <param>10</param> units of meat. How many bags of each brand should Lily mix in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while also meeting the taste and health requirements.", "output": "min: 30 local_brand + 50 specialty_health_brand\nst: 5 local_brand + 15 specialty_health_brand >= 20\n     8 local_brand + 20 specialty_health_brand >= 30\n     20 local_brand + 10 specialty_health_brand >= 50"}
{"input": "A soup store sell two soups: a <var>crab soup</var> and a <var>lobster soup</var>. The soups are made using water, crab meat, and lobster meat. A serving of <var>crab soup</var> requires <param>7</param> units of water and <param>8</param> units of crab meat. A serving of <var>lobster soup</var> requires <param>10</param> units of water and <param>5</param> units of lobster meat. There is <limit>80</limit> units of water <const_dir>available</const_dir>, <limit>65</limit> units of crab meat <const_dir>available</const_dir>, and <limit>55</limit> units of lobster meat <const_dir>available</const_dir>. The <obj_name>profit</obj_name> per serving of <var>crab soup</var> is $<param>3</param> and the <obj_name>profit</obj_name> per serving of <var>lobster soup</var> is $<param>5</param>. Formulate as a LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 3 crab_soup + 5 lobster_soup\nst: 7 crab_soup + 10 lobster_soup <= 80\n     8 crab_soup <= 65\n     5 lobster_soup <= 55"}
{"input": "Young Bucks needs to allocate resources at its two plants <var>Alpha</var> and <var>Beta</var> to produce two products: cement and stucco. To meet customer demands, <const_dir>at least</const_dir> <limit>100</limit> tons of cement and <limit>80</limit> tons of stucco must be produced daily. Running the <var>plant Alpha</var> <obj_name>costs</obj_name> $<param>40</param> per hour and yields <param>3</param> tons of cement and <param>2</param> ton of stucco. Running the <var>plant Beta</var> for an hour <obj_name>costs</obj_name> $<param>100</param> and produces <param>5</param> tons of cement and <param>4</param> tons of stucco. Determine the daily production plan at its plants that will <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of meeting the demands.", "output": "min: 100 plant_Beta + 40 plant_Alpha\nst: 3 plant_Alpha + 5 plant_Beta >= 100\n     2 plant_Alpha + 4 plant_Beta >= 80"}
{"input": "A woodshop makes <var>dining tables</var> and <var>desks</var>. Each <var>dining table</var> requires <param>2</param> hours of woodworking, <param>3</param> boxes of nails, and <param>1</param> unit of varnish. Each <var>desk</var> requires <param>3</param> hours of woodworking, <param>4</param> boxes of nails, and <param>2</param> units of varnish. There are <limit>100</limit> hours of woodworking <const_dir>available</const_dir>, <limit>75</limit> boxes of nails <const_dir>available</const_dir>, and <limit>80</limit> units of varnish <const_dir>available</const_dir>. If each <var>dining table</var> yields a <obj_name>profit</obj_name> of $<param>350</param> and each <var>desk</var> yields a <obj_name>profit</obj_name> of $<param>400</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 desk + 350 dining_table\nst: 2 dining_table + 3 desk <= 100\n     3 dining_table + 4 desk <= 75\n     1 dining_table + 2 desk <= 80"}
{"input": "A film agency wants to promote their new movie. They want to maximize the <obj_name>exposure</obj_name> with a budget of <const_dir>at most</const_dir> $<limit>500000</limit>. To do so, the agency needs to decide how much of the budget to spend on each of its two most effective media: (1) <var>social media</var> adverts and (2) <var>magazine covers</var>. Each <var>social media</var> advert costs $<param>3000</param>; each <var>magazine cover</var> costs $<param>6000</param>. The agency director knows from experience that it is important to use both media. The movie <obj_name>exposure</obj_name> is <param>100000</param> viewers for each <var>social media</var> posting and <param>54000</param> readers for each <var>magazine cover</var>. He makes a decision that <const_dir>at least</const_dir> <limit>10</limit> but <const_dir>at most</const_dir> <limit>20</limit> <var>social media</var> posts be ordered, and that <const_dir>at least</const_dir> <limit>24</limit> <var>magazine covers</var> should be contracted. How many times should each of the two media be used to obtain <obj_dir>maximum</obj_dir> <obj_name>exposure</obj_name> while staying within the budget?", "output": "max: 100000 social_media + 54000 magazine_cover\nst: 3000 social_media + 6000 magazine_cover <= 500000\n     social_media >= 10\n     social_media <= 20\n     magazine_covers >= 24"}
{"input": "A patient with weak bones has been told to drink <var>milk</var> and eat <var>cheese</var> in order to meet his calcium and vitamin D requirements. In one serving of <var>milk</var>, there are <param>10</param> grams of calcium and <param>5</param> grams of Vitamin D. In one serving of <var>cheese</var>, there are <param>8</param> grams of calcium and <param>6</param> grams of vitamin D. The patient must get <const_dir>at least</const_dir> <limit>100</limit> grams of calcium and <limit>80</limit> grams of Vitamin D per day. If a serving of <var>milk</var> <obj_name>costs</obj_name> $<param>2</param> and a serving of <var>cheese</var> <obj_name>costs</obj_name> $<param>4</param>, how many servings of each should the patient eat to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 2 milk + 4 cheese\nst: 10 milk + 8 cheese >= 100\n     5 milk + 6 cheese >= 80"}
{"input": "A tech company makes two type of electronics: <var>phones</var> and <var>laptops</var>. Demand is high but production is limited by silicon chip availability, engineering time, and assembly time. Each <var>phone</var> requires <param>2</param> silicon chips, <param>5</param> hours of engineering time, and <param>3</param> hours of assembly time. Each <var>laptop</var> requires <param>4</param> silicon chips, <param>6</param> hours of engineering time, and <param>1</param> hour of assembly time. The company <const_dir>can buy</const_dir> <limit>200</limit> silicon chips per week, and has <const_dir>available</const_dir> <limit>250</limit> hours of engineering and <limit>300</limit> hours of assembly. The <obj_name>profit</obj_name> per <var>phone</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>laptop</var> is $<param>500</param>. Formulate a LP to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name> if they want to produce <const_dir>at least</const_dir> <limit>30</limit> units of <var>phones</var> and <const_dir>at least</const_dir> <limit>30</limit> units of <var>laptops</var> each week.", "output": "max: 300 phone + 500 laptop\nst: 5 phone + 6 laptop <= 250\n     3 phone + 1 laptop <= 300\n     phones >= 30\n     laptops >= 30"}
{"input": "John and William run a woodshop where they make <var>chairs</var> and <var>nightstands</var>. Each <var>chair</var> takes <param>2</param> hours of John's time and <param>4</param> hours of William's time. Each <var>nightstand</var> takes <param>5</param> hours of John's time and <param>4</param> hours of William's time. In a week, John has <limit>30</limit> hours <const_dir>available</const_dir> and William has <limit>40</limit> hours <const_dir>available</const_dir>. If they get $<param>300</param> <obj_name>profit</obj_name> per <var>chair</var> sold and $<param>500</param> <obj_name>profit</obj_name> per <var>nightstand</var> sold, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 500 nightstand + 300 chair\nst: 2 chair + 5 nightstand <= 30\n     4 chair + 4 nightstand <= 40"}
{"input": "A glass artist makes <var>glass dogs</var> and <var>cats</var>. Each piece requires time heating, molding, and cooling. A <var>glass dog</var> requires <param>10</param> minutes of heating, <param>30</param> minutes of molding, and <param>20</param> minutes of cooling. A <var>glass cat</var> requires <param>15</param> minutes of heating, <param>20</param> minutes of molding, and <param>15</param> minutes of cooling. In his shop, he has <limit>1000</limit> minutes <const_dir>available</const_dir> for heating, <limit>1500</limit> minutes <const_dir>available</const_dir> for molding, and <limit>1200</limit> minutes <const_dir>available</const_dir> for cooling. If the <obj_name>profit</obj_name> per <var>glass dog</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>glass cat</var> is $<param>40</param>, how many of each should he make to <obj_dir>maximize</obj_dir> his <obj_name>profits</obj_name>?", "output": "max: 50 glass_dog + 40 glass_cat\nst: 10 glass_dog + 15 glass_cat <= 1000\n     30 glass_dog + 20 glass_cat <= 1500\n     20 glass_dog + 15 glass_cat <= 1200"}
{"input": "In a labor camp, the company makes <var>soup</var> and <var>sandwiches</var>. They need to ensure workers get <const_dir>at least</const_dir> <limit>2000</limit> calories, <limit>100</limit> grams of protein, and <limit>100</limit> grams of carbs. A can of <var>soup</var> <obj_name>costs</obj_name> $<param>1</param> and contains <param>200</param> calories, <param>5</param> grams of protein, and <param>4</param> grams of carbs. One <var>sandwich</var> <obj_name>costs</obj_name> $<param>3</param> and contains <param>250</param> calories, <param>10</param> grams of protein, and <param>15</param> grams of carbs. What is the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> diet that the company can provide for its workers?", "output": "min: 1 soup + 3 sandwich\nst: 200 soup + 250 sandwich >= 2000\n     5 soup + 10 sandwich >= 100\n     4 soup + 15 sandwich >= 100"}
{"input": "A factory has workers who knit <var>scarfs</var> and <var>toques</var> by hand. The factory has <limit>250000</limit> knitting minutes <const_dir>available</const_dir>. A <var>scarf</var> takes <param>20</param> minutes to knit and a <var>toque</var> takes <param>30</param> minutes to knit. The factory must make <const_dir>at least</const_dir> <limit>5000</limit> <var>scarfs</var> and <const_dir>at least</const_dir> <limit>3000</limit> <var>toques</var>. If the <obj_name>profit</obj_name> per <var>scarf</var> is $<param>20</param> and the <obj_name>profit</obj_name> per <var>toque</var> is $<param>25</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 scarf + 25 toque\nst: 20 scarf + 30 toque <= 250000\n     scarfs >= 5000\n     toques >= 3000"}
{"input": "In order to get some extra amino acids, Cindy drinks <var>orange juice</var> and <var>apple juice</var>. A glass of <var>orange juice</var> contains <param>2</param> units of Lysine, <param>3</param> units of Alanine, <param>5</param> units of Methionine, and <param>7</param> units of <obj_name>Glycine</obj_name>. A glass of <var>apple juice</var> contains <param>5</param> units of Lysine, <param>5</param> units of Alanine, <param>2</param> units of Methionine, and <param>1</param> unit of <obj_name>Glycine</obj_name>. She requires <const_dir>at least</const_dir> <limit>30</limit> units of Lysine, <const_dir>at least</const_dir> <limit>40</limit> units of Alanine, and <const_dir>at most</const_dir> <limit>50</limit> units of Methionine. How many glasses of each juice should she drink to <obj_dir>minimize</obj_dir> the <obj_name>amount of Glycine</obj_name> she gets.", "output": "min: 7 orange_juice + 1 apple_juice\nst: 2 orange_juice + 5 apple_juice >= 30\n     3 orange_juice + 5 apple_juice >= 40\n     5 orange_juice + 2 apple_juice <= 50"}
{"input": "A smoothie store sells two types of smoothies - a <var>small</var> and a <var>large size</var>. Both contain only ice cream and peanut butter. Each <var>small smoothie</var> requires <param>2</param> units of ice cream and <param>1</param> unit of peanut butter. Each <var>large smoothie</var> requires <param>3</param> units of ice cream and <param>2</param> units of peanut butter. The company only has a <const_dir>total</const_dir> of <limit>20</limit> units of ice cream and <limit>18</limit> units of peanut butter. If the <obj_name>profit</obj_name> per <var>small smoothie</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>large smoothie</var> is $<param>5</param>, how many of each should the store sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 small_smoothie + 5 large_smoothie\nst: 2 small_smoothie + 3 large_smoothie <= 20\n     1 small_smoothie + 2 large_smoothie <= 18"}
{"input": "A florist <const_dir>has</const_dir> <limit>40</limit> acres to grow <var>sunflowers</var> and <var>roses</var>. To ensure the flowers grow, the florist must use plant nutrition to feed the flowers. <var>Sunflowers</var> require <param>5</param> kg of plant nutrition per acre while <var>roses</var> require <param>8</param> kg of plant nutrition per acre. Due to the high cost of the plant nutrition, the florist wants to use <const_dir>at most</const_dir> <limit>230</limit> kg of plant nutrition. If the <obj_name>profit</obj_name> per acre of <var>sunflowers</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>roses</var> is $<param>375</param>, how many acres of each should the florist grow to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 sunflowers + 375 roses\nst: sunflowers + roses <= 40\n     5 Sunflowers + 8 roses <= 230"}
{"input": "An oil company produces <var>economical</var>, <var>regular</var> and <var>premium</var> grades of oil. Each tanker of <var>economical grade oil</var> produces a <obj_name>net revenue</obj_name> of $<param>500</param>, each tanker of <var>regular grade oil</var> produces a <obj_name>net revenue</obj_name> of $<param>1020</param>, and each tanker of <var>premium grade oil</var> produces a <obj_name>net revenue</obj_name> of $<param>920</param>. To produce a tanker of <var>economical grade oil</var>, <param>4</param> units of compound A and <param>2</param> units of compound B are required. To produce a tanker of <var>regular grade oil</var>, <param>5</param> units of compound A and <param>1</param> unit of compound B are required. To produce a tanker of <var>premium grade oil</var>, <param>8</param> units of compound A and <param>1</param> unit of compound B are required. Currently the company <const_dir>has</const_dir> <limit>200</limit>  units of compound A and <limit>100</limit> units of compound B to process. How many full or partial tankers of each oil grade should the company produce so that <obj_name>net revenue</obj_name> is <obj_dir>maximized</obj_dir>?", "output": "max: 500 economical_grade_oil + 1020 regular_grade_oil + 920 premium_grade_oil\nst: 4 economical_grade_oil + 5 regular_grade_oil + 8 premium_grade_oil <= 200\n     2 economical_grade_oil + 1 regular_grade_oil + 1 premium_grade_oil <= 100"}
{"input": "A smoothie store makes <var>fruit</var> and <var>vegetable smoothies</var>. It takes <param>5</param> minutes on the cutting machine and <param>5</param> minutes on the blending machine to make a <var>fruit smoothie</var>. It takes <param>7</param> minutes on the cutting machine and <param>4</param> minutes on the blending machine to make a <var>vegetable smoothie</var>. The <obj_name>profit</obj_name> per <var>fruit smoothie</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>vegetable smoothie</var> is $<param>5</param>. If both the cutting machine and blending machine are available for <const_dir>at most</const_dir> <limit>400</limit> minutes per day, how many of each smoothie should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 fruit_smoothie + 5 vegetable_smoothie\nst: 5 fruit_smoothie + 7 vegetable_smoothie <= 400\n     5 fruit_smoothie + 4 vegetable_smoothie <= 400"}
{"input": "A logging company has operations in opposite ends of the country. The company cuts three specific trees: Elm, Oak, and Aspen. The <var>west side</var> operation <obj_name>costs</obj_name> $<param>500</param> to operate per day and produces <param>10</param> elm trees <param>10</param> oak trees, and <param>3</param> aspen trees daily. The <var>east side</var> operation <obj_name>costs</obj_name> $<param>400</param> to operate per day and produces <param>8</param> elm trees, <param>3</param> oak trees, and <param>7</param> aspen trees daily. The logging company must <const_dir>provide</const_dir> a paper pulp with <limit>30</limit> elm trees, <limit>20</limit> oak trees, and <limit>20</limit> aspen trees per week. How many days a week should each operation be run in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while meeting the requirements.", "output": "min: 500 west_side + 400 east_side\nst: 10 west_side + 8 east_side >= 30\n     10 west_side + 3 east_side >= 20\n     3 west_side + 7 east_side >= 20"}
{"input": "A farmer <const_dir>has</const_dir> <limit>50</limit> acres of land on which he grows <var>lettuce</var> and <var>spinach</var>. Per acre of <var>lettuce</var>, it cost $<param>10</param> in watering costs and <param>2</param> days of picking time. Per acre of <var>spinach</var>, it costs $<param>12</param> in watering costs and <param>1</param> day of picking time. The farmer has a total of $<limit>5000</limit> <const_dir>available</const_dir> for watering costs and <limit>300</limit> days <const_dir>available</const_dir> for picking. If the <obj_name>profit</obj_name> per acre of <var>lettuce</var> is $<param>50</param> and the <obj_name>profit</obj_name> per acre of <var>spinach</var> is $<param>55</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 55 spinach + 50 lettuce\nst: spinach + lettuce <= 50\n     10 lettuce + 12 spinach <= 5000\n     2 lettuce + 1 spinach <= 300"}
{"input": "A clothing designer manufactures three dresses: long, short, and mini. These dresses are produced in two different factories: a local one, and a foreign one. Running the <var>local factory</var> for an hour <obj_name>costs</obj_name> $<param>600</param> and produces <param>23</param> long dresses, <param>11</param> short dresses, and <param>13</param> <var>mini dresses</var>. Running the <var>foreign factory</var> for an hour <obj_name>costs</obj_name> $<param>300</param> and yields <param>15</param> long dresses, <param>30</param> short dresses, and <param>15</param> <var>mini dresses</var>. To meet customer demands, a <const_dir>minimum</const_dir> of <limit>74</limit> long dresses, <limit>34</limit> short dresses, and <limit>26</limit> mini dresses must be produced daily. Graphically determine a daily production plan that <obj_dir>minimizes</obj_dir> the <obj_name>cost</obj_name> of meeting the clothing designer\u2019s daily demands.", "output": "min: 600 local_factory + 300 foreign_factory\nst: 23 local_factory + 15 foreign_factory >= 74\n     11 local_factory + 30 foreign_factory >= 34\n     13 local_factory + 15 foreign_factory >= 26"}
{"input": "A woodshop makes <var>tables</var> and <var>chairs</var>, using two processes: crafting and polishing. For each <var>table</var>, the woodworkers spend <param>5</param> hours crafting and <param>2</param> hours polishing. For each <var>chair</var>, the woodworkers spend <param>2</param> hours crafting and <param>1</param> hour polishing. On any day, there is a maximum of <limit>25</limit> crafting hours <const_dir>available</const_dir> and <limit>15</limit> polishing hours <const_dir>available</const_dir>. The <obj_name>profit</obj_name> from the sale of each <var>table</var> is $<param>1000</param> and the <obj_name>profit</obj_name> from the sale of each <var>chair</var> is $<param>300</param>. The woodshop can sell everything they make. How should they schedule daily production in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1000 table + 300 chair\nst: 5 table + 2 chair <= 25\n     2 table + 1 chair <= 15"}
{"input": "A factory makes <var>backpacks</var> and <var>handbags</var> using a special machine. This machine must be operated for <const_dir>at least</const_dir> <limit>3000</limit> minutes per week. Each <var>backpack</var> takes <param>20</param> minutes on the machine while each <var>handbag</var> takes <param>15</param> minutes on the machine. The factory must make a <const_dir>minimum</const_dir> of <limit>180</limit> items total. If the <obj_name>cost</obj_name> for producing a <var>backpack</var> is $<param>5</param> and the <obj_name>cost</obj_name> for producing a <var>handbag</var> is $<param>8</param>, how many of each should be made to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 8 handbag + 5 backpack\nst: 20 backpack + 15 handbag >= 3000\n     handbag + backpack <= 180"}
{"input": "A video game store sells <var>regular games</var> and <var>collector's edition games</var>. Each <var>regular game</var> costs the store $<param>30</param> while each <var>collector's edition game</var> costs the store $<param>50</param>.  The <obj_name>profit</obj_name> per <var>regular game</var> sold is $<param>20</param> while the <obj_name>profit</obj_name> per <var>collector's edition game</var> sold is $<param>30</param>. The store can sell <const_dir>at most</const_dir> <limit>100</limit> video games of either type per month and wants to spend <const_dir>at most</const_dir> $<limit>4000</limit>. How many of each should the store stock to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 regular_game + 30 collector's_edition_game\nst: regular_game + collector's_edition_game <= 100\n     30 regular_game + 50 collector's_edition_game <= 4000"}
{"input": "Two paints of different quality, <var>cheap</var> and <var>expensive</var>, have quality ratings of <param>50</param> and <param>90</param>, respectively. The <var>cheap paint</var> <obj_name>costs</obj_name> $<param>0.30</param> per liter while the <var>expensive paint</var> <obj_name>costs</obj_name> $<param>1.50</param> per liter. In order to paint his fence, John wants to use a mix of paint with a quality of <const_dir>at least</const_dir> <limit>80</limit>. This ensures that the paint on the fence will withstand a few storms. What blend of the two paints should he mix in order to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>? [Hint: Let x be the fraction of each liter that is cheap paint and y be the fraction that is expensive paint.]", "output": "min: 0.30 cheap_paint + 1.50 expensive_paint\nst: 50 cheap + 90 expensive >= 80"}
{"input": "Jane goes to a supplement store that sells two powders, <var>Alpha</var> and <var>Beta</var>, for iron and biotin. The <obj_name>cost</obj_name> per scoop of <var>alpha</var> is $<param>1</param> while the <obj_name>cost</obj_name> per scoop of <var>Beta</var> is $<param>2</param>. A scoop of <var>Alpha</var> contains <param>5</param> grams of iron and <param>20</param> grams of biotin. A scoop of <var>Beta</var> contains <param>10</param> grams if iron and <param>3</param> grams of biotin. A doctor has recommended that Jane takes <const_dir>at least</const_dir> <limit>50</limit> grams of iron and <limit>40</limit> grams of biotin daily. Formulate as a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 1 alpha + 2 Beta\nst: 5 Alpha + 10 Beta >= 50\n     20 Alpha + 3 Beta >= 40"}
{"input": "A farmer <const_dir>has</const_dir> <limit>200</limit> acres of land on which he grows <var>corn</var> and <var>cabbage</var>. It takes <param>1</param> day of tractor time and <param>2</param> days of hand-picking time per acre of <var>corn</var>. It takes <param>1.5</param> days of tractor time and <param>3</param> days of hand-picking time per acre of <var>cabbage</var>. In a year, there are <limit>200</limit> days <const_dir>available</const_dir> for tractor use and <limit>275</limit> days <const_dir>available</const_dir> for hand-picking. If the <obj_name>profit</obj_name> per acre of <var>corn</var> is $<param>50</param> and the <obj_name>profit</obj_name> per acre of <var>cabbage</var> is $<param>70</param>, how many acres of each should be grown in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 corn + 70 cabbage\nst: corn + cabbage <= 200\n     1 corn + 1.5 cabbage <= 200\n     2 corn + 3 cabbage <= 275"}
{"input": "A factory makes <var>violins</var> and <var>harps</var>. A <var>violin</var> takes <param>6</param> hours of woodworking time and <param>2.5</param> hours of assembling time. A <var>harp</var> takes <param>2</param> hours of woodworking time and <param>10</param> hours of assembling time. The factory has <const_dir>at most</const_dir> <limit>100</limit> hours of woodworking time and <limit>150</limit> hours of assembling time available per day among all the workers. The <obj_name>profit</obj_name> per <var>violin</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>harp</var> is $<param>350</param>. How many of each instrument should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 350 harp + 200 violin\nst: 6 violin + 2 harp <= 100\n     2.5 violin + 10 harp <= 150"}
{"input": "A gardener <const_dir>has</const_dir> <limit>30</limit> acres to grow <var>peas</var> and <var>beans</var>. Each acre of <var>peas</var> requires $<param>30</param> of bug-spray and <param>2</param> hours of care-taking. Each acre of <var>beans</var> requires $<param>50</param> of bug-spray and <param>1.5</param> hours of care-taking. The gardener has at most $<limit>1300</limit> <const_dir>available</const_dir> to spend on bug-spray and <limit>50</limit> hours <const_dir>available</const_dir> to spend on care-taking. If the <obj_name>profit</obj_name> per acre of <var>peas</var> is $<param>100</param> and the <obj_name>profit</obj_name> per acre of <var>beans</var> is $<param>160</param>, how many acres of each should the gardener grow to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 peas + 160 beans\nst: peas + beans <= 30\n     30 peas + 50 beans <= 1300\n     2 peas + 1.5 beans <= 50"}
{"input": "A store sells two different scents of hand lotion, <var>Eucalyptus</var> and <var>Citrus</var>. The store owner pays $<param>6</param> for a bottle of <var>Eucalyptus lotion</var> and $<param>8</param> for a bottle of <var>Citrus lotion</var>. A bottle of <var>Eucalyptus lotion</var> yields a <obj_name>profit</obj_name> of $<param>1</param> while a bottle of <var>Citrus lotion</var> yields a <obj_name>profit</obj_name> of $<param>4</param>. The store owner estimates that <const_dir>no more than</const_dir> <limit>1500</limit> bottles of lotion will be sold every month and she does not plan to invest <const_dir>more than</const_dir> $<limit>10000</limit> in inventory for these lotions. How many bottles of each lotion should be stocked in order to <obj_dir>maximize</obj_dir> her total <obj_name>profit</obj_name>?", "output": "max: 1 Eucalyptus_lotion + 4 Citrus_lotion\nst: 6 Eucalyptus_lotion + 8 Citrus_lotion <= 10000\n     Eucalyptus_lotion + Citrus_lotion <= 1500"}
{"input": "A jewelry shop designs and crafts two types of necklaces: <var>diamond</var> and <var>gold necklaces</var>. Each <var>diamond necklaces</var> take <param>3</param> hours to design and <param>10</param> hours to craft. Each <var>gold necklaces</var> take <param>5</param> hours to design and <param>2</param> hours to craft. The designing team is <const_dir>available</const_dir> for <limit>30</limit> hours and the crafting team is <const_dir>available</const_dir> for <limit>45</limit> hours. The <obj_name>profit</obj_name> is $<param>1500</param> per <var>diamond necklace</var> and $<param>500</param> per <var>gold necklace</var>. How many necklaces of each type should the shop make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 1500 diamond_necklace + 500 gold_necklace\nst: 3 diamond_necklaces + 5 gold_necklaces <= 30\n     10 diamond_necklaces + 2 gold_necklaces <= 45"}
{"input": "A vehicle company makes <var>bikes</var> and <var>cars</var>, each requiring use of an assembly machine and a painting machine. It takes <param>1</param> hour on the assembly machine and <param>0.5</param> hours on the painting machine to make a <var>bike</var>. On the other hand, it takes <param>3</param> hours on the assembly machine and <param>1</param> hour on the painting machine to make a <var>car</var>. The <obj_name>profit</obj_name> per <var>bike</var> is $<param>1000</param> and the <obj_name>profit</obj_name> per <var>car</var> is $<param>3000</param>. The assembly machine is available for <const_dir>at most</const_dir> <limit>10</limit> hours per day and the painting machine is available for <const_dir>at most</const_dir> <limit>8</limit> hours per day. How many of each vehicle should the company make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1000 bike + 3000 car\nst: 1 bike + 3 car <= 10\n     0.5 bike + 1 car <= 8"}
{"input": "A bath store makes <var>rubber ducks</var> and <var>toy boats</var>. The <obj_name>profit</obj_name> per <var>rubber duck</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>toy boat</var> is $<param>4</param>. Each <var>rubber ducks</var> take <param>5</param> minutes of preparation and <param>3</param> minutes of testing to make. Each <var>toy boat</var> takes <param>8</param> minutes of preparation and <param>2</param> minutes of testing. In a week, there are <limit>1000</limit> minutes <const_dir>available</const_dir> for preparation and <limit>700</limit> minutes <const_dir>available</const_dir> for testing. How many of each should the bath store make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 rubber_duck + 4 toy_boat\nst: 5 rubber_ducks + 8 toy_boat <= 1000\n     3 rubber_ducks + 2 toy_boat <= 700"}
{"input": "A store sells honey-roasted almonds and chocolate-covered almonds in bulk. The <var>first mix</var> contains <param>30%</param> honey-roasted almonds and <param>70%</param> chocolate-covered almonds. The <var>second mix</var> contains <param>40%</param> honey-roasted almonds and <param>60%</param> chocolate-covered almonds. The store <const_dir>has on hand</const_dir> <limit>100</limit> kg of honey-roasted almonds and <limit>150</limit> kg of chocolate-covered almonds. If the <obj_name>profit</obj_name> per kg of the <var>first mix</var> is $<param>12</param> and the <obj_name>profit</obj_name> per kg of the <var>second mix</var> is $<param>15</param>, how many kg of each should be prepared to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 first_mix + 15 second_mix\nst: 30% first_mix + 40% second_mix <= 100\n     70% first_mix + 60% second_mix <= 150"}
{"input": "A seafood market sells scallops, mussels, and oysters in packages named <var>seafood medley one</var> and <var>seafood medley two</var>. A package of <var>seafood medley one</var> contains <param>20</param> grams of scallops, <param>30</param> grams of mussels, and <param>50</param> grams of oysters. A package of <var>seafood medley two</var> contains <param>40</param> grams of scallops, <param>40</param> grams of mussels, and <param>20</param> grams of oysters. The market has <const_dir>available</const_dir> <limit>10000</limit> grams of scallops, <limit>12000</limit> grams of mussels, and <limit>11000</limit> grams of oysters. If the <obj_name>profit</obj_name> per package of <var>seafood medley one</var> is $<param>20</param> and the <obj_name>profit</obj_name> per package of <var>seafood medley two</var> is $<param>25</param>, how many of each should be sold to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 seafood_medley_one + 25 seafood_medley_two\nst: 20 seafood_medley_one + 40 seafood_medley_two <= 10000\n     30 seafood_medley_one + 40 seafood_medley_two <= 12000\n     50 seafood_medley_one + 20 seafood_medley_two <= 11000"}
{"input": "A lighting company makes 2 types of lightbulbs, <var>LED</var> and <var>Halogen</var>. Each type of lightbulb requires time on a plastics machine and a wiring machine. It takes <param>6</param> minutes on the plastics machine and <param>12</param> minutes on the wiring machine to make a package of <var>LED lightbulbs</var>. On the other hand, it takes <param>9</param> minutes on the plastics machine and <param>10</param> minutes on the wiring machine to make a package of <var>Halogen lightbulbs</var>. The <obj_name>profit</obj_name> per package of <var>LED lightbulbs</var> is $<param>30</param> and the <obj_name>profit</obj_name> per package of <var>Halogen lightbulbs</var> is $<param>50</param>. If both machines are available for <const_dir>at most</const_dir> <limit>500</limit> minutes per day, how many packages of each lightbulb should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 LED_lightbulbs + 50 Halogen_lightbulbs\nst: 6 LED_lightbulbs + 9 Halogen_lightbulbs <= 500\n     12 LED_lightbulbs + 10 Halogen_lightbulbs <= 500"}
{"input": "An office is purchasing two different printers for their entire office. <var>Printer A</var> can print <param>10</param> sheets per minute, requires <param>3</param> ink cartridges per year, and <obj_name>costs</obj_name> $<param>500</param>. <var>Printer B</var> can print <param>30</param> sheets per minute, requires <param>8</param> ink cartridges per year, and <obj_name>costs</obj_name> $<param>1200</param>. The office wants to make sure they can print <const_dir>at least</const_dir> <limit>100</limit> sheets per minute total and that they use <const_dir>at most</const_dir> <limit>27</limit> ink cartridges per year. How many of each printer should be purchased to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 500 Printer_A + 1200 Printer_B\nst: 10 Printer_A + 30 Printer_B >= 100\n     3 Printer_A + 8 Printer_B <= 27"}
{"input": "A hardware manufacturer makes <var>CPUs</var> and <var>GPUs</var>. Each <var>CPU</var> requires <param>30</param> minutes of wiring while each <var>GPU</var> requires <param>90</param> minutes of wiring. In addition, each <var>CPU</var> requires <param>50</param> minutes of soldering and each <var>GPU</var> requires <param>40</param> minutes of soldering. The manufacturer has <const_dir>at most</const_dir> <limit>2000</limit> minutes for wiring and <const_dir>at most</const_dir> <limit>2500</limit> minutes for soldering. If the <obj_name>profit</obj_name> per <var>CPU</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>GPU</var> is $<param>500</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 GPU + 300 CPU\nst: 30 CPU + 90 GPU <= 2000\n     50 CPU + 40 GPU <= 2500"}
{"input": "A chair store sells <var>leather</var> and <var>mesh chairs</var>. A <var>leather chair</var> costs the store $<param>500</param> and a <var>mesh chair</var> costs the stores $<param>300</param>. The <obj_name>profit</obj_name> per <var>leather chair</var> sold is $<param>250</param> and the <obj_name>profit</obj_name> per <var>mesh chair</var> sold is $<param>200</param>. The store does not want to invest <const_dir>more that</const_dir> $<limit>50000</limit> on chairs and estimates a monthly demand of <const_dir>at most</const_dir> <limit>125</limit> chairs. How many of each chair should the store stock in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 250 leather_chair + 200 mesh_chair\nst: 500 leather_chair + 300 mesh_chair <= 50000\n     leather_chair + mesh_chair <= 125"}
{"input": "A farmer has 30 cows and feeds them on <var>enriched hay</var> and <var>chicken scraps</var>. <var>Enriched hay</var> <obj_name>costs</obj_name> $<param>200</param> per kilogram while <var>chicken scraps</var> <obj_name>cost</obj_name> $<param>350</param> per kilogram. Each kilogram of  <var>enriched hay</var> contains <param>0.3</param> kilograms of protein, <param>0.1</param> kilograms of vitamins, and <param>0.15</param> kilograms of minerals. Each kilogram of <var>chicken scraps</var> contains <param>0.6</param> kilograms of protein, <param>0.2</param> kilograms of vitamins, and <param>0.05</param> kilograms of minerals. Each cow requires a <const_dir>minimum</const_dir> of  <limit>1.5</limit> kilograms of protein and <limit>0.5</limit> kilograms of minerals per day. However, each cow can have <const_dir>at most</const_dir> <limit>0.5</limit> kilograms of vitamins per day. How should the farmer feed his cows in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while ensuring the cows get the required nutrition?", "output": "min: 200 Enriched_hay + 350 chicken_scraps\nst: 0.3 enriched_hay + 0.6 chicken_scraps >= 1.5\n     0.15 enriched_hay + 0.05 chicken_scraps >= 0.5\n     0.1 enriched_hay + 0.2 chicken_scraps <= 0.5"}
{"input": "Jake uses two 3D-printers, Printer A and Printer B, to make his <var>superhero</var> and <var>cartoon figurines</var>. To make one <var>superhero figurine</var> requires <param>5</param> hours of time on Printer A and <param>4</param> hours of time on Printer B. To make one <var>cartoon figurine</var> requires <param>3</param> hours on Printer A and <param>7</param> hours on Printer B. Each machine can run for <const_dir>at most</const_dir> <limit>1000</limit> hours. If Jake makes a <obj_name>profit</obj_name> of $<param>10</param> per <var>superhero figurine</var> and $<param>8</param> per <var>cartoon figurine</var>, how many of each should he make to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 10 superhero_figurine + 8 cartoon_figurine\nst: 5 superhero_figurine + 3 cartoon_figurine <= 1000\n     4 superhero_figurine + 7 cartoon_figurine <= 1000"}
{"input": "An ice cream bar sells <var>vanilla</var> and <var>chocolate ice cream</var> cones. The <obj_name>profit</obj_name> per cone of <var>vanilla ice cream</var> is $<param>2</param> and the <obj_name>profit</obj_name> per cone of <var>chocolate ice cream</var> is $<param>3</param>. The ice cream bar must make <const_dir>at lest</const_dir> <limit>20</limit> cones of <var>vanilla ice cream</var> but <const_dir>cannot make more than</const_dir> <limit>50</limit> cones. It must also make <const_dir>at least</const_dir> <limit>25</limit> cones of <var>chocolate ice cream</var> but <const_dir>can not make more than</const_dir> <limit>60</limit> cones. In total, the ice cream bar can make <const_dir>at most</const_dir> <limit>80</limit> cones. How many cones of each flavor should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 vanilla_ice_cream + 3 chocolate_ice_cream\nst: vanilla_ice_cream >= 20\n     chocolate_ice_cream >= 25\n     vanilla_ice_cream <= 50\n     chocolate_ice_cream <= 60\n     vanilla_ice_cream + chocolate_ice_cream <= 80"}
{"input": "A fitness trainer has decided to mix two brands of protein drinks to create a new mixture. The <var>Alpha brand</var> <obj_name>costs</obj_name> $<param>5</param> per bottle and contains <param>10</param> units of protein, <param>5</param> units of carbs, and <param>6</param> units of fat. The <var>Gamma brand</var> <obj_name>costs</obj_name> $<param>8</param> per bottle and contains <param>15</param> units of protein, <param>10</param> units of carbs, and <param>3</param> units of fat. The trainer wants to create a mixture having <const_dir>at least</const_dir> <limit>100</limit> units of protein, <limit>80</limit> units of carbs, and <limit>60</limit> units of fat. How many bottles of each brand drink should be mixed to create the new mixture at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 8 Gamma_brand + 5 Alpha_brand\nst: 10 Alpha_brand + 15 Gamma_brand >= 100\n     5 Alpha_brand + 10 Gamma_brand >= 80\n     6 Alpha_brand + 3 Gamma_brand >= 60"}
{"input": "A gardener has a garden full of <var>daisies</var> and <var>lilies</var>, and picks them everyday for sale. The <obj_name>profit</obj_name> per bouquet of <var>daisies</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per bouquet of <var>lilies</var> sold is $<param>4</param>. Each bouquet of <var>daisies</var> needs <param>3</param> minutes of clipping and <param>2</param> minutes of packaging. Each bouquet of <var>lilies</var> requires <param>1</param> minute of clipping and <param>3</param> minutes of packaging. In total, there are <limit>1000</limit> minutes <const_dir>available</const_dir> for clipping and <limit>650</limit> minutes <const_dir>available</const_dir> for packaging. Having signed a contract with a local restaurant, <const_dir>at least</const_dir> <limit>25</limit> bouquets of <var>daisies</var> must be picked. There is no such limit on bouquets of <var>lilies</var>. Formulate a LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 5 daisies + 4 lilies\nst: 3 daisies + 1 lilies <= 1000\n     2 daisies + 3 lilies <= 650\n     daisies >= 25"}
{"input": "A landscaper provides 3 landscaping layouts using different amounts of rock, mulch, and grass. He <const_dir>has</const_dir> <limit>1200</limit> units of rock, <limit>700</limit> units of mulch, and <limit>2000</limit> units of grass. A <var>type A layout</var> has <param>10</param> units of rock, <param>7</param> units of mulch, and <param>15</param> units of grass. A <var>type B layout</var> has <param>5</param> units of rock, <param>12</param> units of mulch, and <param>10</param> units of grass. A <var>type C layout</var> has <param>12</param> units of rock, <param>4</param> units of mulch, and <param>12</param> units of grass. The <obj_name>profit</obj_name> is $<param>200</param> for each <var>type A layout</var>, $<param>175</param> for each <var>type B layout</var>, and $<param>225</param> for each <var>type C layout</var>. How many layouts of each type should be used to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 type_A_layout + 175 type_B_layout + 225 type_C_layout\nst: 10 type_A_layout + 5 type_B_layout + 12 type_C_layout <= 1200\n     7 type_A_layout + 12 type_B_layout + 4 type_C_layout <= 700\n     15 type_A_layout + 10 type_B_layout + 12 type_C_layout <= 2000"}
{"input": "GameShop would like to attract <const_dir>at least</const_dir> <limit>200</limit> customers into its store daily. Therefore, it decides to sell two popular video games, <var>Kommand</var> and <var>Kontrol</var>, at steep discount to attract foot traffic. The GameShop owner pays $<param>14</param> and $<param>8</param> for each unit of <var>Kommand</var> and <var>Kontrol</var> respectively and has at its disposition a <const_dir>maximum daily budget</const_dir> of $<limit>500</limit> for this sales campaign. For each unit of <var>Kommand</var> game sold, GameShop incurs an <obj_name>cost</obj_name> of $<param>11</param> and attracts <param>20</param> fans into its store in average. In comparison, each unit of <var>Kontrol</var> incurs a lower <obj_name>cost</obj_name> of $<param>3</param> but only attracts <param>5</param> fans in average. How many units of each video game should be stocked daily to meet his campaign while <obj_dir>minimizing</obj_dir> its <obj_name>cost</obj_name>?", "output": "min: 3 Kontrol + 11 Kommand\nst: 14 Kommand + 8 Kontrol <= 500\n     20 Kommand + 5 Kontrol >= 200"}
{"input": "A farming group <const_dir>has</const_dir> <limit>1000</limit> acres of land on which they plan to grow <var>potatoes</var> and <var>squash</var>. They have <const_dir>at most</const_dir> <limit>1200</limit> hours of tractor time available and $<limit>26400</limit> of capital available. Each acre of <var>potatoes</var> requires <param>20</param> hours of tractor work and $<param>10</param> of capital, and each acre of <var>squash</var> requires <param>23</param> hours of tractor work and $<param>110</param> of capital. If the <obj_name>profit</obj_name> from an acre of <var>potatoes</var> is $<param>700</param> and the <obj_name>profit</obj_name> from an acre of <var>squash</var> is $<param>144</param>, how many acres of each crop should they plant to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 700 potatoes + 144 squash\nst: potatoes + squash <= 1000\n     20 potatoes + 23 squash <= 1200\n     10 potatoes + 110 squash <= 26400"}
{"input": "A food manufacturer wishes to mix <var>pork</var> and <var>chicken</var> to create sausages. The mixture needs to contain <const_dir>at least</const_dir> <limit>10</limit> units of protein and <limit>15</limit> units of fat. <var>Pork</var> <obj_name>costs</obj_name> $<param>40</param> per kg and <var>chicken</var> <obj_name>costs</obj_name> $<param>50</param> per kg. Per kilogram, <var>pork</var> contains <param>2</param> units of protein and <param>4</param> units of fat. Per kilogram, <var>chicken</var> contains <param>3</param> units of protein and <param>2</param> units of fat. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of the mixture.", "output": "min: 40 Pork + 50 chicken\nst: 2 pork + 3 chicken >= 10\n     4 pork + 2 chicken >= 15"}
{"input": "Iron and zinc are found in <var>elk meat</var> and <var>bison meat</var>. A serving of <var>elk meat</var> <obj_name>costs</obj_name> $<param>6</param> and contains <param>5</param> units of iron and <param>3</param> units of zinc. A serving of <var>bison meat</var> <obj_name>costs</obj_name> $<param>7</param> and contains <param>4</param> units of iron and <param>4</param> units of zinc. If <const_dir>at least</const_dir> <limit>30</limit> units of iron and <limit>40</limit> units of zinc must be consumed daily, formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 6 elk_meat + 7 bison_meat\nst: 5 elk_meat + 4 bison_meat >= 30\n     3 elk_meat + 4 bison_meat >= 40"}
{"input": "A caviar company makes caviar in two different locations, an <var>eastern location</var> and a <var>western location</var>. After harvesting the caviar from the fish, they are labelled as cheap, regular, or expensive. The <var>eastern location</var> <obj_name>costs</obj_name> $<param>1000</param> to operate per day and produces <param>5</param> tons of cheap caviar, <param>7</param> tons of regular caviar, and <param>1</param> ton of expensive caviar. The <var>western location</var> <obj_name>costs</obj_name> $<param>2000</param> to operate per day and produces <param>2</param> tons of cheap caviar, <param>6</param> tons of regular caviar, and <param>4</param> tons of expensive caviar. The company is also under contract to <const_dir>provide</const_dir> <limit>25</limit> tons of cheap caviar, <limit>35</limit> tons of regular caviar, and <limit>15</limit> tons of expensive caviar per week to a distribution company. How many days per week should each location operate to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 1000 eastern_location + 2000 western_location\nst: 5 eastern_location + 2 western_location >= 25\n     7 eastern_location + 6 western_location >= 35\n     1 eastern_location + 4 western_location >= 15"}
{"input": "A food truck sells and delivers <var>rice bowls</var> and <var>quesadillas</var> during the pandemic. The <obj_name>profit</obj_name> on a <var>rice bowl</var> is <param>3</param>$, and the <obj_name>profit</obj_name> on a <var>quesadilla</var> is <param>2$.</param> In order to thrive, it must sell <const_dir>at least</const_dir> <limit>40</limit> <var>rice bowls</var> but can <const_dir>make only up to</const_dir> <limit>70</limit> in a day. It must also sell <const_dir>at least</const_dir> <limit>50</limit> <var>quesadillas</var> due to its high demand, but can <const_dir>not prepare more than</const_dir> <limit>80</limit> a day. Due to staff shortage, the food truck can only prepare up to <limit>100</limit> items <const_dir>in total</const_dir>. How many of each food item should it prepare to satisfy its customers and <obj_dir>maximize</obj_dir> its daily <obj_name>profit</obj_name>?", "output": "max: 3 rice_bowl + 2$. quesadilla\nst: rice_bowls >= 40\n     rice_bowls <= 70\n     quesadillas >= 50\n     quesadillas <= 80\n     rice_bowl + quesadilla <= 100"}
{"input": "One batch of <var>chocolate chip cookies</var> is made of  <param>314</param>g of flour and <param>15</param>g of butter while a batch of <var>oatmeal cookies</var> requires <param>271</param>g of flour and <param>82</param>g of butter. Find the <obj_dir>maximum</obj_dir> <obj_name>number of batches of cookies</obj_name> we can bake <const_dir>using</const_dir> <param>3000</param>g of flour and <param>2000</param>g of butter assuming that there is no shortage of the other ingredients used in making the cookies.", "output": "max: \nst: 271 oatmeal_cookies + 314 chocolate_chip_cookies <= 3000\n     82 oatmeal_cookies + 15 chocolate_chip_cookies <= 2000"}
{"input": "Matter Auto manufactures EV cars and hybrid trucks that are targeted for baby boomers and millennials. To market these two products, Matter Auto has launched a boisterous ads campaign and has decided to purchase TV commercial spots on two channels: <var>TV shows</var> and <var>sports programs</var>. Each <var>sports ad</var> is seen by <param>4</param> million baby boomers and <param>18</param> million millennials and <obj_name>costs</obj_name> $<param>90,000</param>. Each <var>TV show</var> commercial is watched by <param>12</param> million baby boomers and <param>5</param> million millennials, and <obj_name>costs</obj_name> $<param>20,000</param>. Matter Auto would like to reach <const_dir>at least</const_dir> <limit>40</limit> million baby boomers and <limit>25</limit> million millennials. Determine how Matter Auto can meet its advertising requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 90,000 sports_ad + 20,000 TV_show\nst: 4 sports_ad + 12 TV_show >= 40\n     18 sports_ad + 5 TV_show >= 25"}
{"input": "George has <const_dir>acquired</const_dir> <limit>200</limit> acres of land in the tropics. He wants to plant <var>coconut trees</var> and <var>banana trees</var>, as he knows he can sell all the <var>bananas</var> and <var>coconuts</var> harvested. <var>Coconut trees</var> cost $<param>200</param> per acre to maintain, yield a <obj_name>profit</obj_name> of $<param>400</param> per acre, and require <param>5</param> days worth of labor per acre. <var>Banana trees</var> cost $<param>150</param> per acre to maintain, yield a <obj_name>profit</obj_name> of $<param>350</param> per acre, and require <param>4</param> days worth of labor per acre. George has a <const_dir>budget</const_dir> of $<limit>15000</limit> and <limit>750</limit> days worth of labor <const_dir>available</const_dir> (among all his workers). How many acres of each tree should George plant in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 Coconut_trees + 350 Banana_trees\nst: Coconut_trees + Banana_trees <= 200\n     200 Coconut_trees + 150 Banana_trees <= 15000\n     5 Coconut_trees + 4 Banana_trees <= 750"}
{"input": "An vehicle company manufactures two types of vehicles: <var>cars</var> and <var>bikes</var>. A <var>car</var> requires <param>3</param> hours of engineering time while a <var>bike</var> requires <param>1</param> hour of engineering time. Both vehicles require <param>30</param> kg of steel. The company <const_dir>receives</const_dir> <limit>1000</limit> kg of steel each week and a total of <limit>400</limit> hours of engineering time is <const_dir>available</const_dir>. Each <var>car</var> nets $<param>5000</param> in <obj_name>profit</obj_name>, while each <var>bike</var> nets $<param>1000</param> in <obj_name>profit</obj_name>. The company wishes to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>. Ignoring the divisibility issues, construct a linear programming problem whose solution will determine the number of each type of vehicle the company should produce.", "output": "max: 5000 car + 1000 bike\nst: 3 car + 1 bike <= 400\n     30 car + 30 bike <= 1000"}
{"input": "A phone company makes two phone models: a <var>touchscreen phone</var> and a <var>flip phone</var> . Each <var>touchscreen phone</var> requires <param>30</param> minutes of hardware setup and <param>20</param> minutes of software verification. Each <var>flip phone</var> requires <param>80</param> minutes of hardware setup and <param>15</param> minutes of software verification. The <const_dir>maximum</const_dir> available time for hardware setup is <limit>5000</limit> minutes and the <const_dir>maximum</const_dir> available time for software verification is <limit>3750</limit> minutes. If the company makes a <obj_name>profit</obj_name> of $<param>150</param> per <var>touchscreen phone</var> and a <obj_name>profit</obj_name> of $<param>200</param> per <var>flip phone</var>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 flip_phone + 150 touchscreen_phone\nst: 30 touchscreen_phone + 80 flip_phone <= 5000\n     20 touchscreen_phone + 15 flip_phone <= 3750"}
{"input": "A beauty and health company makes two types of dish detergents <var>Fruity Loop</var> and <var>Passion Cook</var>. <var>Fruity Loop</var> consists of <param>10%</param> soap and <param>6%</param> citric acid and <var>Passion Cook</var> consists of <param>5%</param> soap and <param>10%</param> citric acid. After doing some research, the company realizes that it needs to use <const_dir>at least</const_dir> <limit>20</limit> kg of soap and <limit>15</limit> kg of citric acid. If <var>Fruity Loop</var> <obj_name>costs</obj_name> $<param>6</param> per kg and <var>Passion Cook</var> <obj_name>costs</obj_name> $<param>5</param> per kg, determine how much of each type of detergents should be produced so that nutrient requirements are met at a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 6 Fruity_Loop + 5 Passion_Cook\nst: 6% Fruity_Loop + 10% Passion_Cook >= 15\n     10% Fruity_Loop + 5% Passion_Cook >= 20"}
{"input": "A weight loss program needs to include a <const_dir>minimum</const_dir> of <limit>200</limit> units of protein and <limit>50</limit> units of carbs. There are two cuisine options available: <var>Indian</var> and <var>Thai</var>. One plate of <var>Indian food</var> contains <param>13</param> units of protein and <param>23</param> units of carbs. One plate of <var>Thai food</var> contains <param>8</param> units of protein and <param>12</param> units of carbs. <var>Indian food</var> <obj_name>costs</obj_name> $ <param>12</param> per plate food and <var>Thai food</var> <obj_name>costs</obj_name> $ <param>15</param> per plate. Find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> for the program that can consist of a mixture of the cuisines and at the same time meet the minimal protein and carb requirements.", "output": "min: 12 Indian_food + 15 Thai_food\nst: 13 Indian_food + 8 Thai_food >= 200\n     23 Indian_food + 12 Thai_food >= 50"}
{"input": "John has <var>pears</var> and <var>broccoli</var> to eat. A pound of <var>pears</var> <obj_name>costs</obj_name> $<param>6</param> and contains <param>2</param> units of calcium, <param>5</param> units of potassium, and <param>3</param> units of magnesium per pound. A pound of <var>broccoli</var> <obj_name>costs</obj_name> $<param>8</param> and contains <param>4</param> units of calcium, <param>3</param> units of potassium, and <param>6</param> units of magnesium per pound. There is nothing else available to eat and John must meet his daily requirements of <const_dir>at least</const_dir> <limit>15</limit> units of calcium, <limit>20</limit> units of potassium, and <limit>17</limit> units of magnesium. How many pounds of each should John eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 8 broccoli + 6 pears\nst: 2 pears + 4 broccoli >= 15\n     5 pears + 3 broccoli >= 20\n     3 pears + 6 broccoli >= 17"}
{"input": "East Oak Designs are famous for its high-end furniture. Each <var>sofa</var> produced by East Oak Designs nets the company a <obj_name>profit</obj_name> of $<param>400</param>. Each <var>kitchen cabinet</var> yields a $<param>1200</param> <obj_name>profit</obj_name>. Every week, <limit>100</limit> gallons of lacquer and <limit>300</limit> lengths of high-quality oak are <const_dir>available</const_dir>. Each <var>sofa</var> requires approximately <param>3</param> gallon of lacquer and <param>10</param> length of oak. Each <var>kitchen cabinet</var> takes <param>10</param> gallon of lacquer and <param>24</param> lengths of wood. What should the production plan for East Oak Designs to make a <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 sofa + 1200 kitchen_cabinet\nst: 3 sofa + 10 kitchen_cabinet <= 100\n     10 sofa + 24 kitchen_cabinet <= 300"}
{"input": "An actor needs to gain weight for a role and decides to eat only <var>pizza</var> and <var>donuts</var>. He wants to eat a <const_dir>minimum</const_dir> of <limit>3000</limit> calories per day and <const_dir>at least</const_dir> <limit>200</limit> grams of fat per day. Each <var>pizza</var> <obj_name>costs</obj_name> $<param>4</param> and contains <param>300</param> calories and <param>10</param> grams of fat. Each <var>donut</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>200</param> calories and <param>7</param> grams of fat. How many of each should the actor eat to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 4 pizza + 2 donut\nst: 300 pizza + 200 donut >= 3000\n     10 pizza + 7 donut >= 200"}
{"input": "A paper company makes two types of paper: <var>lined</var> and <var>unlined paper</var>. Each type of paper requires use of two machines, a printing machine and a scanning machine. It takes <param>2</param> minute on the printing machine and <param>5</param> minutes on the scanning machine to make a ream of <var>lined paper</var>. On the other hand, it takes <param>1</param> minute on the printing machine and <param>2</param> minutes on the scanning machine to make a ream of <var>unlined paper</var>. Each machine is available for a <const_dir>maximum</const_dir> of <limit>400</limit> minutes per day. The company sells a package of <var>lined paper</var> at a <obj_name>profit</obj_name> of $<param>5</param> and a package of <var>unlined paper</var> at a <obj_name>profit</obj_name> of $<param>3</param>. The company can sell all the paper it makes. How many reams of each type should the company produce in a day in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is that profit?", "output": "max: 5 lined_paper + 3 unlined_paper\nst: 2 lined_paper + 1 unlined_paper <= 400\n     5 lined_paper + 2 unlined_paper <= 400"}
{"input": "A popcorn store <const_dir>has</const_dir> <limit>30</limit> pounds of butter popcorn and <limit>40</limit> pounds of caramel popcorn. They sell two mixed bags: a <var>sweet mix</var>, and a <var>regular mix</var>. The <var>sweet mix</var> <obj_name>sells</obj_name> for $<param>3</param> a pound while the <var>regular mix</var> <obj_name>sells</obj_name> for $<param>2</param> a pound. The <var>sweet mix</var> has <param>75%</param> caramel popcorn and <param>25%</param> butter popcorn. The <var>regular mix</var> has <param>50%</param> caramel popcorn and <param>50%</param> regular popcorn. How many bags of each mix should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 sweet_mix + 2 regular_mix\nst: 75% sweet_mix + 50% regular_mix <= 30\n     25% sweet_mix + 50% regular_mix <= 40"}
{"input": "A computer network company designed plans to bid for the job of providing a computer network for city offices. He will use workstations, servers, and switches in three types of layouts. He <const_dir>has</const_dir> <limit>3000</limit> workstations, <limit>400</limit> servers, and <limit>200</limit> switches. A <var>star layout</var> uses <param>40</param> workstations, <param>10</param> servers, and <param>2</param> switches; a <var>circle layout</var> uses <param>20</param> workstations, <param>12</param> servers, and <param>5</param> switches; and a <var>snowflake layout</var> uses <param>323</param> workstations, <param>122</param> servers, and <param>41</param> switches. The net <obj_name>profit</obj_name> is $<param>2231</param> for each <var>star layout</var>, $<param>3434</param> for each <var>circle layout</var>, and $<param>8621</param> for each <var>snowflake layout</var>.  How many layouts of each type should be used to yield <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2231 star_layout + 3434 circle_layout + 8621 snowflake_layout\nst: 40 star_layout + 20 circle_layout + 323 snowflake_layout <= 3000\n     10 star_layout + 12 circle_layout + 122 snowflake_layout <= 400\n     2 star_layout + 5 circle_layout + 41 snowflake_layout <= 200"}
{"input": "A wood artist manufactures two types of decors made of rosewood. The first product, a <var>vase d\u00e9cor</var>, requires <param>20</param> minutes each for carving and <param>14</param> minutes each for polishing. The second d\u00e9cor is a <var>wood canvas</var> and it requires <param>18</param> minutes each for carving and <param>8</param> minutes each for polishing. There are <limit>400</limit> minutes <const_dir>available</const_dir> for carving and <limit>640</limit> for polishing. The <obj_name>profit</obj_name> is $<param>50</param> each for <var>vase d\u00e9cor</var> and $<param>85</param> for each <var>wood canvas</var>. How many decors of each type should the artist creates in order to <obj_dir>maximize</obj_dir> her <obj_name>profit</obj_name>?", "output": "max: 50 vase_d\u00e9cor + 85 wood_canvas\nst: 20 vase_d\u00e9cor + 18 wood_canvas <= 400\n     14 vase_d\u00e9cor + 8 wood_canvas <= 640"}
{"input": "Bob's trainer has given him a list of available food options as well as the macro nutrient content and cost per serving of each food. A certain amount of macro nutrients is required each day. For example, here is the data corresponding to <var>chicken</var> and <var>pork</var> and the three macro nutrients (proteins, carbs, and fat). Each serving of <var>chicken</var> contains <param>20</param> units of protein, <param>5</param> units of carbs, and <param>6</param> units of fat. Each serving of <var>pork</var> contains <param>15</param> units of protein, <param>3</param> units of carbs, and <param>8</param> units of fat. A serving of <var>chicken</var> <obj_name>costs</obj_name> $<param>10</param> and a serving of <var>pork</var> <obj_name>costs</obj_name> $<param>15</param>. Bob's trainer requires him to get <const_dir>at least</const_dir> <limit>100</limit> units of protein, <limit>50</limit> units of carbs, and <limit>30</limit> units of fat per day. Find out how many servings of each meat to consume per day to meet the requirements at <obj_dir>minimal</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 10 chicken + 15 pork\nst: 15 pork + 20 chicken >= 100\n     5 chicken + 3 pork >= 50\n     6 chicken + 8 pork >= 30"}
{"input": "A fruit farmer <const_dir>has</const_dir> <limit>80</limit> acres to grow <var>peaches</var> and <var>nectarines</var>. <var>Peaches</var> take <param>3</param> hours to plant per acre while <var>nectarines</var> take <param>4.5</param> hours to plant per acre. <var>Peaches</var> take <param>2</param> hours to water per acre while <var>nectarines</var> take <param>3</param> hours to water per acre. The farmer has <limit>300</limit> hours <const_dir>available</const_dir> for planting and <limit>250</limit> hours <const_dir>available</const_dir> for watering. If the <obj_name>profit</obj_name> per acre of <var>peaches</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>nectarines</var> is $<param>175</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 175 nectarines + 200 peaches\nst: nectarines + peaches <= 80\n     3 Peaches + 4.5 nectarines <= 300\n     2 Peaches + 3 nectarines <= 250"}
{"input": "A candy store <const_dir>has</const_dir> <limit>30</limit> kilograms of gummy bears and <limit>25</limit> kilograms of gummy worms. They sell two mixtures of these gummies: <var>mixture A</var> and <var>mixture B.</var> <var>Mixture A</var> is <param>75%</param> gummy bears and <param>25%</param> gummy worms. <var>Mixture B</var> is <param>40%</param> gummy bears and <param>60%</param> gummy worms. A kilogram of <var>mixture A</var> yields a <obj_name>profit</obj_name> of $<param>30</param> and a kilogram of <var>mixture B</var> yields a <obj_name>profit</obj_name> of $<param>40</param>. How many kilograms of each mixture should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 mixture_A + 40 mixture_B\nst: 75% Mixture_A + 40% Mixture_B <= 30\n     25% Mixture_A + 60% Mixture_B <= 25"}
{"input": "Bolts and Nuts builds <var>scooters</var> and <var>bikes</var>. One <var>scooter</var> requires <param>2</param> hours of tooling on the grinder and then <param>3</param> hours of tooling on the polisher. One <var>bike</var> requires <param>4</param> hours of tooling on the grinder and then <param>3</param> hours of tooling on polisher. The company makes a <obj_name>profit</obj_name> of $<param>100</param> per <var>scooter</var> and $<param>50</param> per <var>bike</var>. Each machine, the grinder and polisher, can only be used for a <const_dir>maximum</const_dir> of <limit>10</limit> hours per day. How many units of each, <var>scooters</var> and <var>bikes</var>, should the company produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 scooter + 50 bike\nst: 2 scooter + 4 bike <= 10\n     3 scooter + 3 bike <= 10"}
{"input": "A paint store mixes two brands of paint, <var>Ruby</var> and <var>Sapphire</var>, to create a new mixture of paint. A can of <var>Ruby paint</var> <obj_name>costs</obj_name> $<param>12</param> and a can of <var>Sapphire paint</var> <obj_name>costs</obj_name> $<param>15</param>. A can of <var>Ruby paint</var> contains <param>2</param> units of dye, <param>4</param> units of thinner, and <param>5</param> units of water. A can of <var>Sapphire paint</var> contains <param>4</param> units of dye, <param>6</param> units of thinner, and <param>2</param> units of water. The <const_dir>minimum requirements</const_dir> of dye, thinner, and water for the new mixture are <limit>15</limit> units, <limit>20</limit> units, and <limit>18</limit> units respectively. How many cans of each paint brand should be mixed to achieve the new mixture at a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 12 Ruby_paint + 15 Sapphire_paint\nst: 2 Ruby_paint + 4 Sapphire_paint >= 15\n     4 Ruby_paint + 6 Sapphire_paint >= 20\n     5 Ruby_paint + 2 Sapphire_paint >= 18"}
{"input": "A fishing company fishes in two areas of the world, the <var>Pacific</var> and <var>Atlantic</var> ocean. In a week, they must <const_dir>provide</const_dir> <limit>18</limit> tons of fish, <limit>10</limit> tons of crab, and <limit>5</limit> tons of lobster. It <obj_name>costs</obj_name> the company $<param>5000</param> per day to operate in the <var>Pacific ocean</var> and $<param>7000</param> per day to operate in the <var>Atlantic ocean</var>. In a day's operation in the <var>Pacific ocean</var>, the company can catch <param>5</param> tons of fish, <param>2</param> tons of crab, and <param>0.5</param> tons of lobster. In a day's operation in the <var>Atlantic ocean</var>, the company can catch <param>4</param> tons of fish, <param>3</param> tons of crab, and <param>1</param> ton of lobster. How many days a week should fishing be done in each ocean to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 5000 Pacific_ocean + 7000 Atlantic_ocean\nst: 5 Pacific_ocean + 4 Atlantic_ocean >= 18\n     2 Pacific_ocean + 3 Atlantic_ocean >= 10\n     0.5 Pacific_ocean + 1 Atlantic_ocean >= 5"}
{"input": "A young man eats <var>carrots</var> and <var>spinach</var> to meet his biotin and folate needs. He wants to make sure he eats a <const_dir>minimum</const_dir> of <limit>20</limit> grams of each biotin and folate per day. One cup of <var>carrots</var> contains <param>1</param> gram of biotin and <param>3</param> grams of folate. One cup of <var>spinach</var> contain <param>2</param> grams of biotin and <param>1.5</param> grams of folate. If the <obj_name>cost</obj_name> per cup of <var>carrots</var> is $<param>5</param> and the <obj_name>cost</obj_name> per cup of <var>spinach</var> is $<param>3</param>, how many cups of each should he consume to meet his requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 5 carrots + 3 spinach\nst: 1 carrots + 2 spinach >= 20\n     3 carrots + 1.5 spinach >= 20"}
{"input": "After a good workout, Jason makes sure he gets <const_dir>at least</const_dir> <limit>10</limit> units of calcium, <limit>15</limit> units of potassium, and <limit>13</limit> units of magnesium. In order to do so, Jason can drink a <var>sports drink</var> or <var>coconut water</var>. The <var>sports drink</var> <obj_name>costs</obj_name> $<param>5</param> per bottle and contains <param>1</param> unit of calcium, <param>2</param> units of potassium, and <param>3</param> units of magnesium. <var>Coconut water</var> <obj_name>costs</obj_name> $<param>3</param> per bottle and contains <param>4</param> units of calcium, <param>1</param> unit of potassium, and <param>2</param> units of magnesium. How many bottle of each should Jason drink to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 Coconut_water + 5 sports_drink\nst: 1 sports_drink + 4 Coconut_water >= 10\n     2 sports_drink + 1 Coconut_water >= 15\n     3 sports_drink + 2 Coconut_water >= 13"}
{"input": "A salesman wants to sell his <const_dir>inventory</const_dir> composed of <limit>seven</limit> wireless earbuds, <limit>ten</limit> wired earbuds, and <limit>twenty</limit> USB dongles. He decides to offer two bundles: <var>Bundle A</var> and <var>Bundle B.</var> <var>Bundle A</var> brings a <obj_name>profit</obj_name> of $<param>10</param> and contains <param>1</param> wireless earbud and <param>3</param> USB dongles. <var>Bundle B</var> brings a <obj_name>profit</obj_name> of $<param>12</param> and contains <param>1</param> wireless earbud, <param>2</param> wired earbuds, and <param>2</param> USB dongles. Assuming he can sell all bundles, how many of each should he prepare to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 12 Bundle_B + 10 Bundle_A\nst: 1 Bundle_A + 1 Bundle_B <= seven\n     2 Bundle_B <= ten\n     3 Bundle_A + 2 Bundle_B <= twenty"}
{"input": "A tailor shop makes <var>pants</var> and <var>short</var> each requiring the use of three operations done by three teams: measuring, cutting, and sewing. The measuring team is available for <const_dir>at most</const_dir> <limit>60</limit> hours, the cutting team is available for <const_dir>at most</const_dir> <limit>80</limit> hours, and the sewing team is available for <const_dir>at most</const_dir> <limit>75</limit> hours. A <var>pant</var> requires <param>0.5</param> hours of measuring, <param>0.2</param> hours of cutting, and <param>0.7</param> hours of sewing. A <var>short</var> requires <param>0.1</param> hours of measuring, <param>0.5</param> hours of cutting, and <param>0.6</param> hours of sewing. The <obj_name>profit</obj_name> per <var>pant</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>short</var> is $<param>7</param>. How many of each should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 pant + 7 short\nst: 0.5 pant + 0.1 short <= 60\n     0.2 pant + 0.5 short <= 80\n     0.7 pant + 0.6 short <= 75"}
{"input": "A collector's shop sells rocks in two types of shapes, <var>oval</var> and <var>rectangular</var>. <var>Oval rocks</var> require <param>10</param> minutes of washing and <param>12</param> minutes of polishing. <var>Rectangular rocks</var> require <param>15</param> minutes of washing and <param>12</param> minutes of polishing. The <obj_name>profit</obj_name> per <var>oval rock</var> is $<param>7</param> and the <obj_name>profit</obj_name> per <var>rectangular rock</var> is $<param>9</param>. If there are <limit>2000</limit> minutes <const_dir>available</const_dir> for washing and <limit>2500</limit> minutes <const_dir>available</const_dir> for polishing, how many rocks of each shape should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 oval_rock + 9 rectangular_rock\nst: 10 Oval_rocks + 15 Rectangular_rocks <= 2000\n     12 Oval_rocks + 12 Rectangular_rocks <= 2500"}
{"input": "Jake and Jill own a bakery where they sell <var>donuts</var> and <var>cookies</var>. Each batch of <var>donuts</var> takes <param>20</param> minutes of Jake's time and <param>10</param> minutes of Jill's time. Each batch of <var>cookies</var> takes <param>5</param> minutes of Jake's time and <param>25</param> minutes of Jill's time. In a day, Jake has <limit>200</limit> minutes <const_dir>available</const_dir> and Jill has <limit>300</limit> minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per batch of <var>donuts</var> is $<param>20</param> and the <obj_name>profit</obj_name> per batch of <var>cookies</var> is $<param>15</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 15 cookies + 20 donuts\nst: 20 donuts + 5 cookies <= 200\n     25 cookies + 10 donuts <= 300"}
{"input": "A bagel company mixes two bags of everything seasoning, an <var>ordinary bag</var> and a <var>special bag</var>, to make their house mix. The <var>ordinary bag</var> contains <param>5</param> grams of sesame seeds, <param>8</param> grams of onions powder, and <param>7</param> grams of garlic powder. The <var>special bag</var> contains <param>10</param> grams of sesame seeds, <param>6</param> grams of onion powder, and <param>8</param> grams of garlic powder. They want their house mix to contain <const_dir>at least</const_dir> <limit>50</limit> grams of sesame seeds, <limit>60</limit> grams of onion powder, and <limit>65</limit> grams of garlic powder. If the <obj_name>cost</obj_name> per <var>ordinary bag</var> is $<param>10</param> and the <obj_name>cost</obj_name> per <var>special bag</var> is $<param>12</param>, how many of each should they mix to create their house mix at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 12 special_bag + 10 ordinary_bag\nst: 5 ordinary_bag + 10 special_bag >= 50\n     8 ordinary_bag + 6 special_bag >= 60\n     7 ordinary_bag + 8 special_bag >= 65"}
{"input": "A large factory in Brazil makes <var>cocoa beans</var> and <var>coffee beans</var> and has a <const_dir>production capacity</const_dir> of <limit>15</limit> tons per day. <var>Coffee beans</var> and <var>cocoa beans</var> require the same production capacity. Each ton of <var>coffee beans</var> and <var>cocoa beans</var> requires <param>15</param> hours of roasting each. The roasting machine is available for <const_dir>at most</const_dir> <limit>1000</limit> hours. The factory must make a <const_dir>minimum</const_dir> of <limit>3</limit> tons of <var>cocoa beans</var> and <limit>5</limit> tons of <var>coffee beans</var> per day. <obj_name>Profit</obj_name> per ton of <var>cocoa beans</var> is $<param>500</param> and the <obj_name>profit</obj_name> per ton of <var>coffee beans</var> is $<param>750</param>. How many ton of each type of bean should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 cocoa_beans + 750 coffee_beans\nst: cocoa_beans + coffee_beans <= 15\n     15 coffee_beans + 15 cocoa_beans <= 1000\n     cocoa_beans >= 3\n     coffee_beans >= 5"}
{"input": "Linda owns a bakery and sells two types of cookies: <var>chocolate chip</var> and <var>oatmeal</var>. Each <var>chocolate chip cookie</var> requires <param>10</param> minutes of mixing and <param>1</param> table spoon of vanilla extract. Each <var>oatmeal cookie</var> requires <param>20</param> minutes of mixing and <param>2</param> table spoons of vanilla extract. There are <limit>360</limit> minutes of mixing time <const_dir>available</const_dir> and <limit>50</limit> table spoons of vanilla extract <const_dir>available</const_dir>. Each <var>chocolate chip</var> cookie can be <obj_name>sold</obj_name> for $<param>4</param> and each <var>oatmeal cookie</var> can be <obj_name>sold</obj_name> for $<param>3</param>. Formulate an LP to <obj_dir>maximize</obj_dir> Linda's <obj_name>revenue</obj_name>, then graphically solve the LP. (A fractional number of cookies is okay)", "output": "max: 4 chocolate_chip + 3 oatmeal_cookie\nst: 10 chocolate_chip_cookie + 20 oatmeal_cookie <= 360\n     1 chocolate_chip_cookie + 2 oatmeal_cookie <= 50"}
{"input": "Sam owns two rice mills. <var>Mill A</var> <obj_name>costs</obj_name> $<param>500</param> to operate per day and can produce and deliver <param>5</param> bags of basmati rice, <param>7</param> bags of brown rice, and <param>4</param> bags of jasmine rice. <var>Mill B</var> <obj_name>costs</obj_name> $<param>300</param> to operate per day and can produce and deliver <param>7</param> bags of basmati rice, <param>10</param> bags of brown rice, and <param>1</param> bag of jasmine rice. Sam recently obtained a contract to <const_dir>provide</const_dir> a restaurant with <limit>25</limit> bags of basmati rice, <limit>20</limit> bags of brown rice, and <limit>20</limit> bags of jasmine rice. Formulate a LP to <obj_dir>minimize</obj_dir> Sam's <obj_name>total costs</obj_name>.", "output": "min: 300 Mill_B + 500 Mill_A\nst: 5 Mill_A + 7 Mill_B >= 25\n     7 Mill_A + 10 Mill_B >= 20\n     4 Mill_A + 1 Mill_B >= 20"}
{"input": "A repairman fixes <var>fridges</var> and <var>ovens</var>. Each <var>fridge</var> takes <param>20</param> minutes of inspection and <param>30</param> minutes of fixing time. Each <var>oven</var> takes <param>30</param> minutes of inspection and <param>15</param> minutes of fixing time. The repairman has <limit>1000</limit> minutes <const_dir>available</const_dir> for inspection and <limit>800</limit> minutes <const_dir>available</const_dir> for fixing this week. If each <var>fridge</var> repaired <obj_name>earns</obj_name> him $<param>100</param> and each <var>oven</var> repaired <obj_name>earns</obj_name> his $<param>125</param>, how many of each should he fix to <obj_dir>maximize</obj_dir> his <obj_name>earnings</obj_name>?", "output": "max: 100 fridge + 125 oven\nst: 20 fridge + 30 oven <= 1000\n     30 fridge + 15 oven <= 800"}
{"input": "A vendor sells <var>coffee</var> and <var>hot chocolate</var> during ice hockey games. To stay in business, he must sell <const_dir>at least</const_dir> <limit>40</limit> <var>coffees</var> and <limit>20</limit> <var>hot chocolates</var>, but can <const_dir>not make more than</const_dir> <limit>60</limit> <var>coffees</var> or <limit>35</limit> <var>hot chocolates</var>. The vendor also ca<const_dir>n't make more than</const_dir> <limit>75</limit> items total. The <obj_name>profit</obj_name> on a <var>coffee</var> is $<param>0.22</param>, and the <obj_name>profit</obj_name> on a <var>hot chocolate</var> is $<param>0.14</param>. How many of each item should he sell to make the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 0.22 coffee + 0.14 hot_chocolate\nst: coffees >= 40\n     hot_chocolates >= 20\n     coffees <= 60\n     hot_chocolates <= 35\n     coffee + hot_chocolate <= 75"}
{"input": "A chocolate company makes <var>chocolate bars</var> and <var>chocolate wafers</var>. Two different teams produce the <var>chocolate bars</var> and <var>chocolate wafers</var>. The <var>chocolate bar</var> team has a <const_dir>maximum</const_dir> daily production of <limit>80</limit> <var>chocolate bars</var> while the <var>chocolate wafer</var> team has a <const_dir>maximum</const_dir> daily production of <limit>100</limit> <var>chocolate wafers</var>. However both <var>bars</var> and <var>wafers</var> require time on a shared packaging machine and this machine can process <const_dir>at most</const_dir> <limit>125</limit> chocolate items of either type per day. If the <obj_name>profit</obj_name> per <var>chocolate bar</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>chocolate wafer</var> is $<param>3</param>, how many of each should the company make in order to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 2 chocolate_bar + 3 chocolate_wafer\nst: chocolate_bars <= 80\n     chocolate_wafers <= 100\n     chocolate_bar + chocolate_wafer <= 125"}
{"input": "A circuit board company makes <var>small</var> and <var>large circuit boards</var> for customers. Both circuit boards requires time on a drilling machine and a printing machine. Each <var>small circuit board</var> takes <param>10</param> minutes on the drilling machine, <param>15</param> minutes on the printing machine and yields a <obj_name>profit</obj_name> of $<param>5</param>. Each <var>large circuit board</var> takes <param>15</param> minutes on the drilling machine, <param>18</param> minutes on the printing machine, and yields a <obj_name>profit</obj_name> of $<param>7</param>. If both machines are available for <const_dir>at most</const_dir> <limit>600</limit> minutes a day, how many of each circuit board should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 large_circuit_board + 5 small_circuit_board\nst: 10 small_circuit_board + 15 large_circuit_board <= 600\n     15 small_circuit_board + 18 large_circuit_board <= 600"}
{"input": "A clothing company would like to ship pants from China, <var>grey</var> and <var>black pants</var>. Both require processing at two factories named Wimo and Webo. The <obj_name>cost</obj_name> per pair of <var>grey pants</var> is $<param>25</param> and the cost per pair of <var>black pants</var> is $<param>15</param>. Each pair of <var>grey pants</var> requires <param>40</param> minutes of processing time at Wimo and <param>30</param> minutes of processing time at Webo. Each pair of <var>black pants</var> requires <param>20</param> minutes of processing time at Wimo and <param>15</param> minutes of processing time at Webo. Wimo is <const_dir>available</const_dir> for <limit>2100</limit> minutes and Webo is <const_dir>available</const_dir> for <limit>3000</limit> minutes. How many of each pant should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 25 grey_pants + 15 black_pants\nst: 40 grey_pants + 20 black_pants <= 2100\n     30 grey_pants + 15 black_pants <= 3000"}
{"input": "A clothing company wants to add <var>t-shirts</var> and <var>hoodies</var>, both with printed designs, to its collection. Both <var>t-shirts</var> and <var>hoodies</var> require designing and printing. <var>T-shirts</var> require <param>1</param> hour of designing time and <param>2</param> hours of printing time. <var>Hoodies</var> require <param>2</param> hours of designing time and <param>3</param> hours of printing time. The designers are <const_dir>available</const_dir> <limit>40</limit> hours a week and the printing machine is <const_dir>available</const_dir> <limit>60</limit> hours per week. Each <var>t-shirt</var> nets the company $<param>10</param> in <obj_name>profit</obj_name>, and each <var>hoodie</var> nets $<param>15</param> in <obj_name>profit</obj_name>. What ratio of <var>t-shirts</var> and <var>hoodies</var> will produce the <obj_dir>most</obj_dir> <obj_name>profit</obj_name> within the constraints?", "output": "mos: 10 t-shirt + 15 hoodie\nst: 1 T-shirts + 2 Hoodies <= 40\n     2 T-shirts + 3 Hoodies <= 60"}
{"input": "David has two types of liquid supplementation available: <var>regular</var> and <var>premium</var>. After consulting with a doctor, he finds that he needs a <const_dir>minimum</const_dir> of <limit>30</limit> grams of iron and <limit>50</limit> grams of calcium. <var>Regular supplementation</var> consists of <param>20%</param> iron and <param>30%</param> calcium while <var>premium supplementation</var> consists of <param>25%</param> iron and <param>40%</param> calcium. <var>Regular supplementation</var> <obj_name>costs</obj_name> $<param>0.04</param> per gram while <var>premium supplementation</var> <obj_name>costs</obj_name> $<param>0.08</param> per gram. How much of each supplementation should be used to meet his requirements and <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 0.08 premium_supplementation + 0.04 Regular_supplementation\nst: 20% Regular_supplementation + 25% premium_supplementation >= 30\n     30% Regular_supplementation + 40% premium_supplementation >= 50"}
{"input": "A company makes <var>regular</var> and <var>touchscreen laptops</var>. The company has <const_dir>available</const_dir> <limit>3000</limit> minutes for manual labor and <limit>2000</limit> minutes for calibration. Each <var>regular laptop</var> takes <param>20</param> minutes of manual labor and <param>10</param> minutes of calibration. Each <var>touchscreen laptop</var> takes <param>25</param> minutes of manual labor and <param>20</param> minutes of calibration. If the <obj_name>profit</obj_name> per <var>regular laptop</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>touchscreen laptop</var> is $<param>300</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 regular_laptop + 300 touchscreen_laptop\nst: 20 regular_laptop + 25 touchscreen_laptop <= 3000\n     10 regular_laptop + 20 touchscreen_laptop <= 2000"}
{"input": "A fast-food restaurant sells <var>wraps</var> and <var>bowls</var>. Each <var>wrap</var> contains <param>3</param> units of rice and <param>2</param> units of fish. Each <var>bowl</var> contains <param>5</param> units of rice and <param>3</param> units of fish. The restaurant has <limit>800</limit> units of rice <const_dir>available</const_dir> and <limit>700</limit> units of fish <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>wrap</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>bowl</var> is $<param>7</param>, how many of each should the restaurant sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 wrap + 7 bowl\nst: 3 wrap + 5 bowl <= 800\n     2 wrap + 3 bowl <= 700"}
{"input": "A small family business makes homemade <var>strawberry jam</var> and <var>peach jam</var>. It takes <param>20</param> minutes to make one bottle of <var>strawberry jam</var> and <param>30</param> minutes to make one bottle of <var>peach jam</var>. The family business <const_dir>only</const_dir> operates for <limit>3500</limit> minutes per week. Due to fruit availability, they can make <const_dir>at most</const_dir> <limit>100</limit> bottles of <var>strawberry jam</var> and <const_dir>at most</const_dir> <limit>80</limit> bottles of <var>peach jam</var>. If the <obj_name>profit</obj_name> per bottle of <var>strawberry jam</var> is $<param>3</param> and the <obj_name>profit</obj_name> per bottle of <var>peach jam</var> is $<param>5</param>, how many bottles of each should they make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 3 strawberry_jam + 5 peach_jam\nst: 20 peach_jam + 30 strawberry_jam <= 3500\n     strawberry_jam <= 100\n     peach_jam <= 80"}
{"input": "In a video game, George <const_dir>has to collect</const_dir> <limit>50</limit> units of wood and <limit>60</limit> units of metal. There are two areas. <var>area one</var> and <var>area two</var>, where he can find these resources. For each hour in <var>area one</var> that he spends, he gets <param>2</param> units of wood and <param>5</param> units of metal. For each hour in <var>area two</var> that he spends, he gets <param>8</param> units of wood and <param>3</param> units of metal. Formulate a LP to <obj_dir>minimize</obj_dir> the <obj_name>amount of time</obj_name> spent in both areas.", "output": "min:"}
{"input": "In an arcade shooting game, each <var>deer</var> shot is <param>4</param> <obj_name>points</obj_name> and each <var>bear</var> shot is <param>10</param> <obj_name>points</obj_name> You must shoot <const_dir>at least</const_dir> <limit>5</limit> <var>deer</var> and <const_dir>at least</const_dir> <limit>2</limit> <var>bears</var> to pass the level. However, you can shoot <const_dir>at most</const_dir> <limit>10</limit> <var>deer</var> and <const_dir>at most</const_dir> <limit>5</limit> <var>bears</var>. In addition, you <const_dir>only</const_dir> have enough bullets to shoot <limit>12</limit> animals total. How many of each animal should you shoot to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 4 deer + 10 bear\nst: deer >= 5\n     bears >= 2\n     deer <= 10\n     bears <= 5\n     deer + bear <= 12"}
{"input": "A grocery store wants to sell their bulk quantities of almonds, pecans, and pistachios.  They <const_dir>have</const_dir> <limit>1000</limit> grams of almonds, <limit>1200</limit> grams of pecans, and <limit>1100</limit> grams of pistachios. <var>Mixture 1</var> contains <param>20</param> grams of almonds, <param>30</param> grams of pecans, and <param>10</param> grams of pistachios. <var>Mixture 2</var> contains <param>15</param> grams of almonds, <param>20</param> grams of pecans, and <param>25</param> grams of pistachios. If the <obj_name>profit</obj_name> per <var>mixture 1</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>mixture 2</var> is $<param>12</param>, how many of each should the store sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 mixture_2 + 10 mixture_1\nst: 20 Mixture_1 + 15 Mixture_2 <= 1000\n     30 Mixture_1 + 20 Mixture_2 <= 1200\n     10 Mixture_1 + 25 Mixture_2 <= 1100"}
{"input": "A bakery makes <var>regular donuts</var> and <var>jelly filled donuts</var>. They make x1 <var>regular donuts</var> per day at a <obj_name>profit</obj_name> of $<param>2</param> per donut and x2 <var>jelly filled donuts</var> per day at a <obj_name>profit</obj_name> of $<param>4</param> per donut (x1 and x2 must be greater than or equal to 0).There is a daily demand for <const_dir>at most</const_dir> <limit>100</limit> <var>regular donuts</var> and <limit>75</limit> <var>jelly filled donuts</var>. The bakery only has capacity to make a <const_dir>maximum</const_dir> of <limit>120</limit> donuts of either type. How many of each should they produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 regular_donuts + 4 jelly_filled_donuts\nst: regular_donuts <= 100\n     jelly_filled_donuts <= 75\n     regular_donuts + jelly_filled_donuts <= 120"}
{"input": "A small cereal company makes <var>individual</var> and <var>family</var> size cereal boxes. To make an <var>individual cereal box</var> takes <param>20</param> units of cereal and <param>10</param> minutes to fill. To make a <var>family size cereal box</var> takes <param>60</param> units of cereal and <param>15</param> minutes to fill. The company has <limit>2000</limit> units of cereal <const_dir>available</const_dir> and <limit>750</limit> minutes of filling time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>individual cereal box</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>family size cereal box</var> is $<param>8</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 individual_cereal_box + 8 family_size_cereal_box\nst: 20 individual_cereal_box + 60 family_size_cereal_box <= 2000\n     10 individual_cereal_box + 15 family_size_cereal_box <= 750"}
{"input": "A farmer <const_dir>has</const_dir> <limit>80</limit> acres of land on which he grows <var>apple trees</var> and <var>orange trees</var>. Per acre of <var>apple trees</var>, <param>30</param> kg of special soil is required. Per acre of <var>orange trees</var>, <param>25</param> kg of special soil is required. However the farmer <const_dir>only</const_dir> has <limit>2200</limit> kg of special soil available. If the <obj_name>profit</obj_name> per acre of <var>apple trees</var> is $<param>500</param> and the <obj_name>profit</obj_name> per acre of <var>orange trees</var> is $<param>450</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 apple_trees + 450 orange_trees\nst: 30 apple_trees + 25 orange_trees <= 2200\n     apple_trees + orange_trees <= 80"}
{"input": "A pottery artist makes <var>mugs</var> and <var>bowls</var> from clay. Each <var>mug</var> takes <param>20</param> minutes to make while each <var>bowl</var> takes <param>30</param> minutes to make. In a week, the artist only has <limit>1200</limit> minutes <const_dir>available</const_dir> to do pottery. In addition, he only has enough clay to make <limit>50</limit> items <const_dir>total</const_dir>. If he makes a <obj_name>profit</obj_name> of $<param>10</param> per <var>mug</var> and a <obj_name>profit</obj_name> of $<param>15</param> per <var>bowl</var>, how many of each should he make to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 10 mug + 15 bowl\nst: 20 mug + 30 bowl <= 1200\n     mug + bowl <= 50"}
{"input": "A bakery makes <var>chocolate</var> and <var>maple donuts</var>. There is a daily demand of <const_dir>at least</const_dir> <limit>50</limit> <var>chocolate donuts</var> and <const_dir>at least</const_dir> <limit>75</limit> <var>maple donuts</var>. However the bakery can make <const_dir>at most</const_dir> <limit>100</limit> <var>chocolate donuts</var> and <const_dir>at most</const_dir> <limit>150</limit> <var>maple donuts</var>. They have a contract with a local grocery store and must make <const_dir>at least</const_dir> <limit>200</limit> donuts total of either type per day. If the <obj_name>profit</obj_name> per <var>chocolate donut</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>maple donut</var> is $<param>3</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 maple_donut + 2 chocolate_donut\nst: chocolate_donuts >= 50\n     maple_donuts >= 75\n     chocolate_donuts <= 100\n     maple_donuts <= 150\n     maple_donut + chocolate_donut <= 200"}
{"input": "A phone company makes <var>regular phones</var> and <var>premium phones</var>. Let's say they make x1 <var>regular phones</var> per day at a <obj_name>profit</obj_name> of $<param>200</param> each and x2 <var>premium phone</var> per day at a <obj_name>profit</obj_name> of $<param>300</param> each (x1 and x2 are both greater than or equal to 0). Note that the daily demand for <var>regular phones</var> is <const_dir>at most</const_dir> <limit>20</limit> and the daily demand for <var>premium phones</var> is <const_dir>at most</const_dir> <limit>15</limit>. In addition, the company can only sell <const_dir>at most</const_dir> <limit>30</limit> phones total of either type per day. How many phones of each type should the company sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 regular_phones + 300 premium_phone\nst: regular_phones <= 20\n     premium_phones <= 15\n     regular_phones + premium_phone <= 30"}
{"input": "A cosmetics company makes <var>low</var>, <var>medium</var>, and <var>high quality</var> face wash. A <var>low quality</var> face wash contains <param>1</param> unit of rare ingredients and <param>4</param> units of water. A <var>medium quality</var> face wash contains <param>3</param> units of rare ingredients and <param>2</param> units of water. A <var>high quality</var> face wash contains <param>4</param> units of rare ingredients and <param>1</param> unit of water. The company has <const_dir>available</const_dir> <limit>100</limit> units of rare ingredients and <limit>200</limit> units of water. If the <obj_name>profit</obj_name> per <var>low quality</var> face wash is $<param>3</param>, the <obj_name>profit</obj_name> per <var>medium quality</var> face wash is $<param>7</param>, and the <obj_name>profit</obj_name> per <var>high quality</var> face wash is $<param>9</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 3 low_quality + 7 medium_quality + 9 high_quality\nst: 1 low_quality + 3 medium_quality + 4 high_quality <= 100\n     4 low_quality + 2 medium_quality + 1 high_quality <= 200"}
{"input": "A boy buys and sells two types of sneakers. <var>Brand A sneakers</var> cost him $<param>100</param> each and <var>Brand B sneakers</var> cost his $<param>150</param> each. He <const_dir>can spend a total</const_dir> of $<limit>2000</limit>. He can sell <const_dir>at most</const_dir> <limit>15</limit> sneakers total. If the <obj_name>profit</obj_name> per <var>Brand A sneaker</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>Brand B sneaker</var> is $<param>75</param>, how many of each should he buy and sell to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 50 Brand_A_sneaker + 75 Brand_B_sneaker\nst: 100 Brand_A_sneakers + 150 Brand_B_sneakers <= 2000\n     Brand_A_sneaker + Brand_B_sneaker <= 15"}
{"input": "John needs to take supplementation for his calcium and iron deficiency. He needs to get <const_dir>at least</const_dir> <limit>15</limit> units of calcium and <limit>20</limit> units of iron everyday. In order to do so, he can buy pills named <var>SD</var> and <var>LD</var>. Each <var>SD pill</var> contains <param>1</param> unit of calcium and <param>4</param> units of iron. Each <var>LD pill</var> contains <param>2</param> units of calcium and <param>1</param> unit of iron. If the <obj_name>cost</obj_name> per <var>SD pill</var> is $<param>1</param> and the <obj_name>cost</obj_name> per <var>LD pill</var> is $<param>1.50</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 1.50 LD_pill + 1 SD_pill\nst: 1 SD_pill + 2 LD_pill >= 15\n     4 SD_pill + 1 LD_pill >= 20"}
{"input": "A store sells two tropical fruit bowls. The <var>small bowl</var> contains <param>3</param> units of kiwi, <param>2</param> units of mango, and <param>5</param> units of pineapple. The <var>large bowl</var> contains <param>5</param> units of kiwi, <param>4</param> units of mango, and <param>8</param> units of pineapple. The store has <const_dir>available</const_dir> <limit>100</limit> units of kiwi, <limit>120</limit> units of mango, and <limit>150</limit> units of pineapple. If the <obj_name>profit</obj_name> per <var>small bowl</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>large bowl</var> is $<param>8</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 large_bowl + 5 small_bowl\nst: 3 small_bowl + 5 large_bowl <= 100\n     2 small_bowl + 4 large_bowl <= 120\n     5 small_bowl + 8 large_bowl <= 150"}
{"input": "A car company sells <var>electric</var> and <var>gas cars</var>. Two different factories produce these cars. The <var>electric car</var> factory can make <const_dir>at most</const_dir> <limit>3</limit> <var>electric cars</var> per day while the <var>gas car</var> factory can make <const_dir>at most</const_dir> <limit>5</limit> <var>gas cars</var> per day. All cars have to go through a third factory where finishing touches are added and this factory can process <const_dir>at most</const_dir> <limit>5</limit> cars of either type per day. If the <obj_name>profit</obj_name> per <var>electric car</var> is $<param>5000</param> and the <obj_name>profit</obj_name> per <var>gas car</var> is $<param>3000</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3000 gas_car + 5000 electric_car\nst: electric_cars <= 3\n     gas_cars <= 5\n     gas_car + electric_car <= 5"}
{"input": "A diner makes packaged lunches. The <var>meat option</var> takes <param>5</param> minutes to prepare and <param>3</param> minutes to package. The <var>veggie option</var> takes <param>4</param> minutes to prepare and <param>5</param> minutes to package. The diner has <limit>500</limit> minutes <const_dir>available</const_dir> for preparations and <limit>400</limit> minutes <const_dir>available</const_dir> for packaging. If the <obj_name>profit</obj_name> per <var>meat lunch</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>veggie lunch</var> is $<param>6</param>, how many of each should the diner make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 meat_lunch + 6 veggie_lunch\nst: 5 meat_option + 4 veggie_option <= 500\n     3 meat_option + 5 veggie_option <= 400"}
{"input": "A gift wrapping kiosk wraps <var>small</var> and <var>large</var> gifts. <var>Small gifts</var> take <param>10</param> minutes of worker time and <param>2</param> units of wrapping paper. <var>Large gifts</var> take <param>15</param> minutes of worker time and <param>3</param> units of wrapping paper. The kiosk has <limit>720</limit> minutes of worker time <const_dir>available</const_dir> and <limit>150</limit> units of wrapping paper <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>small gift</var> wrapped is $<param>3</param> and the <obj_name>profit</obj_name> per <var>large gift</var> wrapped is $<param>5</param>, how many of each should they wrap to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 small_gift + 5 large_gift\nst: 10 Small_gifts + 15 Large_gifts <= 720\n     2 Small_gifts + 3 Large_gifts <= 150"}
{"input": "A coffee shop makes <var>large</var> and <var>small</var> coffees. A <var>large coffee</var> takes <param>12</param> units of coffee beans and <param>20</param> units of milk. A <var>small coffee</var> takes <param>8</param> units of coffee beans and <param>15</param> units of milk. The shop has <const_dir>available</const_dir> <limit>1000</limit> units of coffee beans and <limit>1500</limit> units of milk. If the <obj_name>profit</obj_name> per <var>large coffee</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>small coffee</var> is $<param>3</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 large_coffee + 3 small_coffee\nst: 12 large_coffee + 8 small_coffee <= 1000\n     20 large_coffee + 15 small_coffee <= 1500"}
{"input": "A stationary company sells <var>one-inch</var> and <var>two-inch</var> binders. To meet demand, the must make <const_dir>at least</const_dir> <limit>60</limit> <var>one-inch binders</var> and <const_dir>at least</const_dir> <limit>70</limit> <var>two-inch binders</var>. However, they can make <const_dir>at most</const_dir> <limit>150</limit> <var>one-inch binders</var> and <const_dir>at most</const_dir> <limit>160</limit> <var>two-inch binders</var>. The company has a contract with a school to send <const_dir>at least</const_dir> <limit>200</limit> binders of either type. If the <obj_name>profit</obj_name> per <var>one-inch binder</var> is $<param>1</param> and the <obj_name>profit</obj_name> per <var>two-inch binder</var> is $<param>2</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 two-inch_binder + 1 one-inch_binder\nst: one-inch_binders >= 60\n     two-inch_binders >= 70\n     one-inch_binders <= 150\n     two-inch_binders <= 160\n     two-inch_binder + one-inch_binder <= 200"}
{"input": "A man drinks two energy drinks to get his daily caffeine and water requirements. A can of <var>energy drink R</var> contains <param>2</param> units of caffeine and <param>5</param> units of water. A can of <var>energy drink M</var> contains <param>5</param> units of caffeine and <param>8</param> units of water.  The man needs to get a <const_dir>minimum</const_dir> of <limit>30</limit> units of caffeine and <limit>50</limit> units of water per day. If the <obj_name>cost</obj_name> per can of <var>energy drink R</var> is $<param>4</param> and the <obj_name>cost</obj_name> per can of <var>energy drink M</var> is $<param>7</param>, how many cans of each should he buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 4 energy_drink_R + 7 energy_drink_M\nst: 2 energy_drink_R + 5 energy_drink_M >= 30\n     5 energy_drink_R + 8 energy_drink_M >= 50"}
{"input": "An ice cream bar sells <var>chocolate</var> and <var>vanilla ice cream</var> cones. They must sell <const_dir>at least</const_dir> <limit>30</limit> <var>chocolate ice cream cones</var> but cannot sell <const_dir>more than</const_dir> <limit>50</limit>. They must also sell <const_dir>at least</const_dir> <limit>20</limit> <var>vanilla ice cream cones</var> but cannot sell <const_dir>more than</const_dir> <limit>60</limit>. In total, they <const_dir>only</const_dir> have enough cones to sell <limit>70</limit> items total. If the <obj_name>profit</obj_name> per <var>chocolate ice cream cone</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>vanilla ice cream cone</var> is $<param>1.50</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 chocolate_ice_cream_cone + 1.50 vanilla_ice_cream_cone\nst: chocolate_ice_cream_cones >= 30\n     chocolate_ice_cream_cones <= 50\n     vanilla_ice_cream_cones >= 20\n     vanilla_ice_cream_cones <= 60\n     chocolate_ice_cream_cone + vanilla_ice_cream_cone <= 70"}
{"input": "A sandwich shop specializes in cheese sandwiches and they make two types. <var>Sandwich A</var> requires <param>3</param> units of cheddar cheese and <param>3</param> units of American cheese. <var>Sandwich B</var> requires <param>5</param> units of cheddar cheese and <param>2</param> units of American cheese. The shop has <limit>500</limit> units and <limit>400</limit> units of cheddar and American cheese <const_dir>available</const_dir> respectively. If the <obj_name>profit</obj_name> per <var>sandwich A</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>sandwich B</var> is $<param>6</param>, how many of each should the shop make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 6 sandwich_B + 5 sandwich_A\nst: 3 Sandwich_A + 5 Sandwich_B <= 500\n     3 Sandwich_A + 2 Sandwich_B <= 400"}
{"input": "A toy shop makes wooden <var>dolls</var> and <var>soldiers</var>. Each <var>doll</var> takes <param>10</param> minutes of crafting and <param>5</param> minutes of sanding. Each <var>soldier</var> takes <param>15</param> minutes of crafting and <param>8</param> minutes of sanding. The shop has <const_dir>available</const_dir> <limit>1000</limit> minutes for crafting and <limit>800</limit> minutes for sanding. If the <obj_name>profit</obj_name> per <var>doll</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>soldier</var> is $<param>10</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 doll + 10 soldier\nst: 10 doll + 15 soldier <= 1000\n     5 doll + 8 soldier <= 800"}
{"input": "A company sells <var>almond</var> and <var>cashews</var> in small tins. Each <var>almond tin</var> takes <param>5</param> minutes to fill and <param>3</param> minutes to label. Each <var>cashew tin</var> takes <param>4</param> minutes to fill and <param>5</param> minutes to label. The company has <const_dir>available</const_dir> <limit>400</limit> minutes for filling and <limit>500</limit> minutes for labelling. If the <obj_name>profit</obj_name> per <var>almond tin</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>cashew tin</var> is $<param>15</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 almond_tin + 15 cashew_tin\nst: 5 almond_tin + 4 cashew_tin <= 400\n     3 almond_tin + 5 cashew_tin <= 500"}
{"input": "A man is watching his sugar and fat intake. He drinks two smoothies. Each cup of <var>smoothie A</var> contains <param>10</param> units of protein, <param>20</param> units of carbs, <param>15</param> units of fat, and <param>8</param> units of <obj_name>sugar</obj_name>. Each cup of <var>smoothie B</var> contains <param>12</param> units of protein, <param>30</param> units of carbs, <param>25</param> units of fat, and <param>12</param> units of <obj_name>sugar</obj_name>. The man needs <const_dir>at least</const_dir> <limit>150</limit> units of protein and <limit>200</limit> units of carbs. However we wants to consume <const_dir>at most</const_dir> <limit>185</limit> units of fat. How many cups of each should he drink to <obj_dir>minimize</obj_dir> his <obj_name>sugar intake</obj_name>?", "output": "min: 8 smoothie_A + 12 smoothie_B\nst: 10 smoothie_A + 12 smoothie_B >= 150\n     20 smoothie_A + 30 smoothie_B >= 200\n     15 smoothie_A + 25 smoothie_B <= 185"}
{"input": "A hot dog stand sells <var>regular hot dogs</var> and <var>premium hot dogs</var> with extra toppings. The stand makes x1 <var>regular hot dogs</var> at a <obj_name>profit</obj_name> of $<param>3</param> each and x2 <var>premium hot dogs</var> at a <obj_name>profit</obj_name> of $<param>5</param> each (x1 and x2 are unknown variables both greater than or equal to 0). There is a demand for <const_dir>at most</const_dir> <limit>80</limit> <var>regular hot dogs</var> and <const_dir>at most</const_dir> <limit>70</limit> <var>premium hot dogs</var>. The stand only has enough supplies to sell <const_dir>at most</const_dir> <limit>120</limit> hot-dogs of either type. How many of each hot-dog should the stand make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 regular_hot_dogs + 5 premium_hot_dogs\nst: regular_hot_dogs <= 80\n     premium_hot_dogs <= 70\n     regular_hot_dogs + premium_hot_dogs <= 120"}
{"input": "Linda <const_dir>has</const_dir> <limit>300</limit> acres of land to grow <var>spinach</var> and <var>kale</var>. Per acre of land, <var>spinach</var> costs $<param>40</param> for the seeds and takes <param>1</param> hour to maintain. Per acre of land, <var>kale</var> costs $<param>50</param> for the seeds and takes <param>2</param> hours to maintain. Linda has a <const_dir>budget</const_dir> of $<limit>14000</limit> for seeds and has <const_dir>available</const_dir> <limit>450</limit> hours for maintenance. If the <obj_name>profit</obj_name> per acre of <var>spinach</var> is $<param>20</param> and the <obj_name>profit</obj_name> per acre of <var>kale</var> is $<param>30</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 spinach + 30 kale\nst: spinach + kale <= 300\n     40 spinach + 50 kale <= 14000\n     1 spinach + 2 kale <= 450"}
{"input": "A company makes two types of phones, a <var>large size</var> and a <var>small size</var>. The <var>large size phone</var> take <param>20</param> minutes on the manufacturing belt and <param>12</param> minutes of testing. The <var>small size phone</var> takes <param>15</param> minutes on the manufacturing belt and <param>10</param> minutes of testing. The company has <limit>1500</limit>  minutes  <const_dir>available</const_dir> on the manufacturing belt and <limit>1000</limit> minutes <const_dir>available</const_dir> for testing. If the <obj_name>profit</obj_name> per <var>large phone</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>small phone</var> is $<param>300</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 small_phone + 400 large_phone\nst: 20 large_size_phone + 15 small_size_phone <= 1500\n     12 large_size_phone + 10 small_size_phone <= 1000"}
{"input": "A leather shop makes <var>wallets</var> and <var>purses</var>. Both require time for cutting and stitching. A <var>wallet</var> requires <param>10</param> minutes of cutting and <param>20</param> minutes of stitching. A <var>purse</var> requires <param>15</param> minutes of cutting and <param>30</param> minutes of stitching. The shop has <limit>500</limit> minutes <const_dir>available</const_dir> per day for cutting and <limit>600</limit> minutes <const_dir>available</const_dir> per day for stitching. The <obj_name>profit</obj_name> per <var>wallet</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>purse</var> is $<param>100</param>. How many of each item should the shop make to <obj_dir>maximize</obj_dir> their <obj_name>profits</obj_name>?", "output": "max: 50 wallet + 100 purse\nst: 10 wallet + 15 purse <= 500\n     20 wallet + 30 purse <= 600"}
{"input": "A woodshop makes <var>dining tables</var> and <var>bed frames</var> using oak and mahogany wood. Each <var>dining table</var> requires <param>3</param> units of oak wood and <param>5</param> units of mahogany wood. Each <var>bed frame</var> requires <param>5</param> units of oak wood and <param>2</param> units of mahogany wood. The woodshop has <const_dir>available</const_dir> <limit>300</limit> units of oak wood and <limit>400</limit> units of mahogany wood. If the <obj_name>profit</obj_name> per <var>dining table</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>bed frame</var> is $<param>400</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 bed_frame + 300 dining_table\nst: 3 dining_table + 5 bed_frame <= 300\n     5 dining_table + 2 bed_frame <= 400"}
{"input": "A fisherman must catch <const_dir>at least</const_dir> <limit>30</limit> small fish and <limit>15</limit> large fish. He visits two lakes. For each hour at <var>lake 1</var> he spends, he can catch <param>5</param> small fish and <param>3</param> large fish. For each hour at <var>lake 2</var> he spends, he can catch <param>7</param> small fish and <param>2</param> large fish. How many hours should he spend at each lake to <obj_dir>minimize</obj_dir> the <obj_name>amount of time</obj_name> he spends at both lakes fishing?", "output": "min: \nst: 5 lake_1 + 7 lake_2 >= 30\n     3 lake_1 + 2 lake_2 >= 15"}
{"input": "A construction company makes <var>marble</var> and <var>granite countertops</var>. It takes <param>1</param> hour of cutting and <param>2</param> hours of polishing to make one <var>marble countertop</var>. It takes <param>1.5</param> hours of cutting and <param>3</param> hours of polishing to make one <var>granite countertop</var>. The company has <const_dir>available</const_dir> <limit>300</limit> hours for cutting and <limit>500</limit> hours for polishing. If the <obj_name>profit</obj_name> per <var>marble countertop</var> is $<param>500</param> and the <obj_name>profit</obj_name> per <var>granite countertop</var> is $<param>750</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 marble_countertop + 750 granite_countertop\nst: 1.5 marble_countertop + 1 granite_countertops <= 300\n     2 granite_countertops + 3 marble_countertop <= 500"}
{"input": "A factory makes <var>soccer balls</var> and <var>basket balls</var>. <var>Soccer balls</var> take <param>5</param> minutes on the manufacturing machine and <param>3</param> minutes to fill with air. <var>Basket balls</var> take <param>7</param> minutes on the manufacturing machine and <param>4</param> minutes to fill with air. The factory can run the manufacturing machine for <const_dir>at most</const_dir> <limit>700</limit> minutes and they have <limit>500</limit> minutes <const_dir>available</const_dir> for filling the balls with air. If the <obj_name>profit</obj_name> per <var>soccer ball</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>basket all</var> is $<param>5</param>, how many of each ball should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 basket_all + 4 soccer_ball\nst: 5 Soccer_balls + 7 Basket_balls <= 700\n     3 Soccer_balls + 4 Basket_balls <= 500"}
{"input": "A company washes <var>cars</var> and <var>buses</var>. Each <var>car</var> takes <param>30</param> minutes of watering and $<param>10</param> worth of soap. Each <var>bus</var> takes <param>50</param> minutes of watering and $<param>20</param> worth of soap. The company has <const_dir>available</const_dir> <limit>5000</limit> minutes for watering and $<limit>1500</limit> worth of soap. If the company <obj_name>earns</obj_name> $<param>50</param> per <var>car</var> washed and $<param>75</param> per <var>bus</var> washed, how many of each should they wash to <obj_dir>maximize</obj_dir> their <obj_name>earnings</obj_name>?", "output": "max: 50 car + 75 bus\nst: 30 car + 50 bus <= 5000\n     10 car + 20 bus <= 1500"}
{"input": "A bodybuilder only eats protein bars. He wants to make sure het gets a <const_dir>minimum</const_dir> of <limit>80</limit> grams of protein, <limit>50</limit> grams of fat, and <limit>100</limit> grams of carbs. <var>Protein Bar A</var> contains <param>10</param> grams of protein, <param>3</param> grams of fat, and <param>11</param> grams of carbs. <var>Protein Bar B</var> contains <param>15</param> grams of protein, <param>5</param> grams of fat, and <param>8</param> grams of carbs. If the <obj_name>cost</obj_name> per <var>Protein Bar A</var> is $<param>7</param> and the <obj_name>cost</obj_name> per <var>Protein Bar B</var> is $<param>10</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> his <obj_name>costs</obj_name>?", "output": "min: 7 Protein_Bar_A + 10 Protein_Bar_B\nst: 10 Protein_Bar_A + 15 Protein_Bar_B >= 80\n     3 Protein_Bar_A + 5 Protein_Bar_B >= 50\n     11 Protein_Bar_A + 8 Protein_Bar_B >= 100"}
{"input": "You are put on a special diet where you can drink two juices. <var>Juice A</var> contains <param>10</param> grams of protein, <param>15</param> grams of carbs, <param>4</param> grams of fat, and <param>300</param> <obj_name>calories</obj_name> per cup. <var>Juice B</var> contains <param>12</param> grams of protein, <param>20</param> grams of carbs, <param>8</param> grams of fat, and <param>350</param> <obj_name>calories</obj_name> per cup. You must consume <const_dir>at least</const_dir> <limit>100</limit> grams of protein and <limit>150</limit> grams of carbs. However you can consume <const_dir>at most</const_dir> <limit>50</limit> grams of fat. How many cups of each juice should you drink to <obj_dir>minimize</obj_dir> the <obj_name>number of calories</obj_name>?", "output": "min: 300 Juice_A + 350 Juice_B\nst: 10 Juice_A + 12 Juice_B >= 100\n     15 Juice_A + 20 Juice_B >= 150\n     4 Juice_A + 8 Juice_B <= 50"}
{"input": "A watch company makes <var>digital watches</var> and <var>analog watches</var>. There is a demand of <const_dir>at least</const_dir> <limit>150</limit> <var>digital watches</var> and <const_dir>at least</const_dir> <limit>120</limit> <var>analog watches</var> per day. However, the company can make <const_dir>at most</const_dir> <limit>200</limit> <var>digital watches</var> and <const_dir>at most</const_dir> <limit>180</limit> <var>analog watches</var> per day. In addition, they have a contract to ship <const_dir>at least</const_dir> <limit>300</limit> watches of either type per day. If the <obj_name>profit</obj_name> per <var>digital watch</var> is $<param>15</param> and the <obj_name>profit</obj_name> per <var>analog watch</var> is $<param>10</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 15 digital_watch + 10 analog_watch\nst: digital_watches >= 150\n     analog_watches >= 120\n     digital_watches <= 200\n     analog_watches <= 180\n     digital_watch + analog_watch <= 300"}
{"input": "An artist uses clay to make both <var>mini elephants</var> and <var>lions</var>. Each <var>mini elephant</var> requires <param>10</param> units of clay and each <var>mini lion</var> requires <param>8</param> units of clay. The artist has <const_dir>available</const_dir> <limit>300</limit> units of clay. However, due to time constraints, the artist can make <const_dir>at most</const_dir> <limit>33</limit> animals total. If the <obj_name>profit</obj_name> per <var>mini elephant</var> sold is $<param>50</param> and the <obj_name>profit</obj_name> per <var>mini lion</var> sold is $<param>45</param>, how many of each should the artist make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 mini_elephant + 45 mini_lion\nst: 10 mini_elephant + 8 mini_lion <= 300\n     mini_elephant + mini_lion <= 33"}
{"input": "A baker melts <var>milk</var> and <var>dark</var> chocolate together to create a new mixture. The mixture must contain <const_dir>at least</const_dir> <limit>120</limit> units of cacao and <limit>80</limit> units of sugar. Each <var>milk chocolate piece</var> contains <param>3</param> units of cacao and <param>2</param> units of sugar. Each <var>dark chocolate piece</var> contains <param>4</param> units of cacao and <param>1</param> unit of sugar. If the <obj_name>cost</obj_name> per <var>milk chocolate piece</var> is $<param>0.50</param> and the <obj_name>cost</obj_name> per <var>dark chocolate piece</var> is $<param>0.75</param>, how many of each should the baker buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 0.50 milk_chocolate_piece + 0.75 dark_chocolate_piece\nst: 3 milk_chocolate_piece + 4 dark_chocolate_piece >= 120\n     2 milk_chocolate_piece + 1 dark_chocolate_piece >= 80"}
{"input": "A pharmacist mixes two different medications. One unit of <var>medication A</var> contains <param>1</param> unit of cough relief, <param>2</param> units of pain relief, and <param>3</param> units of fever relief. One unit of <var>medication B</var> contains <param>3</param> units of cough relief, <param>1</param> unit of pain relief, and <param>2</param> units of fever relief. The new mixture must contain <const_dir>at least</const_dir> <limit>20</limit> units of cough relief, <limit>25</limit> units of pain relief, and <limit>30</limit> units of fever relief. If the <obj_name>cost</obj_name> per unit of <var>medication A</var> is $<param>1</param> and the <obj_name>cost</obj_name> per unit of <var>medication B</var> is $<param>2</param>, how many of each should be mixed to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 1 medication_A + 2 medication_B\nst: 1 medication_A + 3 medication_B >= 20\n     2 medication_A + 1 medication_B >= 25\n     3 medication_A + 2 medication_B >= 30"}
{"input": "In a spelling bee, you can spell <var>short words</var> worth <param>3</param> <obj_name>points</obj_name> or <var>long words</var> worth <param>6</param> <obj_name>points</obj_name>. You must spell <const_dir>at least</const_dir> <limit>5</limit> <var>short words</var> and <const_dir>at least</const_dir> <limit>2</limit> <var>long words</var>. However, due to time restrictions you can spell <const_dir>at most</const_dir> <limit>10</limit> <var>short words</var> and <const_dir>at most</const_dir> <limit>5</limit> <var>long words</var>. In total, you can spell <const_dir>at most</const_dir> <limit>10</limit> words. How many of each length of word should you spell to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 3 short_words + 6 long_words\nst: short_words >= 5\n     long_words >= 2\n     short_words <= 10\n     long_words <= 5\n     short_words + long_words <= 10"}
{"input": "A company installs <var>washing machines</var> and <var>dryers</var> in houses. Each <var>washing machine</var> takes <param>20</param> minutes of plumber time and <param>15</param> minutes of electrician time. Each <var>dryer</var> takes <param>10</param> minutes of plumber time and <param>25</param> minutes of electrician time. The company has <const_dir>available</const_dir> <limit>2000</limit> minutes of plumber time and <limit>3000</limit> minutes of electrician time. If the <obj_name>profit</obj_name> per <var>washing machine</var> installation is $<param>200</param> and the <obj_name>profit</obj_name> per <var>dryer</var> installation is $<param>150</param>, how many of each should be installed to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 dryer + 200 washing_machine\nst: 20 washing_machine + 10 dryer <= 2000\n     15 washing_machine + 25 dryer <= 3000"}
{"input": "A watch company makes watches by hand. They make <var>round watches</var> and <var>square watches</var>. The <var>round watches</var> are made by team A and they can make <const_dir>at most</const_dir> <limit>5</limit> a day. The <var>square watches</var> are made by team B and the can make <const_dir>at most</const_dir> <limit>6</limit> a day. All watches have to be quality checked by a senior watchmaker and he can check <const_dir>at most</const_dir> <limit>8</limit> watches total a day. If the <obj_name>profit</obj_name> per <var>round watch</var> is $<param>1000</param> and the <obj_name>profit</obj_name> per <var>square watch</var> is $<param>1250</param>, how many of each watch should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1250 square_watch + 1000 round_watch\nst: round_watches <= 5\n     square_watches <= 6\n     square_watch + round_watch <= 8"}
{"input": "A bakery makes <var>stuffed donuts</var> and <var>pastries</var>. Each <var>stuffed donut</var> takes <param>2</param> minutes on the baking machine and <param>3</param> minutes on the stuffing machine. Each <var>stuffed pastry</var> takes <param>5</param> minutes on the baking machine and <param>2</param> minutes on the stuffing machine. The baking machine is <const_dir>available</const_dir> for <limit>10000</limit> minutes while the stuffing machine is <const_dir>available</const_dir> for <limit>7000</limit> minutes. If the <obj_name>profit</obj_name> per <var>donut</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>pastry</var> is $<param>4</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 pastry + 2 donut\nst: 2 stuffed_donut + 5 stuffed_pastry <= 10000\n     3 stuffed_donut + 2 stuffed_pastry <= 7000"}
{"input": "A juice store sells two juices, <var>Juice A</var> and <var>Juice B.</var> Each juice uses different amounts of raspberries, blueberries, and blackberries. <var>Juice A</var> uses <param>20</param> g of raspberries, <param>10</param> g of blueberries, and <param>10</param> g of blackberries. <var>Juice B</var> uses <param>15</param> g of raspberries, <param>15</param> g of blueberries, and <param>5</param> g of blackberries. The store has <const_dir>available</const_dir> <limit>2000</limit> g of raspberries, <limit>1500</limit> g of blueberries, and <limit>1400</limit> g of blackberries. If the <obj_name>profit</obj_name> per <var>Juice A</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>Juice B</var> is $<param>7</param>, how many of each juice should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 Juice_A + 7 Juice_B\nst: 20 Juice_A + 15 Juice_B <= 2000\n     10 Juice_A + 15 Juice_B <= 1500\n     10 Juice_A + 5 Juice_B <= 1400"}
{"input": "A pharmacy mixes two capsules to create a final product. <var>Capsule A</var> contains <param>2</param> units of targeted medicine, <param>3</param> units of pain reliever, and <param>1</param> unit of filler. <var>Capsule B</var> contains <param>3</param> units of targeted medicine, <param>1</param> unit of pain reliever, and <param>3</param> units of filler. The <const_dir>minimum requirements</const_dir> of the new product are <limit>20</limit> units of targeted medicine, <limit>20</limit> units of pain reliever, and <limit>15</limit> units of filler. If the <obj_name>cost</obj_name> per <var>capsule A</var> is $<param>2</param> and the <obj_name>cost</obj_name> per <var>capsule B</var> is $<param>3</param>, how many of each should be used to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 2 capsule_A + 3 capsule_B\nst: 2 Capsule_A + 3 Capsule_B >= 20\n     3 Capsule_A + 1 Capsule_B >= 20\n     1 Capsule_A + 3 Capsule_B >= 15"}
{"input": "A meat factory makes <var>burgers</var> and <var>hot-dogs</var>. Each <var>burger</var> requires <param>3</param> units of meat and <param>2</param> unit of binding agent. Each <var>hot-dog</var> requires <param>2</param> units of meat and <param>1</param> unit of binding agent. The factory has <limit>2000</limit> units of meat and <limit>1800</limit> units of binding agent <const_dir>available</const_dir>. If the <obj_name>revenue</obj_name> per <var>burger</var> made is $<param>0.30</param> and the <obj_name>revenue</obj_name> per <var>hot-dog</var> made is $<param>0.20</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 0.30 burger + 0.20 hot-dog\nst: 3 burger + 2 hot-dog <= 2000\n     2 burger + 1 hot-dog <= 1800"}
{"input": "A video game company makes a <var>premium</var> and <var>regular</var> version of their console. A <var>premium console</var> takes <param>20</param> minutes of testing and requires <param>3</param> IC chips to make. A <var>regular console</var> takes <param>10</param> minutes of testing and requires <param>2</param> IC chips to make. The company has available <const_dir>at most</const_dir> <limit>10000</limit> minutes of testing time and <limit>1500</limit> IC chips. If the <obj_name>profit</obj_name> per <var>premium console</var> is $<param>100</param> and the <obj_name>profit</obj_name> per <var>regular console</var> is $<param>75</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 75 regular_console + 100 premium_console\nst: 20 premium_console + 10 regular_console <= 10000\n     3 premium_console + 2 regular_console <= 1500"}
{"input": "A fitness company sells and installs <var>treadmills</var> and <var>stationary bikes</var>. Each <var>treadmill</var> takes <param>30</param> minutes of mover time and <param>50</param> minutes of setup time. Each <var>stationary bike</var> takes <param>15</param> minutes of mover time and <param>30</param> minutes of setup time. The company has <const_dir>available</const_dir> <limit>10000</limit> minutes of mover time and <limit>15000</limit> minutes of setup time. If the <obj_name>profit</obj_name> per <var>treadmill</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>stationary bike</var> is $<param>120</param>, how many of each should they sell in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 120 stationary_bike + 300 treadmill\nst: 30 treadmill + 15 stationary_bike <= 10000\n     50 treadmill + 30 stationary_bike <= 15000"}
{"input": "A gift store has to send out their gifts. They can send the gifts using the <var>postal service</var> which can take <param>100</param> <obj_name>gifts</obj_name> per pickup or by hiring <var>vans</var> which can take <param>80</param> <obj_name>gifts</obj_name> each. The cost per pickup from the <var>postal office</var> is $<param>50</param> and the cost per <var>van</var> is $<param>40</param>. In addition the number of <var>vans</var> <const_dir>cannot exceed</const_dir> the number of <var>postal service</var> pickups. If the store has a <const_dir>budget</const_dir> of $<limit>1000</limit>, how should they spend their money to <obj_dir>maximize</obj_dir> the <obj_name>number of gifts</obj_name> that can be sent?", "output": "max: 100 postal_service + 80 vans\nst: 50 postal_office + 40 van <= 1000\n     vans <= postal_service"}
{"input": "A young boy is trying to gain weight and put muscle. He can eat both <var>tuna salad sandwiches</var> and <var>chicken salad sandwiches</var>. He wants to get a <const_dir>minimum</const_dir> of <limit>100</limit> units of protein and <limit>150</limit> units of fat per day. A <var>tuna salad sandwich</var> <obj_name>costs</obj_name> $<param>5</param> and contains <param>20</param> units of protein and <param>25</param> units of fat. A <var>chicken salad sandwich</var> <obj_name>costs</obj_name> $<param>7</param> and contains <param>25</param> units of protein and <param>15</param> units of fat. How many of each should he eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 5 tuna_salad_sandwich + 7 chicken_salad_sandwich\nst: 20 tuna_salad_sandwich + 25 chicken_salad_sandwich >= 100\n     25 tuna_salad_sandwich + 15 chicken_salad_sandwich >= 150"}
{"input": "A small pharmacy weighs and packages their medication. Each bottle of <var>pills</var> takes <param>20</param> minutes of weighing and <param>10</param> minutes of packaging. Each bottle of <var>cream</var> takes <param>15</param> minutes of weighing and <param>15</param> minutes of packaging. The pharmacy has <const_dir>available</const_dir> <limit>4000</limit> minutes for weighing and <limit>3000</limit> minutes for packaging. If the <obj_name>profit</obj_name> per bottle of <var>pills</var> is $<param>50</param> and the <obj_name>profit</obj_name> per bottle of <var>cream</var> is $<param>60</param>, how many of each should the pharmacy prepare to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 60 cream + 50 pills\nst: 20 pills + 15 cream <= 4000\n     10 pills + 15 cream <= 3000"}
{"input": "A tech company makes <var>laptops</var> and <var>tablets</var>. Each <var>laptop</var> takes <param>20</param> minutes of manufacturing time and requires <param>3</param> units of silicon. Each <var>tablet</var> takes <param>15</param> minutes of manufacturing time and requires <param>2</param> units of silicon. The company must makes <const_dir>at least</const_dir> <limit>30</limit> <var>laptops</var>. They have <limit>1200</limit> minutes of manufacturing time <const_dir>available</const_dir> and <limit>150</limit> units of silicon <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>laptop</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>tablet</var> is $<param>160</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 laptop + 160 tablet\nst: laptops >= 30\n     20 laptop + 15 tablet <= 1200\n     3 laptop + 2 tablet <= 150"}
{"input": "A breakfast diner makes <var>pancakes</var> and <var>waffles</var>. Each <var>pancakes</var> require <param>30</param> grams of flour and <param>10</param> grams of butter. Each <var>waffle</var> requires <param>50</param> grams of flour and <param>15</param> grams of butter. The diner has <const_dir>available</const_dir> <limit>5000</limit> grams of flour and <limit>2000</limit> grams of butter. If the <obj_name>profit</obj_name> per <var>pancake</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>waffle</var> is $<param>7</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 pancake + 7 waffle\nst: 30 pancakes + 50 waffle <= 5000\n     10 pancakes + 15 waffle <= 2000"}
{"input": "A puzzle company makes <var>small</var> and <var>large</var> puzzles. Each <var>small puzzle</var> takes <param>10</param> minutes of cutting and <param>20</param> minutes of quality checking. Each <var>large puzzle</var> takes <param>15</param> minutes of cutting and <param>30</param> minutes of quality checking. The company has <const_dir>available</const_dir> <limit>600</limit> minutes for cutting and <limit>1000</limit> minutes for quality checking. If the <obj_name>profit</obj_name> per <var>small puzzle</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>large puzzle</var> is $<param>12</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 small_puzzle + 12 large_puzzle\nst: 10 small_puzzle + 15 large_puzzle <= 600\n     20 small_puzzle + 30 large_puzzle <= 1000"}
{"input": "You <const_dir>have</const_dir> <limit>30</limit> acres of land on which you grow <var>peaches</var> and <var>nectarines</var>. Each acre of <var>peaches</var> requires $<param>40</param> worth of bug-spray and <param>50</param> minutes of time to spray the bug-spray. Each acre of <var>nectarines</var> requires $<param>50</param> worth of bug-spray and <param>70</param> minutes of time to spray the bug-spray. You have <const_dir>available</const_dir> $<limit>1350</limit> to spend on bug-spray and <limit>2000</limit> minutes <const_dir>available</const_dir> to spray the bug-spray. If the <obj_name>profit</obj_name> per acre of <var>peaches</var> is $<param>300</param> and he <obj_name>profit</obj_name> per acre of <var>nectarines</var> is $<param>350</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 peaches + 350 nectarines\nst: 40 peaches + 50 nectarines <= 1350\n     50 peaches + 70 nectarines <= 2000\n     peaches + nectarines <= 30"}
{"input": "A food truck sells <var>fries</var> and <var>onion rings</var>. To stay in business, they must sell <const_dir>at least</const_dir> <limit>20</limit> orders of <var>fries</var> but they can make <const_dir>at most</const_dir> <limit>50</limit> orders of <var>fries</var>. Also, they must sell <const_dir>at least</const_dir> <limit>10</limit> orders of <var>onion rings</var> but they can make <const_dir>at most</const_dir> <limit>40</limit> orders of <var>onion rings</var>. Due to limited fryer time, the food truck can <const_dir>only</const_dir> sell <limit>50</limit> orders total. If the <obj_name>profit</obj_name> per order of <var>fries</var> is $<param>4</param> and the <obj_name>profit</obj_name> per order of <var>onion rings</var> is $<param>5</param>, how many orders of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 onion_rings + 4 fries\nst: fries >= 20\n     fries <= 50\n     onion_rings >= 10\n     onion_rings <= 40\n     onion_rings + fries <= 50"}
{"input": "A taco stand sells <var>fish</var> and <var>chicken tacos</var>. In a day, they must sell <const_dir>at least</const_dir> <limit>20</limit> <var>fish tacos</var> and <const_dir>at least</const_dir> <limit>40</limit> <var>chicken tacos</var>. However, they can make <const_dir>at most</const_dir> <limit>50</limit> <var>fish tacos</var> and <const_dir>at most</const_dir> <limit>60</limit> <var>chicken tacos</var>. In addition, they <const_dir>only</const_dir> have enough taco shells to make <limit>80</limit> tacos total of either type. If the <obj_name>profit</obj_name> per <var>fish taco</var> is $<param>6</param> and the <obj_name>profit</obj_name> per <var>chicken taco</var> is $<param>4</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 6 fish_taco + 4 chicken_taco\nst: fish_tacos >= 20\n     chicken_tacos >= 40\n     fish_tacos <= 50\n     chicken_tacos <= 60\n     fish_taco + chicken_taco <= 80"}
{"input": "A sandwich store makes <var>large</var> and <var>small</var> sandwiches. Each <var>large sandwich</var> takes <param>4</param> minutes of preparation and <param>5</param> minutes of toasting. Each <var>small sandwich</var> takes <param>3</param> minutes of preparation and <param>4</param> minutes of toasting. The store has <const_dir>available</const_dir> <limit>1000</limit> minutes for preparation and <limit>1200</limit> minutes for toasting. If the <obj_name>profit</obj_name> per <var>large sandwich</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>small sandwich</var> is $<param>3.50</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 large_sandwich + 3.50 small_sandwich\nst: 4 large_sandwich + 3 small_sandwich <= 1000\n     5 large_sandwich + 4 small_sandwich <= 1200"}
{"input": "A tropical farmer <const_dir>has</const_dir> <limit>200</limit> acres of land to grow <var>mangoes</var> and <var>pineapples</var>. Each acre of <var>mangoes</var> costs $<param>80</param> for nutrients and takes <param>2</param> hours for picking. Each acre of <var>pineapples</var> costs $<param>100</param> for nutrients and takes <param>1.5</param> hours of picking. The farmer has <const_dir>available</const_dir> $<limit>18000</limit> to spend on nutrients and <limit>350</limit> hours <const_dir>available</const_dir> for picking. If the <obj_name>profit</obj_name> per acre of <var>mangos</var> is $<param>400</param> and the <obj_name>profit</obj_name> per acre of <var>pineapples</var> is $<param>450</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 450 pineapples + 400 mangos\nst: pineapples + mangos <= 200\n     80 mangoes + 100 pineapples <= 18000\n     2 mangoes + 1.5 pineapples <= 350"}
{"input": "A man insists he can meet his calorie and protein requirements from eating <var>burgers</var> and <var>fries</var>. He wants to get <const_dir>at least</const_dir> <limit>3000</limit> calories and <limit>150</limit> grams of protein. Each <var>burger</var> contains <param>500</param> calories and <param>30</param> grams of protein while each order of <var>fries</var> contains <param>300</param> calories and <param>5</param> grams of protein. If the <obj_name>cost</obj_name> per <var>burger</var> is $<param>7</param> and the <obj_name>cost</obj_name> per order of <var>fries</var> is $<param>3</param>, how many of each should he eat to meet his requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 7 burger + 3 fries\nst: 500 burger + 300 fries >= 3000\n     30 burger + 5 fries >= 150"}
{"input": "A pen store sells <var>regular pens</var> and <var>premium pens</var> made of higher quality material. They can sell x1 <var>regular pens</var> at a <obj_name>profit</obj_name> of $<param>3</param> each and x2 <var>premium pens</var> at a <obj_name>profit</obj_name> of $<param>8</param> each (x1 nd x2 are both greater than or equal to 0). Daily demand for <var>regular pens</var> is <const_dir>at most</const_dir> <limit>100</limit> and daily demand for <var>premium pens</var> is <const_dir>at most</const_dir> <limit>50</limit>. If the store can sell <const_dir>at most</const_dir> <limit>75</limit> pens of either type per day, how many of each pen should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 regular_pens + 8 premium_pens\nst: regular_pens <= 100\n     premium_pens <= 50\n     regular_pens + premium_pens <= 75"}
{"input": "A mattress company makes <var>queen</var> and <var>king</var> sized mattresses. <var>Queen size mattresses</var> require <param>20</param> units of foam while <var>king size mattresses</var> require <param>30</param> units of foam. <var>Queen size mattresses</var> take <param>10</param> minutes to package while <var>king size mattresses</var> take <param>15</param> minutes to package. The company has <limit>5000</limit> units of foam <const_dir>available</const_dir> and <limit>2500</limit> minutes of packaging time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>queen mattress</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>king mattress</var> is $<param>500</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 king_mattress + 300 queen_mattress\nst: 20 Queen_size_mattresses + 30 king_size_mattresses <= 5000\n     10 Queen_size_mattresses + 15 king_size_mattresses <= 2500"}
{"input": "A dog owner mixes two types of dog food to ensure the new mixture contains a <const_dir>minimum</const_dir> of <limit>12</limit> units of meat and <limit>8</limit> units of micronutrients. <var>Type A food</var> contains <param>1</param> unit of meat and <param>2</param> units of micronutrients per kg. <var>Type B food</var> contains <param>3</param> units of meat and <param>1</param> unit of micronutrients per kg. If it <obj_name>costs</obj_name> $<param>2</param> per kg of <var>Type A food</var> and $<param>5</param> per kg of <var>Type B food</var>, how many kg of each should the owner buy to <obj_dir>minimize</obj_dir> her <obj_name>costs</obj_name>?", "output": "min: 2 Type_A_food + 5 Type_B_food\nst: 1 Type_A_food + 3 Type_B_food >= 12\n     1 Type_B_food + 2 Type_A_food >= 8"}
{"input": "A street vendor sells <var>fried fish</var> and <var>fried chicken</var>. Each piece of <var>fried fish</var> requires <param>3</param> units of batter and <param>5</param> units of oil. Each piece of <var>fried chicken</var> requires <param>4</param> units of batter and <param>6</param> units of oil. The vendor has <const_dir>available</const_dir> <limit>400</limit> units of batter and <limit>500</limit> units of oil. If the <obj_name>revenue</obj_name> per piece of <var>fried fish</var> is $<param>4</param> and the <obj_name>revenue</obj_name> per piece of <var>fried chicken</var> is $<param>5</param>, how many of each should he sell to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 4 fried_fish + 5 fried_chicken\nst: 3 fried_fish + 4 fried_chicken <= 400\n     5 fried_fish + 6 fried_chicken <= 500"}
{"input": "A man knits <var>toques</var> and <var>scarfs</var>. A <var>toque</var> requires <param>3</param> units of yarn and <param>30</param> minutes of time. A <var>scarf</var> requires <param>5</param> units of yarn and <param>40</param> minutes of time. The man has <limit>200</limit> units of yarn <const_dir>available</const_dir> and <limit>1800</limit> minutes of time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>toque</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>scarf</var> is $<param>7</param>, how many of each should he knit to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 7 scarf + 5 toque\nst: 3 toque + 5 scarf <= 200\n     30 toque + 40 scarf <= 1800"}
{"input": "A small candy store hand makes hard candy. Each packet of <var>lemon candy</var> takes <param>20</param> minutes to make and each packet of <var>cherry candy</var> takes <param>25</param> minutes to make. The store has <const_dir>available</const_dir> <limit>3000</limit> minutes to make the packets. In addition, they can make <const_dir>at most</const_dir> <limit>100</limit> <var>lemon candy</var> packets and <limit>80</limit> <var>cherry candy</var> packets. If the <obj_name>profit</obj_name> per packet of <var>lemon candy</var> is $<param>5</param> and the <obj_name>profit</obj_name> per packet of <var>cherry candy</var> is $<param>7</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 cherry_candy + 5 lemon_candy\nst: 20 lemon_candy + 25 cherry_candy <= 3000\n     lemon_candy <= 100\n     cherry_candy <= 80"}
{"input": "A candy company wants to make a special mix using <var>sour cherry candies</var> and <var>sour peach candies</var>. Each <var>sour cherry candy</var> has <param>2</param> units of citric acid and <param>3</param> units of sugar. Each <var>sour peach candy</var> has <param>1</param> units of citric acid and <param>4</param> units of sugar.  The special mix must contain <const_dir>at least</const_dir> <limit>50</limit> units of citric acid and <limit>60</limit> units of sugar. In addition, there can be <const_dir>at most</const_dir> <limit>10</limit> <var>sour cherry candies</var> in the mixture. If the <obj_name>cost</obj_name> per <var>sour cherry candy</var> is $<param>0.10</param> and the <obj_name>cost</obj_name> per <var>sour peach candy</var> is $<param>0.12</param>, how many of each should be in the mixture to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 0.10 sour_cherry_candy + 0.12 sour_peach_candy\nst: 2 sour_cherry_candy + 1 sour_peach_candy >= 50\n     3 sour_cherry_candy + 4 sour_peach_candy >= 60\n     sour_cherry_candies <= 10"}
{"input": "Mark has to take supplements to meet his daily <const_dir>requirements</const_dir> of <limit>30</limit> units of vitamin A, <limit>20</limit> units of vitamin C, <limit>40</limit> units of vitamin D, and <limit>30</limit> units of vitamin E. He can take <var>chewable pills</var> that each contain <param>2</param> units of vitamin A, <param>3</param> units of vitamin C, <param>3</param> units of vitamin D, and <param>2</param> units of vitamin E or he can take <var>regular pills</var> that each contain <param>3</param> units of vitamin A, <param>2</param> units of vitamin C, <param>4</param> units of vitamin D, and <param>4</param> units of vitamin E. If each <var>chewable pill</var> <obj_name>costs</obj_name> $<param>0.50</param> and each <var>regular pill</var> <obj_name>costs</obj_name> $<param>0.40</param>, how many of each supplement should he buy to meet his requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 0.50 chewable_pill + 0.40 regular_pill\nst: 2 chewable_pills + 3 regular_pills >= 30\n     3 chewable_pills + 2 regular_pills >= 20\n     3 chewable_pills + 4 regular_pills >= 40\n     2 chewable_pills + 4 regular_pills >= 30"}
{"input": "A factory makes <var>maple pecan</var> and <var>mint chocolate ice cream</var>. Each type of ice cream requires time on a mixing machine and a freezing machine. A batch of <var>maple pecan ice cream</var> requires <param>50</param> minutes of mixing and <param>80</param> minutes of freezing. A batch of <var>mint chocolate ice cream</var> requires <param>30</param> minutes of mixing and <param>70</param> minutes of freezing. While the mixing machine is <const_dir>available</const_dir> for <limit>8000</limit> minutes per month, the freezing machine is <const_dir>available</const_dir> for <limit>10000</limit> minutes per month. If the <obj_name>profit</obj_name> per batch of <var>maple pecan ice cream</var> is $<param>400</param> and the <obj_name>profit</obj_name> per batch of <var>mint chocolate ice cream</var> is $<param>250</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 maple_pecan_ice_cream + 250 mint_chocolate_ice_cream\nst: 50 maple_pecan_ice_cream + 30 mint_chocolate_ice_cream <= 8000\n     80 maple_pecan_ice_cream + 70 mint_chocolate_ice_cream <= 10000"}
{"input": "An engineering company makes <var>small</var> and <var>large</var> PCB's. A <var>small PCB</var> requires <param>3</param> units of silicon while a <var>large PCB</var> requires <param>5</param> units of silicon. A <var>small PCB</var> requires <param>30</param> minutes of design and <param>20</param> minutes of soldering while a <var>large PCB</var> requires <param>40</param> minutes of design and <param>30</param> minutes of soldering. The company has <const_dir>available</const_dir> <limit>250</limit> units of silicon, <limit>800</limit> minutes of design time, and <limit>600</limit> minutes of soldering time. They also want to make a <const_dir>minimum</const_dir> of <limit>5</limit> <var>small PCB</var>'s and <limit>6</limit> <var>large PCB</var>'s. If the <obj_name>profit</obj_name> per <var>small PCB</var> is $<param>20</param> and the <obj_name>profit</obj_name> per <var>large PCB</var> is $<param>35</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 35 large_PCB + 20 small_PCB\nst: 3 small_PCB + 5 large_PCB <= 250\n     30 small_PCB + 40 large_PCB <= 800\n     20 small_PCB + 30 large_PCB <= 600\n     small_PCB >= 5\n     large_PCB >= 6"}
{"input": "An aquarium feeds their seals using <var>sardines</var> and <var>tuna</var>. Each packet of <var>sardines</var> <obj_name>costs</obj_name> $<param>15</param> while each packet of <var>tuna</var> <obj_name>costs</obj_name> $<param>18</param>. Each packet of <var>sardines</var> contains <param>4</param> grams of fat, <param>12</param> grams of essential fatty acids, and <param>10</param> grams of protein. Each packet of <var>tuna</var> contains <param>6</param> grams of fat, <param>10</param> grams of essential fatty acids, and <param>7</param> grams of protein. The aquarium needs <const_dir>in total</const_dir> <limit>800</limit> grams of fat, <limit>1200</limit> grams of essential fatty acids, and <limit>700</limit> grams of protein to feed their seals. How many of each packet should they buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 15 sardines + 18 tuna\nst: 4 sardines + 6 tuna >= 800\n     12 sardines + 10 tuna >= 1200\n     10 sardines + 7 tuna >= 700"}
{"input": "A doctor prescribes a patient two options for his blood pressure and diabetes requirements. There are two pills, a <var>blue pill</var> and a <var>red pill</var>. The <var>blue pill</var> <obj_name>costs</obj_name> $<param>1</param> and contains <param>10</param> units of blood pressure medication and <param>3</param> units of diabetes medication. The <var>red pill</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>5</param> units of blood pressure medication and <param>7</param> units of diabetes medication. If the patient requires <const_dir>at least</const_dir> <limit>100</limit> units of blood pressure medication and <limit>70</limit> units of diabetes medication per week, how many of each pill should he purchase to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 1 blue_pill + 2 red_pill\nst: 10 blue_pill + 5 red_pill >= 100\n     3 blue_pill + 7 red_pill >= 70"}
{"input": "A small bakery <const_dir>has</const_dir> <limit>1000</limit> grams of batter and <limit>800</limit> grams of milk to make their <var>soft</var>, <var>smooth</var>, and <var>crunchy</var> cake-pops. A <var>soft cake-pop</var> needs <param>20</param> grams of batter and <param>10</param> grams of milk. A <var>smooth cake-pop</var> requires <param>15</param> grams of batter and <param>15</param> grams of milk. A <var>crunchy cake-pop</var> requires <param>12</param> grams of batter and <param>18</param> grams of milk. If the <obj_name>profit</obj_name> per <var>soft cake-pop</var> is $<param>4</param>, the <obj_name>profit</obj_name> per <var>smooth cake-pop</var> is $<param>6</param>, and the <obj_name>profit</obj_name> per <var>crunchy cake-pop</var> is $<param>5</param>, how many of each should the bakery make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 4 soft_cake-pop + 6 smooth_cake-pop + 5 crunchy_cake-pop\nst: 20 soft_cake-pop + 15 smooth_cake-pop + 12 crunchy_cake-pop <= 1000\n     10 soft_cake-pop + 15 smooth_cake-pop + 18 crunchy_cake-pop <= 800"}
{"input": "An auto plant makes <var>cars</var> and <var>trucks</var>. Each <var>car</var> takes <param>2</param> hours on the assembly line and <param>1</param> hour of mechanic time. Each <var>truck</var> takes <param>2.5</param> hours on the assembly line and <param>1.5</param> hours of mechanic time. There are <limit>800</limit> hours of assembly line time <const_dir>available</const_dir> and <limit>600</limit> hours of mechanic time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>car</var> is $<param>5000</param> and the <obj_name>profit</obj_name> per <var>truck</var> is $<param>8000</param>, how many of each should the plant make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8000 truck + 5000 car\nst: 2 car + 2.5 truck <= 800\n     1 car + 1.5 truck <= 600"}
{"input": "A maple farm makes <var>maple syrup</var> and <var>maple candy</var>. They can make <const_dir>at most</const_dir> <limit>10</limit> kg of <var>maple syrup</var> and <const_dir>at most</const_dir> <limit>12</limit> kg of <var>maple candy</var>. In addition, they must supply <const_dir>at least</const_dir> <limit>3</limit> kg of <var>maple syrup</var> and <limit>5</limit> kg of <var>maple candy</var> per day. Both require time in a maple boiling station. Each kg of <var>maple syrup</var> and <var>maple candy</var> requires <param>2</param> hours at the boiling station. The boiling station is available for <const_dir>at most</const_dir> <limit>20</limit> hours per day. If the <obj_name>profit</obj_name> per kg of <var>maple syrup</var> is $<param>20</param> and the <obj_name>profit</obj_name> per kg of <var>maple candy</var> is $<param>15</param>, how many kg of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 maple_syrup + 15 maple_candy\nst: maple_syrup <= 10\n     maple_candy <= 12\n     maple_syrup >= 3\n     maple_candy >= 5\n     2 maple_syrup + 2 maple_candy <= 20"}
{"input": "A man takes two supplements to get his keratin and calcium requirements. He needs <const_dir>at least</const_dir> <limit>12</limit> units of keratin and <limit>20</limit> units of calcium. Per serving, <var>supplement A</var> contains <param>1</param> unit of keratin and <param>5</param> units of calcium. Per serving, <var>supplement B</var> contains <param>4</param> units of keratin and <param>1</param> unit of calcium. If the <obj_name>cost</obj_name> per serving for <var>supplement A</var> is $<param>2</param> and the <obj_name>cost</obj_name> per serving of <var>supplement B</var> is $<param>4</param>, how many of each supplement should he take to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 2 supplement_A + 4 supplement_B\nst: 1 supplement_A + 4 supplement_B >= 12\n     5 supplement_A + 1 supplement_B >= 20"}
{"input": "An office chair company makes <var>leather</var> and <var>mesh chairs</var>. Two different teams make the chairs. Team A who make the <var>leather chairs</var> can make <const_dir>at most</const_dir> <limit>20</limit> a day. Team B who make the <var>mesh chairs</var> can make <const_dir>at most</const_dir> <limit>30</limit> a day. Both chairs have to be quality checked by another team, and this team can quality check <const_dir>at most</const_dir> <limit>30</limit> chairs of either type per day. If the <obj_name>profit</obj_name> per <var>leather chair</var> is $<param>150</param> and the <obj_name>profit</obj_name> per <var>mesh chair</var> is $<param>100</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 leather_chair + 100 mesh_chair\nst: leather_chairs <= 20\n     mesh_chairs <= 30\n     leather_chair + mesh_chair <= 30"}
{"input": "A store sells two bowls of ramen. <var>Bowl 1</var> requires <param>2</param> units of broth and <param>2</param> units of toppings. <var>Bowl 2</var> requires <param>3</param> units of broth and <param>1</param> unit of toppings. The store has <const_dir>available</const_dir> <limit>300</limit> units of broth and <limit>250</limit> units of toppings. Formulate a LP to <obj_dir>maximize</obj_dir> the <obj_name>number of bowls</obj_name> of either type that can be made.", "output": "max: \nst: 2 Bowl_1 + 3 Bowl_2 <= 300\n     2 Bowl_1 + 1 Bowl_2 <= 250"}
{"input": "A factory sells fabric in two packages. <var>Package 1</var> contains <param>20</param> meters of blue fabric and <param>30</param> meters of red fabric. <var>Package 2</var> contains <param>40</param> meters of blue fabric and <param>40</param> meters of red fabric. The factory <const_dir>has</const_dir> <limit>10000</limit> meters of blue fabric and <limit>12000</limit> meters of red fabric. If the <obj_name>profit</obj_name> per <var>package 1</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>package 2</var> is $<param>70</param>, how many of each package should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 package_1 + 70 package_2\nst: 20 Package_1 + 40 Package_2 <= 10000\n     30 Package_1 + 40 Package_2 <= 12000"}
{"input": "A company hand fills <var>shampoo</var> and <var>conditioner</var> bottles. Each <var>shampoo bottle</var> takes <param>3</param> minutes to fill and each <var>conditioner bottle</var> takes <param>4</param> minutes to fill. The company must fill <const_dir>at least</const_dir> <limit>50</limit> <var>shampoo bottles</var> and <const_dir>at least</const_dir> <limit>30</limit> <var>conditioner bottles</var>. The company has <limit>300</limit> minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>shampoo bottle</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>conditioner bottle</var> is $<param>6</param>, how many of each should be filled in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 shampoo_bottle + 6 conditioner_bottle\nst: 3 shampoo_bottle + 4 conditioner_bottle <= 300\n     shampoo_bottles >= 50\n     conditioner_bottles >= 30"}
{"input": "A furniture company makes <var>chairs</var> and <var>shelves</var>. Each <var>chair</var> requires  <param>30</param> minutes of assembly and <param>50</param> minutes of painting. Each <var>shelf</var> requires <param>20</param> minutes of assembly and <param>60</param> minutes of painting. The company has <const_dir>available</const_dir> <limit>3000</limit> minutes for assembly and <limit>4000</limit> minutes for painting. If the <obj_name>profit</obj_name> per <var>chair</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>shelf</var> is $<param>55</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 chair + 55 shelf\nst: 30 chair + 20 shelf <= 3000\n     50 chair + 60 shelf <= 4000"}
{"input": "You have two sodas that contain caffeine and sugar. <var>Soda 1</var> contains <param>3</param> units of caffeine and <param>2</param> units of sugar per can. <var>Soda 2</var> contains <param>2</param> units of caffeine and <param>5</param> units of sugar per can. You must consume <const_dir>at least</const_dir> <limit>50</limit> units of caffeine and <limit>40</limit> units of sugar. If a can of <var>soda 1</var> <obj_name>costs</obj_name> $<param>5</param> and a can of <var>soda 2</var> <obj_name>costs</obj_name> $<param>7</param>, how many of each should you buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 5 soda_1 + 7 soda_2\nst: 3 Soda_1 + 2 Soda_2 >= 50\n     2 Soda_1 + 5 Soda_2 >= 40"}
{"input": "You are playing a game where you can hit <var>slow balls</var> or <var>fast balls</var>. Each <var>slow ball</var> hit is <param>3</param> <obj_name>points</obj_name> and each <var>fast ball</var> hit is <param>5</param> <obj_name>points</obj_name>. You have to hit <const_dir>at least</const_dir> <limit>5</limit> <var>slow balls</var> and <const_dir>at least</const_dir> <limit>3</limit> <var>fast balls</var>. However you can hit <const_dir>at most</const_dir> <limit>8</limit> <var>slow balls</var> and <const_dir>at most</const_dir> <limit>8</limit> <var>fast balls</var>. In total, you can hit <const_dir>no more than</const_dir> <limit>12</limit> balls. How many of each type of ball should you hit to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 3 slow_ball + 5 fast_ball\nst: slow_balls >= 5\n     slow_balls <= 8\n     fast_balls <= 8\n     slow_ball + fast_ball <= 12\n     fast_balls >= 3"}
{"input": "Two different meals, a <var>vegetarian</var> and <var>meat option</var>, are eaten everyday to get protein and carbs. A <var>vegetarian meal</var> contains <param>10</param> grams of protein and <param>20</param> grams of carbs. A <var>meat meal</var> contains <param>30</param> grams of protein and <param>15</param> grams of carbs. Daily requirements are <const_dir>at least</const_dir> <limit>100</limit> grams of protein and <limit>150</limit> grams of carbs. If a <var>vegetarian meal</var> <obj_name>costs</obj_name> $<param>4</param> and a <var>meat meal</var> <obj_name>costs</obj_name> $<param>6</param>, how many of each should be eaten to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 4 vegetarian_meal + 6 meat_meal\nst: 10 vegetarian_meal + 30 meat_meal >= 100\n     20 vegetarian_meal + 15 meat_meal >= 150"}
{"input": "A farmer <const_dir>has</const_dir> <limit>90</limit> acres of land to grow <var>mushrooms</var> and <var>truffles</var>. Each acre of <var>mushrooms</var> requires $<param>80</param> in maintenance and <param>2</param> hours of care. Each acre of <var>truffles</var> requires $<param>200</param> in maintenance and <param>3</param> hours of care. The farmer has <const_dir>at most</const_dir> $<limit>13500</limit> to spend on maintenance and <limit>120</limit> hours of time available for care keeping. If the <obj_name>profit</obj_name> per acre of <var>mushrooms</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>truffles</var> is $<param>500</param>, how many  acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 truffles + 200 mushrooms\nst: truffles + mushrooms <= 90\n     80 mushrooms + 200 truffles <= 13500\n     2 mushrooms + 3 truffles <= 120"}
{"input": "A printing company prints <var>books</var> and <var>magazines</var> for sale. Each <var>book</var> takes <param>10</param> minutes for printing and <param>5</param> minutes for binding. Each <var>magazine</var> takes <param>20</param> minutes for printing and <param>3</param> minutes for binding. The company has <const_dir>available</const_dir> <limit>5000</limit> minutes for printing and <limit>2000</limit> minutes for binding. If the <obj_name>profit</obj_name> per <var>book</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>magazine</var> sold is $<param>8</param>, how many of each should they print to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 5 book + 8 magazine\nst: 10 book + 20 magazine <= 5000\n     5 book + 3 magazine <= 2000"}
{"input": "A bagel company has two bakeries, an <var>Eastside bakery</var> and a <var>Westside bakery</var>. The <var>Eastside bakery</var> <obj_name>costs</obj_name> $<param>300</param> to run for 1 hour while the <var>Westside bakery</var> <obj_name>costs</obj_name> $<param>500</param> to run for 1 hour. In an hour, the <var>Eastside bakery</var> yields <param>100</param> everything bagels, <param>80</param> blueberry bagels, and <param>30</param> regular bagels. In an hour, the <var>Westside bakery</var> yields <param>50</param> everything bagels, <param>60</param> blueberry bagels, and <param>100</param> regular bagels. The bagel company must produce <const_dir>at least</const_dir> <limit>800</limit> everything bagels, <limit>600</limit> blueberry bagels, and <limit>1000</limit> regular bagels in total. How many hours should each bakery be run to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 300 Eastside_bakery + 500 Westside_bakery\nst: 100 Eastside_bakery + 50 Westside_bakery >= 800\n     80 Eastside_bakery + 60 Westside_bakery >= 600\n     30 Eastside_bakery + 100 Westside_bakery >= 1000"}
{"input": "A dietician recommends that his patient eat jelly supplements to get his mineral requirements. Each <var>blue jelly pouch</var> contains <param>2</param> units of calcium, <param>1</param> unit of potassium, and <param>3</param> units of sodium. Each <var>red jelly pouch</var> contains <param>3</param> units of calcium, <param>2</param> units of potassium, and <param>1</param> unit of sodium. The patient must get <const_dir>at least</const_dir> <limit>30</limit> units of calcium, <limit>25</limit> units of potassium, and <limit>30</limit> units of sodium. If the <obj_name>cost</obj_name> per <var>blue jelly pouch</var> is $<param>5</param> and the <obj_name>cost</obj_name> per <var>red jelly pouch</var> is $<param>7</param>, how many of each should the patient purchase to <obj_dir>minimize</obj_dir> his <obj_name>costs</obj_name>?", "output": "min: 5 blue_jelly_pouch + 7 red_jelly_pouch\nst: 2 blue_jelly_pouch + 3 red_jelly_pouch >= 30\n     2 red_jelly_pouch + 1 blue_jelly_pouch >= 25\n     1 red_jelly_pouch + 3 blue_jelly_pouch >= 30"}
{"input": "An auto manufacturing plant has a machine that makes <var>doors</var> and <var>bumpers</var>. Each <var>door</var> takes <param>20</param> minutes of machine time and each <var>bumper</var> takes <param>10</param> minutes of machine time.  In a week the machine is <const_dir>only</const_dir> available for <limit>3000</limit> minutes. The plant can also make <const_dir>at most</const_dir> <limit>100</limit> <var>doors</var> and <const_dir>at most</const_dir> <limit>200</limit> <var>bumpers</var> per week. If the <obj_name>profit</obj_name> per <var>door</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>bumper</var> is $<param>150</param>, how many of each should the plant make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 door + 150 bumper\nst: 20 door + 10 bumper <= 3000\n     doors <= 100\n     bumpers <= 200"}
{"input": "A lighting company makes <var>glass</var> and <var>brass</var> chandeliers. Each <var>glass chandelier</var> takes <param>2</param> hours for crafting and <param>1</param> hour for installation. Each <var>brass chandelier</var> takes <param>1.5</param> hours for crafting and <param>0.75</param> hours for installation. The company has <const_dir>available</const_dir> <limit>750</limit> hours for crafting and <limit>500</limit> hours for installation. If the <obj_name>profit</obj_name> per <var>glass chandelier</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>brass chandelier</var> is $<param>300</param>, how many of each should the company craft and install to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 glass_chandelier + 300 brass_chandelier\nst: 2 glass_chandelier + 1.5 brass_chandelier <= 750\n     1 glass_chandelier + 0.75 brass_chandelier <= 500"}
{"input": "A smoothie shop makes <var>peanut butter</var> and <var>almond butter smoothies</var>. Three ingredients are needed to make the smoothies: peanut butter, almond butter, and milk. One <var>peanut butter smoothie</var> requires <param>2</param> units of peanut butter and <param>3</param> units of milk. One <var>almond butter smoothie</var> requires <param>3</param> units of almond butter and <param>3</param> units of milk. The shop has <const_dir>available</const_dir> <limit>80</limit> units of peanut butter, <limit>90</limit> units of almond butter, and <limit>100</limit> units of milk. If the <obj_name>profit</obj_name> per <var>peanut butter smoothie</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>almond butter smoothie</var> is $<param>5</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 peanut_butter_smoothie + 5 almond_butter_smoothie\nst: 2 peanut_butter_smoothie <= 80\n     3 almond_butter_smoothie <= 90\n     3 peanut_butter_smoothie + 3 almond_butter_smoothie <= 100"}
{"input": "A company makes <var>hoodies</var> and <var>sweaters</var>. Each <var>hoodie</var> requires <param>3</param> units of fabric and <param>2</param> units of dye. Each <var>sweater</var> requires <param>2</param> units of fabric and <param>1.5</param> units of dye. At the company, there are <limit>500</limit> units of fabric <const_dir>available</const_dir> and <limit>300</limit> units of dye. If the <obj_name>profit</obj_name> per <var>hoodie</var> is $<param>20</param> and the <obj_name>profit</obj_name> per <var>sweater</var> is $<param>15</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 hoodie + 15 sweater\nst: 3 hoodie + 2 sweater <= 500\n     2 hoodie + 1.5 sweater <= 300"}
{"input": "A kitchen company makes <var>spoons</var>, <var>forks</var>, and <var>knives</var> with rubber handles. Each <var>spoon</var> requires <param>1</param> unit of steel and <param>2</param> units of rubber. Each <var>fork</var> requires <param>1.5</param> units of steel and <param>1.5</param> units of rubber. Each <var>knife</var> requires <param>2</param> units of steel and <param>1</param> unit of rubber. The company has <const_dir>available</const_dir> <limit>400</limit> units of steel and <limit>500</limit> units of rubber. If the <obj_name>revenue</obj_name> per <var>spoon</var> is $<param>2</param>, the <obj_name>revenue</obj_name> per <var>fork</var> is $<param>3</param>, and the <obj_name>revenue</obj_name> per <var>knife</var> is $<param>4</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 4 knife + 3 fork + 2 spoon\nst: 1 spoon + 1.5 fork + 2 knife <= 400\n     2 spoon + 1.5 fork + 1 knife <= 500"}
{"input": "An orange farm is trying to send their oranges to the city. They can either send them by <var>train</var> or by <var>car</var>. Each <var>train trip</var> costs $<param>50</param> and can take <param>500</param> <obj_name>oranges</obj_name> while each <var>car trip</var> costs $<param>30</param> and can take <param>200</param> <obj_name>oranges</obj_name>. Due to scheduling issues, the number of <var>train trips</var> <const_dir>cannot exceed</const_dir> the number of <var>car trips</var>. If the farm has a <const_dir>budget</const_dir> of $<limit>500</limit>, <obj_dir>maximize</obj_dir> the <obj_name>number of oranges</obj_name> they can send.", "output": "max: 500 train_trip + 200 car_trip\nst: 50 train_trip + 30 car_trip <= 500\n     train_trips <= car_trips"}
{"input": "A hiker eats two types of trail mix and wants to make sure he eats <const_dir>at least</const_dir> <limit>20</limit> units of almonds and <limit>15</limit> units of chocolate chips. <var>Trail mix A</var> contains <param>2</param> units of almonds and <param>1</param> unit of chocolate chips per bag. <var>Trail mix B</var> contains <param>2</param> units of almonds and <param>3</param> units of chocolate chips per bag. If <var>trail mix A</var> <obj_name>costs</obj_name> $<param>5</param> per bag and <var>trail mix B</var> <obj_name>costs</obj_name> $<param>8</param> per bag, how many bags of each should the hiker purchase to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 5 trail_mix_A + 8 trail_mix_B\nst: 2 Trail_mix_A + 2 Trail_mix_B >= 20\n     1 Trail_mix_A + 3 Trail_mix_B >= 15"}
{"input": "A doctor prescribed two pills to a patient. <var>Pill A</var> contains <param>2</param> units of muscle relaxant, <param>3</param> units of anxiety medication, and <param>4</param> units of pain reliever per pill. <var>Pill B</var> contains <param>5</param> units of muscle relaxant, <param>1</param> unit of anxiety medication, and <param>3</param> units of pain reliever per pill. <var>Pill A</var> <obj_name>costs</obj_name> $<param>3</param> per pill while <var>pill B</var> <obj_name>costs</obj_name> $<param>5</param> per pill. The patient must get <const_dir>at least</const_dir> <limit>30</limit> units of muscle relaxant, <limit>15</limit> units of anxiety medication, and <limit>20</limit> units of pain reliever. How many of each pill should he buy to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 Pill_A + 5 pill_B\nst: 2 Pill_A + 5 Pill_B >= 30\n     3 Pill_A + 1 Pill_B >= 15\n     4 Pill_A + 3 Pill_B >= 20"}
{"input": "A game involves throwing <var>red bean bags</var> and <var>blue bean bags</var> at a target. Each <var>red bean bag</var> that hits the target is worth <param>5</param> <obj_name>points</obj_name> and each <var>blue bean bag</var> that hits the target is worth <param>8</param> <obj_name>points</obj_name>. You must throw <const_dir>at least</const_dir> <limit>3</limit> <var>red bean bags</var> and <limit>2</limit> <var>blue bean bags</var>, but <const_dir>at most</const_dir> <limit>8</limit> of either type. In <const_dir>total</const_dir>, you must throw <limit>12</limit> bean bags. Assuming you always hit the target, how many of each color bean bag should you throw to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 5 red_bean_bag + 8 blue_bean_bag\nst: red_bean_bags >= 3\n     blue_bean_bags >= 2\n     red_bean_bags <= 8\n     blue_bean_bags <= 8\n     red_bean_bag + blue_bean_bag <= 12"}
{"input": "A woman owns two chocolate shops. Running <var>shop 1</var> for an hour <obj_name>costs</obj_name> $<param>50</param> and makes <param>5</param> milk chocolate bars, <param>8</param> dark chocolate bars, and <param>6</param> white chocolate bars. Running <var>shop 2</var> for an hour <obj_name>costs</obj_name> $<param>75</param> and makes <param>8</param> milk chocolate bars, <param>7</param> dark chocolate bars, and <param>4</param> white chocolate bars. To meet demand, she must make <const_dir>at least</const_dir> <limit>50</limit> milk chocolate bars, <limit>60</limit> dark chocolate bars, and <limit>30</limit> white chocolate bars. How many hours should she run each shop to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 50 shop_1 + 75 shop_2\nst: 5 shop_1 + 8 shop_2 >= 50\n     8 shop_1 + 7 shop_2 >= 60\n     6 shop_1 + 4 shop_2 >= 30"}
{"input": "A restaurant cleans and cuts both <var>small fish</var> and <var>large fish</var>. Each <var>small fish</var> take <param>5</param> minutes of cleaning and <param>10</param> minutes of cutting. Each <var>large fish</var> takes <param>10</param> minutes of cleaning and <param>15</param> minutes of cutting. The restaurant has <limit>500</limit> minutes <const_dir>available</const_dir> for cleaning and <limit>700</limit> minutes <const_dir>available</const_dir> for cutting. If the <obj_name>profit</obj_name> per <var>small fish</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>large fish</var> is $<param>11</param>, how many of each fish size should the restaurant clean and cut to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 small_fish + 11 large_fish\nst: 5 small_fish + 10 large_fish <= 500\n     10 small_fish + 15 large_fish <= 700"}
{"input": "A toy company builds and paints <var>model trains</var> and <var>planes</var>. Each <var>model train</var> takes <param>30</param> minutes to build and <param>40</param> minutes to paint. Each <var>model plane</var> takes <param>40</param> minutes to build and <param>50</param> minutes to paint. The company has at most <limit>5000</limit> minutes <const_dir>available</const_dir> for building and <limit>6000</limit> minutes <const_dir>available</const_dir> for painting. If the company makes a <obj_name>profit</obj_name> of $<param>7</param> per <var>model train</var> and a <obj_name>profit</obj_name> of $<param>9</param> per <var>model plane</var>, how many of each should they make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 7 model_train + 9 model_plane\nst: 30 model_train + 40 model_plane <= 5000\n     40 model_train + 50 model_plane <= 6000"}
{"input": "In a video game, you can solve <var>easy puzzles</var> worth <param>5</param> <obj_name>points</obj_name> or <var>hard puzzles</var> worth <param>8</param> <obj_name>points</obj_name>. You have to solve <const_dir>at least</const_dir> <limit>3</limit> <var>easy puzzles</var> and <limit>1</limit> <var>hard puzzle</var>. Due to time restrictions, you can solve <const_dir>at most</const_dir> <limit>10</limit> <var>easy puzzles</var> and <limit>5</limit> <var>hard puzzles</var>. In total, you can only solve a <const_dir>maximum</const_dir> of <limit>10</limit> puzzles. How many of each puzzle type should you solve to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 5 easy_puzzles + 8 hard_puzzles\nst: easy_puzzles >= 3\n     hard_puzzle >= 1\n     easy_puzzles <= 10\n     hard_puzzles <= 5\n     easy_puzzles + hard_puzzles <= 10"}
{"input": "A car company makes two types of cars, a <var>race car</var> and a <var>regular car</var>. Two different teams produce each of these cars. The <var>race car</var> team can make <const_dir>at most</const_dir> <limit>3</limit> <var>race cars</var> per day while the <var>regular car</var> team can make <const_dir>at most</const_dir> <limit>5</limit> <var>regular cars</var> per day. Both cars need to go through a safety check, and in a day <const_dir>at most</const_dir> <limit>6</limit> cars of either type can be safety checked. If the <obj_name>profit</obj_name> per <var>race car</var> is $<param>20000</param> and the <obj_name>profit</obj_name> per <var>regular car</var> is $<param>10000</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 20000 race_car + 10000 regular_car\nst: race_cars <= 3\n     regular_cars <= 5\n     race_car + regular_car <= 6"}
{"input": "A cleaning company cleans <var>houses</var> and <var>apartments</var>. Each <var>house</var> requires <param>2</param> hours of sweeping and <param>2</param> hours of mopping. Each <var>apartment</var> requires <param>1</param> hour of sweeping and <param>1.5</param> hours of mopping. The company has <const_dir>available</const_dir> <limit>600</limit> hours for sweeping and <limit>700</limit> hours for mopping. If the <obj_name>profit</obj_name> per <var>house</var> cleaned is $<param>300</param> and the <obj_name>profit</obj_name> per <var>apartment</var> cleaned is $<param>250</param>, how many of each should the company clean to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 house + 250 apartment\nst: 2 house + 1 apartment <= 600\n     2 house + 1.5 apartment <= 700"}
{"input": "A wood shop makes <var>canoes</var> and <var>paddles</var>. Each requires time for cutting, woodworking, and sanding. Each <var>canoe</var> takes <param>1</param> hour of cutting, <param>5</param> hours of woodworking, and <param>2</param> hours of sanding. Each <var>paddle</var> takes <param>0.5</param> hours of cutting, <param>1</param> hour of woodworking, and <param>0.75</param> hours of sanding. The wood shop has <limit>80</limit> hours <const_dir>available</const_dir> for cutting, <limit>100</limit> hours <const_dir>available</const_dir> for woodworking, and <limit>70</limit> hours <const_dir>available</const_dir> for sanding. If the <obj_name>profit</obj_name> per <var>canoe</var> is $<param>500</param> and the <obj_name>profit</obj_name> per <var>paddle</var> is $<param>75</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 500 canoe + 75 paddle\nst: 1 canoe + 0.5 paddle <= 80\n     5 canoe + 1 paddle <= 100\n     2 canoe + 0.75 paddle <= 70"}
{"input": "A pie shop sells <var>regular and</var> <var>premium pies</var>. They make x1 <var>regular pies</var> at a <obj_name>profit</obj_name> of $<param>8</param> each and x2 <var>premium pies</var> at a <obj_name>profit</obj_name> of $<param>10</param> each (x1 and x2 are unknown and greater than or equal to 0).  The demand for <var>regular pies</var> is <const_dir>at most</const_dir> <limit>50</limit> and the demand for <var>premium pies</var> is <const_dir>at most</const_dir> <limit>30</limit>. In addition the shop can <const_dir>only</const_dir> make <limit>60</limit> pies total. How many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 regular_pies + 10 premium_pies\nst: regular_pies <= 50\n     premium_pies <= 30\n     regular_pies + premium_pies <= 60"}
{"input": "A dog owner mixes two brands of dog food to ensure his puppy gets <const_dir>at least</const_dir> <limit>30</limit> units of minerals and <limit>40</limit> units of vitamins. A serving of <var>dog food A</var> contains <param>4</param> units of minerals and <param>5</param> units of vitamins. A serving of <var>dog food B</var> contains <param>8</param> units of minerals and <param>2</param> units of vitamins. If <var>dog food A</var> <obj_name>costs</obj_name> $<param>3</param> per serving and <var>dog food B</var> <obj_name>costs</obj_name> $<param>5</param> per serving, how many servings of each should the owner buy and feed his dog in order to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 3 dog_food_A + 5 dog_food_B\nst: 4 dog_food_A + 8 dog_food_B >= 30\n     2 dog_food_B + 5 dog_food_A >= 40"}
{"input": "A farm has to transport their chickens. They can either be transported by <var>train</var> or by <var>truck</var>. Each <var>train trip</var> can take <param>500</param> <obj_name>chicken</obj_name> while each <var>truck trip</var> can take <param>300</param> <obj_name>chicken</obj_name>. The cost per <var>train trip</var> is $<param>100</param> and the cost per <var>truck trip</var> is $<param>80</param>. The farm has a <const_dir>budget</const_dir> of $<limit>2000</limit> and the number of <var>train trips</var> <const_dir>cannot exceed</const_dir> the number of <var>truck trips</var>. How many of each trip should be taken to <obj_dir>maximize</obj_dir> the <obj_name>number of chickens</obj_name> that can be transported?", "output": "max: 500 train_trip + 300 truck_trip\nst: 100 train_trip + 80 truck_trip <= 2000\n     train_trips <= truck_trips"}
{"input": "A costume store sells <var>policeman costumes</var> and <var>fireman costumes</var>. The store has a <const_dir>budget</const_dir> of $<limit>3000</limit> and each <var>policeman costume</var> costs $<param>10</param> and each <var>fireman costume</var> costs $<param>15</param>. The monthly demand for both costumes will <const_dir>not exceed</const_dir> <limit>280</limit>. If the <obj_name>profit</obj_name> per <var>policeman costume</var> is $<param>8</param> and the <obj_name>profit</obj_name> per <var>fireman costume</var> is $<param>10</param>, how many of each should the store stock in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 policeman_costume + 10 fireman_costume\nst: 10 policeman_costume + 15 fireman_costume <= 3000\n     policeman_costume + fireman_costume <= 280"}
{"input": "A company sells <var>tennis rackets</var> and <var>badminton rackets</var>. Each <var>tennis racket</var> takes <param>12</param> minutes to mold and <param>15</param> minutes to string. Each <var>badminton racket</var> takes <param>10</param> minutes to mold and <param>12</param> minutes to string. There are <limit>3000</limit> minutes <const_dir>available</const_dir> for molding and <limit>3500</limit> minutes <const_dir>available</const_dir> for stringing. If the <obj_name>profit</obj_name> per <var>tennis racket</var> is $<param>20</param> and the <obj_name>profit</obj_name> per <var>badminton racket</var> is $<param>17</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 tennis_racket + 17 badminton_racket\nst: 12 tennis_racket + 10 badminton_racket <= 3000\n     15 tennis_racket + 12 badminton_racket <= 3500"}
{"input": "A pizza store makes <var>cheese</var> and <var>pepperoni pizza</var>. Each <var>cheese pizza</var> requires <param>30</param> grams of flour, <param>50</param> grams of cheese, and <param>40</param> grams of sauce. Each <var>pepperoni pizza</var> requires <param>40</param> grams of flour, <param>20</param> grams of cheese, and <param>30</param> grams of sauce. The store has <const_dir>available</const_dir> <limit>3000</limit> grams of flour, <limit>4000</limit> grams of cheese, and <limit>5000</limit> grams of sauce. If the <obj_name>profit</obj_name> per <var>cheese pizza</var> is $<param>7</param> and the <obj_name>profit</obj_name> per <var>pepperoni pizza</var> is $<param>9</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 9 pepperoni_pizza + 7 cheese_pizza\nst: 30 cheese_pizza + 40 pepperoni_pizza <= 3000\n     50 cheese_pizza + 20 pepperoni_pizza <= 4000\n     40 cheese_pizza + 30 pepperoni_pizza <= 5000"}
{"input": "A smoothie store makes <var>peanut butter</var> and <var>almond butter smoothies</var>. Both require almond milk and protein powder. Each <var>peanut butter smoothie</var> requires <param>3</param> units of almond milk and <param>1</param> unit of protein powder. Each <var>almond butter smoothie</var> requires <param>2</param> units of almond milk and <param>1.5</param> units of protein powder. The store has a total of <limit>50</limit> units of almond milk and <limit>40</limit> units of protein powder <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>peanut butter smoothie</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>almond butter smoothie</var> is $<param>4</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 peanut_butter_smoothie + 4 almond_butter_smoothie\nst: 3 peanut_butter_smoothie + 2 almond_butter_smoothie <= 50\n     1 peanut_butter_smoothie + 1.5 almond_butter_smoothie <= 40"}
{"input": "A jewelry company makes <var>sapphire</var> and <var>ruby rings</var>. The <var>sapphire rings</var> are made by a team who cam make <const_dir>at most</const_dir> <limit>10</limit> <var>sapphire rings</var> per day. The <var>ruby rings</var> are made by a team who can make <const_dir>at most</const_dir> <limit>15</limit> <var>ruby rings</var> per day. All rings have to be approved by a master jeweler and he can check <const_dir>at most</const_dir> <limit>15</limit> rings of either type per day. If the <obj_name>profit</obj_name> per <var>sapphire ring</var> is $<param>500</param> and the <obj_name>profit</obj_name> per <var>ruby ring</var> is $<param>400</param>, how many of each should the jewelry company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 ruby_ring + 500 sapphire_ring\nst: sapphire_rings <= 10\n     ruby_rings <= 15\n     ruby_ring + sapphire_ring <= 15"}
{"input": "A pizza palace is going to purchase pizza ovens. There are two models available. <var>Model A</var> can make <param>10</param> pizzas per cycle, requires <param>80</param> grams of fuel per cycle, and <obj_name>costs</obj_name> $<param>10000</param>. <var>Model B</var> can make <param>8</param> pizzas per cycle, requires <param>70</param> grams of fuel per cycle, and <obj_name>costs</obj_name> $<param>8000</param>. The pizza palace must make <const_dir>at least</const_dir> <limit>100</limit> pizzas per cycle and use <const_dir>at most</const_dir> <limit>1000</limit> grams of fuel per cycle. How many of each model pizza oven should they purchase to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 10000 Model_A + 8000 Model_B\nst: 10 Model_A + 8 Model_B >= 100\n     80 Model_A + 70 Model_B <= 1000"}
{"input": "A breakfast place mixes two pancake mixes to get the perfect consistency. <var>Mix A</var> contains <param>10%</param> sugar and <param>60%</param> flour. <var>Mix B</var> contains <param>15%</param> sugar and <param>50%</param> flour. The final mixture needs <const_dir>at least</const_dir> <limit>10</limit> kg of sugar and <limit>50</limit> kg of flour. If the <obj_name>cost</obj_name> per kg of <var>Mix A</var> is $<param>20</param> and the <obj_name>cost</obj_name> per kg of <var>Mix B</var> is $<param>25</param>, how many kg of each should the breakfast place buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 20 Mix_A + 25 Mix_B\nst: 10% Mix_A + 15% Mix_B >= 10\n     60% Mix_A + 50% Mix_B >= 50"}
{"input": "A gardener grows <var>beans</var> and <var>peas</var> <const_dir>in</const_dir> their <limit>100</limit> acre farm. The <obj_name>profit</obj_name> per acre of <var>beans</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>peas</var> is $<param>250</param>. In addition, bug repellant must be used to grow both <var>beans</var> and <var>peas</var>. Per acre of <var>beans</var>, <param>12</param> liters of bug repellant are needed. Per acre of <var>peas</var>, <param>15</param> liters of bug repellant are needed. The gardener has <const_dir>available</const_dir> <limit>1350</limit> liters of bug repellant. How many of acres of each should the gardener grow to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 beans + 250 peas\nst: 12 beans + 15 peas <= 1350\n     beans + peas <= 100"}
{"input": "An aquarium feeds their large animals with smaller fish by making a mixture from two bags. <var>Bag A</var> contains <param>2</param> units of sardines and <param>3</param> units of anchovies per bag. <var>Bag B</var> contains <param>4</param> units of sardines and <param>1</param> unit of anchovies per bag. The mixture must contain <const_dir>at least</const_dir> <limit>20</limit> units of sardines and <limit>25</limit> units of anchovies. <var>Bag A</var> <obj_name>costs</obj_name> $<param>4</param> per bag and <var>Bag B</var> <obj_name>costs</obj_name> $<param>6</param> per bag. Formulate a LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> for the mixture.", "output": "min: 4 Bag_A + 6 Bag_B\nst: 2 Bag_A + 4 Bag_B >= 20\n     3 Bag_A + 1 Bag_B >= 25"}
{"input": "You need to buy shelves to store your action figures. A <var>small shelf</var> takes <param>3</param> sq ft of space and costs $<param>50</param>. A <var>large shelf</var> takes <param>6</param> sq ft and costs $<param>80</param>. You have <limit>100</limit> sq ft of space <const_dir>available</const_dir> and a <const_dir>budget</const_dir> of $<limit>1250</limit>. If the <var>small shelf</var> can hold <param>20</param> <obj_name>action figures</obj_name> and a <var>large shelf</var> can hold <param>30</param> <obj_name>action figures</obj_name>, how many of each should you buy to <obj_dir>maximize</obj_dir> the <obj_name>number of action figures</obj_name> you can store.", "output": "max: 20 small_shelf + 30 large_shelf\nst: 3 small_shelf + 6 large_shelf <= 100\n     50 small_shelf + 80 large_shelf <= 1250"}
{"input": "Hudson <const_dir>has</const_dir> <limit>55</limit> acres to grow <var>daisies</var> and <var>peonies</var>. Hudson must use plant nutrition to feed the flowers to ensure the flowers grow. <var>Daisies</var> require <param>4.5</param> kg of plant nutrition per acre while <var>peonies</var> require <param>7</param> kg of plant nutrition per acre. Due to the high cost of plant nutrition, Hudson wants to use <const_dir>at most</const_dir> <limit>200</limit> kg of plant nutrition. If the <obj_name>profit</obj_name> per acre of <var>daisies</var> is $<param>150</param> and the <obj_name>profit</obj_name> per acre of <var>peonies</var> is $<param>180</param>, how many acres of each should Hudson grow to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 daisies + 180 peonies\nst: daisies + peonies <= 55\n     4.5 Daisies + 7 peonies <= 200"}
{"input": "Vitamin A and vitamin B can be obtained in two supplement drinks. One is <var>carrot juice</var> and <obj_name>costs</obj_name> $<param>3.5</param> per serving. The other is <var>lemon juice</var> and <obj_name>costs</obj_name> $<param>6</param> per serving. One serving of <var>carrot juice</var> contains <param>8</param> units of vitamin A and <param>3</param> units of vitamin B. One serving of <var>lemon juice</var> contains <param>3</param> units of vitamin A and <param>6</param> units of vitamin B. In a day, it is recommended to get a <const_dir>minimum</const_dir> of <limit>25</limit> units of vitamin A and vitamin B each. Find the optimal mix of these supplement drinks to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 3.5 carrot_juice + 6 lemon_juice\nst: 8 carrot_juice + 3 lemon_juice >= 25\n     3 carrot_juice + 6 lemon_juice >= 25"}
{"input": "A clothing company makes <var>flight jackets</var> and <var>denim jackets</var> in their factory. A different team produces each kind of jacket and each team has a different <const_dir>maximum</const_dir> production rate: <limit>10</limit> <var>flight jackets</var> per day and <limit>25</limit> <var>denim jackets</var> per day respectively. Both teams require the use of a sewing machine and this machine can process <const_dir>at most</const_dir> <limit>30</limit> jackets per day of either type. While the <var>flight jackets</var> generate a <obj_name>profit</obj_name> of $<param>70</param> per jacket, the <var>denim jackets</var> generate a <obj_name>profit</obj_name> of $<param>100</param> per jacket. Assuming the company can sell all the jackets they make, how many of each type of jacket should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 denim_jackets + 70 flight_jackets\nst: flight_jackets <= 10\n     denim_jackets <= 25\n     denim_jackets + flight_jackets <= 30"}
{"input": "A fruit store wants to liquidate its <const_dir>stock</const_dir> of <limit>30</limit> lemons, <limit>40</limit> mangos, and <limit>50</limit> pears. Given past experience, the store knows that they can propose a <var>mango-lovers package</var> with <param>4</param> lemons and <param>8</param> mangos and that this package will bring a <obj_name>profit</obj_name> of <param>5</param> euros. Similarly, they can prepare a <var>regular package</var> with <param>3</param> lemons, <param>5</param> mangos, and <param>10</param> pears, yielding a <obj_name>profit</obj_name> of <param>6.5</param> euros. They know they can sell any quantity of these two packages within the availability of its stock. What quantity of each package, <var>mango-lovers packages</var> and <var>regular packages</var>, should the store prepare to <obj_dir>maximize</obj_dir> <obj_name>net profit</obj_name>?", "output": "max: 6.5 regular_package + 5 mango-lovers_package\nst: 4 mango-lovers_package + 3 regular_package <= 30\n     8 mango-lovers_package + 5 regular_package <= 40\n     10 regular_package <= 50"}
{"input": "West Moon Designs are famous for its high-end furniture. Each <var>coffee table</var> produced by West Moon Designs nets the company a <obj_name>profit</obj_name> of $<param>200</param>. Each <var>bookcase</var> yields a $<param>300</param> <obj_name>profit</obj_name>. Every week, <limit>120</limit> gallons of lacquer and <limit>250</limit> lengths of high-quality mahogany are <const_dir>available</const_dir>. Each <var>coffee table</var> requires approximately <param>5</param> gallons of lacquer and <param>15</param> lengths of mahogany. Each <var>bookcase</var> takes <param>7</param> gallons of lacquer and <param>25</param> lengths of mahogany. What should the production plan be for West Moon Designs to make a <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 coffee_table + 300 bookcase\nst: 5 coffee_table + 7 bookcase <= 120\n     15 coffee_table + 25 bookcase <= 250"}
{"input": "WFH factory makes <var>standing desks</var> and <var>office chairs</var> using a special machine. This machine must be operated for <const_dir>at least</const_dir> <limit>2000</limit> minutes per week. Each <var>standing desk</var> takes <param>60</param> minutes on the machine while each <var>office chair</var> takes <param>35</param> minutes on the machine. The factory must make a <const_dir>minimum</const_dir> of <limit>100</limit> items total. If the <obj_name>cost</obj_name> for producing a <var>standing desk</var> is $<param>500</param> and the <obj_name>cost</obj_name> for producing a <var>office chair</var> is $<param>230</param>, how many of each should be made to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 500 standing_desk + 230 office_chair\nst: 60 standing_desk + 35 office_chair >= 2000\n     standing_desk + office_chair <= 100"}
{"input": "An electronics factory makes two types of products: <var>DVD players</var> and <var>projectors</var>. Demand is high but production is limited since the global chip shortage is a long-lasting problem. Each <var>DVD player</var> requires <param>5</param> silicon chips, <param>6</param> hours of engineering time, and <param>2.5</param> hours of assembly time. Each <var>projector</var> requires <param>3</param> silicon chips, <param>5</param> hours of engineering time, and <param>2</param> hours of assembly time. The company <const_dir>can buy</const_dir> <limit>250</limit> silicon chips per week, and has <const_dir>available</const_dir> <limit>200</limit> hours of engineering and <limit>240</limit> hours of assembly. The <obj_name>profit</obj_name> per <var>DVD player</var> is $<param>250</param> and the <obj_name>profit</obj_name> per <var>projector</var> is $<param>200</param>. Formulate an LP problem to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name> if they want to produce <const_dir>at least</const_dir> <limit>30</limit> units of <var>DVD players</var> and <const_dir>at least</const_dir> <limit>30</limit> units of <var>projectors</var> each week.", "output": "max: 200 projector + 250 DVD_player\nst: 5 DVD_player + 3 projector <= 250\n     6 DVD_player + 5 projector <= 200\n     2.5 DVD_player + 2 projector <= 240\n     DVD_players >= 30\n     projectors >= 30"}
{"input": "Two different food groups, <var>grains</var> and <var>vegetables</var>, are eaten everyday to get iron and fiber. A serving of <var>vegetables</var> contains <param>15</param> grams of iron and <param>25</param> grams of fiber. A serving of <var>grains</var> contains <param>30</param> grams of iron and <param>5</param> grams of fiber. Daily requirements are <const_dir>at least</const_dir> <limit>100</limit> grams of iron and <limit>150</limit> grams of fiber. If a serving of <var>grains</var> <obj_name>costs</obj_name> $<param>0.40</param> and a serving of <var>vegetables</var> <obj_name>costs</obj_name> $<param>0.60</param>, how many of each should be eaten to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 0.60 vegetables + 0.40 grains\nst: 15 vegetables + 30 grains >= 100\n     25 vegetables + 5 grains >= 150"}
{"input": "Blue Ocean wants to allocate resources at its two plants <var>Gamma</var> and <var>Delta</var> to produce two products: asphalt and bricks. To meet customer demands, <const_dir>at least</const_dir> <limit>90</limit> units of asphalt and <limit>85</limit> units of bricks must be produced daily. Running the <var>plant Gamma</var> <obj_name>costs</obj_name> $<param>35</param> per hour and yields <param>4</param> units of asphalt and <param>3</param> units of bricks. Running the <var>plant Delta</var> for an hour <obj_name>costs</obj_name> $<param>95</param> and produces <param>6</param> units of asphalt and <param>5</param> units of bricks. Determine the daily production plan at its plants that will <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of meeting the demands.", "output": "min: 95 plant_Delta + 35 plant_Gamma\nst: 4 plant_Gamma + 6 plant_Delta >= 90\n     3 plant_Gamma + 5 plant_Delta >= 85"}
{"input": "Emma is required to take two medicines AX7 and BY5 every day. She needs to take <const_dir>at least</const_dir> <limit>6</limit> grams of AX7 and <limit>8</limit> grams of BY5 every day. These medicines are available in two pills named <var>Klun</var> and <var>Tao</var>. One pill of <var>Klun</var> contains <param>1.5</param> grams of AX7 while one pill of <var>Tao</var> contains <param>1.3</param> grams of AX7. On the other hand, one pill of <var>Klun</var> contains <param>1.8</param> grams of BY5 and one pill of <var>Tao</var> contains <param>2</param> grams of BY5. The <obj_name>cost</obj_name> per pill of <var>Klun</var> is $<param>2.6</param> and the <obj_name>cost</obj_name> per pill of <var>Tao</var> is $<param>3.2</param>. Formulate an LP such that the medicine requirement can be fulfilled at the <obj_dir>lowest</obj_dir> <obj_name>cost</obj_name>.", "output": "low: 2.6 Klun + 3.2 Tao\nst: 1.5 Klun + 1.3 Tao >= 6\n     1.8 Klun + 2 Tao >= 8"}
{"input": "Robert is a <obj_name>pumpkin</obj_name> seller and he has to transport <obj_name>pumpkins</obj_name> using either <var>trucks</var> or <var>vans</var>. The <var>truck</var> can take <param>40</param> <obj_name>pumpkins</obj_name> each and cost $<param>15</param> per trip. The <var>van</var> can take <param>25</param> <obj_name>pumpkins</obj_name> each and cost $<param>10</param> per trip. Robert has <const_dir>at most</const_dir> $<limit>300</limit> to spend on transporting the <obj_name>pumpkins</obj_name>. Due to pollution, the number of <var>trucks</var> <const_dir>must not exceed</const_dir> the number of <var>vans</var>. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of pumpkins</obj_name> that can be transported.", "output": "max: 40 truck + 25 van\nst: 10 van + 15 truck <= 300\n     trucks <= vans"}
{"input": "You are put on a special diet where you can drink two juices. <var>Prune juice</var> contains <param>10</param> grams of vitamin A, <param>12</param> grams of vitamin B, <param>5</param> grams of fiber, and <param>15</param> grams of <obj_name>sugar</obj_name> per cup. <var>Apple juice</var> contains <param>12</param> grams of vitamin A, <param>15</param> grams of vitamin B, <param>3</param> grams of fiber, and <param>17</param> grams of <obj_name>sugar</obj_name> per cup. You must consume <const_dir>at least</const_dir> <limit>105</limit> grams of vitamin A and <limit>120</limit> grams of vitamin B. However you can consume <const_dir>at most</const_dir> <limit>80</limit> grams of fiber. How many cups of each juice should you drink to <obj_dir>minimize</obj_dir> the <obj_name>amount of sugar</obj_name>?", "output": "min: 15 Prune_juice + 17 Apple_juice\nst: 10 Prune_juice + 12 Apple_juice >= 105\n     12 Prune_juice + 15 Apple_juice >= 120\n     5 Prune_juice + 3 Apple_juice <= 80"}
{"input": "A jewelry company produces and sells <var>bracelets</var> and <var>rings</var>. The <var>bracelets</var> are hand-crafted by a team who can make <const_dir>at most</const_dir> <limit>4</limit> <var>bracelets</var> per day. The <var>rings</var> are made by another team who can make <const_dir>at most</const_dir> <limit>7</limit> <var>rings</var> per day. All <var>rings</var> have to be approved by a master jeweler and he can check <const_dir>at most</const_dir> <limit>30</limit> jewels of either type per day. If the <obj_name>profit</obj_name> per <var>bracelet</var> is $<param>700</param> and the <obj_name>profit</obj_name> per <var>ring</var> is $<param>300</param>, how many of each should the jewelry company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 700 bracelet + 300 ring\nst: bracelets <= 4\n     rings <= 7\n     bracelet + ring <= 30"}
{"input": "Tom Bakery bakes <var>pancakes</var> and <var>pretzels</var>. A batch of <var>pancakes</var> can be made using <param>2.5</param> hours of oven time and <param>0.5</param> hours of pastry chef time. A batch of <var>pretzels</var> is more complicated, so while they take <param>1.5</param> hours of oven time, they take <param>3</param> hours of pastry chef time. In a day, the bakery has <const_dir>at most</const_dir> <limit>65</limit> hours available for the oven and <limit>35</limit> pastry chef hours <const_dir>available</const_dir>. Using all the available capacity, what is the <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name> the bakery can generate assuming the <obj_name>profit</obj_name> per batch is $<param>25</param> and $<param>50</param> respectively for a batch of <var>pancakes</var> and a batch of <var>pretzels</var>.", "output": "max: 25 pancakes + 50 pretzels\nst: 2.5 pancakes + 1.5 pretzels <= 65\n     0.5 pancakes + 3 pretzels <= 35"}
{"input": "A city planner <const_dir>has</const_dir> <limit>120</limit> acres of land on which he can build <var>solar panels</var> and <var>windmills</var>. Per acre of <var>solar panels</var>, <param>20</param> units of resources are required. Per acre of <var>windmills</var>, <param>40</param> units of resources are required. However, the city planner only has <limit>2000</limit> units of resources <const_dir>available</const_dir>. If the <obj_name>savings</obj_name> per acre of <var>solar panels</var> is $<param>500</param> and the <obj_name>profit</obj_name> per acre of <var>windmills</var> is $<param>1000</param>, how many acres of each should be built to <obj_dir>maximize</obj_dir> <obj_name>savings</obj_name>?", "output": "max: 500 solar_panels + 1000 windmills\nst: solar_panels + windmills <= 120\n     20 solar_panels + 40 windmills <= 2000"}
{"input": "A bubble tea store sells two products: <var>almond bubble tea</var> and <var>ginger bubble tea</var>. The store makes x1 bottles of <var>almond bubble tea</var> a day at a <obj_name>profit</obj_name> of $<param>5</param> each and x2 bottles of <var>ginger bubble tea</var> a day at a <obj_name>profit</obj_name> of $<param>9</param> each. (x1 and x2 are unknowns and they both must be greater than or equal to 0). Currently, the demand is limited to <const_dir>at most</const_dir> <limit>120</limit> bottles of <var>almond bubble tea</var> per day and <const_dir>at most</const_dir> <limit>200</limit> bottles of <var>ginger bubble tea</var> per day. Also, the store can make a <const_dir>maximum</const_dir> of <limit>300</limit> bottles of bubble tea (ignoring the type) per day. How many of each bubble tea should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5 almond_bubble_tea + 9 ginger_bubble_tea\nst: almond_bubble_tea <= 120\n     ginger_bubble_tea <= 200\n     almond_bubble_tea + ginger_bubble_tea <= 300"}
{"input": "A Japanese ramen restaurant sells two <obj_name>bowls</obj_name> of ramen. <var>Shio ramen</var> requires <param>2</param> eggs and <param>1</param> slice of pork. <var>Shoyu ramen</var> requires <param>1</param> egg and <param>2</param> slices of pork. The store has <const_dir>available</const_dir> <limit>100</limit> eggs and <limit>60</limit> slices of pork. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of bowls</obj_name> of either type that can be made.", "output": "max: \nst: 2 Shio_ramen + 1 Shoyu_ramen <= 100\n     1 Shio_ramen + 2 Shoyu_ramen <= 60"}
{"input": "A furniture company makes two types of tables: <var>regular tables</var> and <var>standing tables</var>. Different sections of the factory with different teams produce each table. Team A can produce <const_dir>at most</const_dir> <limit>25</limit> <var>regular tables</var> per day while team B can produce <const_dir>at most</const_dir> <limit>50</limit> <var>standing tables</var> per day. Both teams require the use of the same woodworking machine and this machine can make <const_dir>at most</const_dir> <limit>60</limit> total tables. Each <var>regular table</var> generates a <obj_name>profit</obj_name> of $<param>150</param> while each <var>standing table</var> generates a <obj_name>profit</obj_name> of $<param>180</param>. How many of each table should be made to <obj_dir>maximize</obj_dir> the company's <obj_name>profit</obj_name>?", "output": "max: 150 regular_table + 180 standing_table\nst: regular_tables <= 25\n     standing_tables <= 50\n     regular_table + standing_table <= 60"}
{"input": "A man insists he can meet his carbohydrate and protein requirements from eating <var>beans</var> and <var>cereal</var>. He wants to get <const_dir>at least</const_dir> <limit>300</limit> g of carbohydrates and <limit>150</limit> g of protein. Each serving of <var>beans</var> contains <param>50</param> g of carbohydrates and <param>20</param> g of protein while each serving of <var>cereal</var> contains <param>30</param> g of carbohydrates and <param>5</param> g of protein. If the <obj_name>cost</obj_name> per serving of <var>beans</var> is $<param>2</param> and the <obj_name>cost</obj_name> per serving of <var>cereal</var> is $<param>1</param>, how many of each should he eat to meet his requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 2 beans + 1 cereal\nst: 50 beans + 30 cereal >= 300\n     20 beans + 5 cereal >= 150"}
{"input": "A sign company makes signs by hand. They make <var>LED signs</var> and <var>neon signs</var>. The <var>LED signs</var> are made by team A and they can make <const_dir>at most</const_dir> <limit>3</limit> a day. The <var>neon signs</var> are made by team B and they can make <const_dir>at most</const_dir> <limit>4</limit> a day. All signs have to be quality checked by a senior QC inspector and he can check <const_dir>at most</const_dir> <limit>7</limit> signs total a day. If the <obj_name>profit</obj_name> per <var>LED sign</var> is $<param>1500</param> and the <obj_name>profit</obj_name> per <var>neon sign</var> is $<param>1450</param>, how many of each sign should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1500 LED_sign + 1450 neon_sign\nst: LED_signs <= 3\n     LED_sign + neon_sign <= 7\n     neon_signs <= 4"}
{"input": "A salad shop makes <var>large</var> and <var>small salads</var>. A <var>large salad</var> takes <param>45</param> g of lettuce and <param>10</param> g of sauce. A <var>small salad</var> takes <param>30</param> g of lettuce and <param>7</param> g of sauce. The shop has <const_dir>available</const_dir> <limit>1500</limit> g of lettuce and <limit>1200</limit> g of sauce. If the <obj_name>profit</obj_name> per <var>large salad</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>small salad</var> is $<param>2</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 large_salad + 2 small_salad\nst: 45 large_salad + 30 small_salad <= 1500\n     10 large_salad + 7 small_salad <= 1200"}
{"input": "A food truck makes <var>beef burritos</var> and <var>pork burritos</var>. They only has enough materials to make <const_dir>at most</const_dir> <limit>100</limit> burritos. To stay in business, they must sell <const_dir>at least</const_dir> <limit>20</limit> <var>beef burritos</var> and <const_dir>at least</const_dir> <limit>30</limit> <var>pork burritos</var>. However, they only have enough materials, to make <const_dir>at most</const_dir> <limit>70</limit> <var>beef burritos</var> and <const_dir>at most</const_dir> <limit>80</limit> <var>pork burritos</var>. The <obj_name>profit</obj_name> per <var>beef burritos</var> is $<param>3.5</param> and the <obj_name>profit</obj_name> per <var>pork burritos</var> is $<param>2.1</param>. How many of each burrito should the they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.5 beef_burritos + 2.1 pork_burritos\nst: beef_burritos + pork_burritos <= 100\n     beef_burritos >= 20\n     pork_burritos >= 30\n     beef_burritos <= 70\n     pork_burritos <= 80"}
{"input": "Nu Designs makes <var>bookcases</var> and <var>garden chairs</var>. Each <var>bookcase</var> requires <param>3</param> hours of woodworking, <param>2</param> boxes of nails, and <param>3</param> units of varnish. Each <var>garden chair</var> requires <param>2</param> hours of woodworking, <param>4</param> boxes of nails, and <param>3</param> units of varnish. There are <limit>80</limit> hours of woodworking <const_dir>available</const_dir>, <limit>70</limit> boxes of nails <const_dir>available</const_dir>, and <limit>90</limit> units of varnish <const_dir>available</const_dir>. If each <var>bookcase</var> yields a <obj_name>profit</obj_name> of $<param>270</param> and each <var>garden chair</var> yields a <obj_name>profit</obj_name> of $<param>350</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 350 garden_chair + 270 bookcase\nst: 3 bookcase + 2 garden_chair <= 80\n     2 bookcase + 4 garden_chair <= 70\n     3 bookcase + 3 garden_chair <= 90"}
{"input": "A sports company makes <var>shuttlecocks</var> and <var>volleyballs</var> by hand. The <obj_name>profit</obj_name> per <var>shuttlecock</var> is $<param>3.5</param>, and the <obj_name>profit</obj_name> per <var>volleyball</var> is $<param>10</param>. To make one <var>shuttlecock</var>, <param>15</param> minutes of sewing and <param>5</param> minutes of quality checking are required. To make a <var>volleyball</var>, <param>20</param> minutes of sewing and <param>10</param> minutes of quality checking are required. In a month, <limit>4000</limit> minutes of sewing time and <limit>3000</limit> minutes of quality checking time are <const_dir>available</const_dir>. How many of each product should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.5 shuttlecock + 10 volleyball\nst: 20 volleyball + 15 shuttlecock <= 4000\n     5 shuttlecock + 10 volleyball <= 3000"}
{"input": "Andrew is a berry farmer and he has two farms, a <var>local farm</var> and a <var>foreign farm</var>, where he grows raspberries, bilberries, and strawberries. He has a contract to <const_dir>provide</const_dir> a local store with <limit>12</limit> kg of raspberries, <limit>10</limit> kg of bilberries, and <limit>20</limit> kg of strawberries. At his <var>local farm</var>, it <obj_name>costs</obj_name> $<param>200</param> to operate per day and he can harvest and deliver <param>2.5</param> kg of raspberries, <param>3</param> kg of bilberries, and <param>2</param> kg of strawberries in a day. At his <var>foreign farm</var>, it <obj_name>costs</obj_name> $<param>500</param> to operate per day and he can harvest and deliver <param>5</param> kg of raspberries, <param>4</param> kg of bilberries, and <param>4</param> kg of strawberries in a day. Formulate an LP to meet his contract while <obj_dir>minimizing</obj_dir> his <obj_name>cost</obj_name>.", "output": "min: 500 foreign_farm + 200 local_farm\nst: 2.5 local_farm + 5 foreign_farm >= 12\n     3 local_farm + 4 foreign_farm >= 10\n     2 local_farm + 4 foreign_farm >= 20"}
{"input": "TomMusic would like to attract <const_dir>at least</const_dir> <limit>250</limit> customers into its store daily. Therefore, it decides to sell two popular digital piano models, <var>Piano A</var> and <var>Piano B</var>, at a steep discount to attract foot traffic. TomMusic owner pays $<param>20</param> and $<param>15</param> for each unit of <var>Piano A</var> and <var>Piano B</var> respectively and has at its disposition a <const_dir>maximum</const_dir> daily budget of $<limit>450</limit> for this sales campaign. For each unit of <var>Piano A</var> model sold, TomMusic incurs a <obj_name>cost</obj_name> of $<param>12</param> and attracts <param>25</param> customers into its store on average. In comparison, each unit of <var>Piano B</var> incurs a lower <obj_name>cost</obj_name> of $<param>4</param> but <const_dir>only</const_dir> attracts <param>10</param> customers on average. How many units of each model should be stocked daily to meet his campaign while <obj_dir>minimizing</obj_dir> its <obj_name>cost</obj_name>?", "output": "min: 4 Piano_B + 12 Piano_A\nst: 25 Piano_A + 10 Piano_B >= 250\n     20 Piano_A + 15 Piano_B <= 450"}
{"input": "X-Luxury Cloth wants to add <var>coats</var> and <var>skirts</var>, both with printed designs, to its collection. Both <var>coats</var> and <var>skirts</var> require designing and printing. Each <var>coat</var> requires <param>1.5</param> hours of designing time and <param>2.5</param> hours of printing time. Each <var>skirt</var> requires <param>3</param> hours of designing time and <param>3.5</param> hours of printing time. The designers are <const_dir>available</const_dir> <limit>45</limit> hours a week and the printing machine is <const_dir>available</const_dir> <limit>70</limit> hours per week. Each <var>coat</var> nets the company $<param>12</param> in <obj_name>profit</obj_name>, and each <var>skirt</var> nets $<param>16</param> in <obj_name>profit</obj_name>. What ratio of <var>coats</var> and <var>skirts</var> will produce the <obj_dir>most</obj_dir> <obj_name>profit</obj_name> within the constraints?", "output": "mos: 12 coat + 16 skirt\nst: 1.5 coat + 3 skirt <= 45\n     2.5 coat + 3.5 skirt <= 70"}
{"input": "A farm has to deliver its milk. They can either be transported by <var>rail</var> or by <var>truck</var>. Each <var>rail shipment</var> can take <param>400</param> <obj_name>litres of milk</obj_name> while each <var>truck shipment</var> can take <param>200</param> <obj_name>litres of milk</obj_name>. The cost per <var>rail shipment</var> is $<param>100</param> and the cost per <var>truck shipment</var> is $<param>85</param>. The farm has a <const_dir>budget</const_dir> of $<limit>3000</limit> and the number of <var>rail shipments</var> <const_dir>cannot exceed</const_dir> the number of <var>truck shipments</var>. How many of each shipment should be taken to <obj_dir>maximize</obj_dir> the <obj_name>number of litres of milk</obj_name> that can be transported?", "output": "max: 200 truck_shipment + 400 rail_shipment\nst: 100 rail_shipment + 85 truck_shipment <= 3000\n     rail_shipments <= truck_shipments"}
{"input": "Lucas <const_dir>has</const_dir> <limit>120</limit> acres of land on which he grows <var>carrots</var> and <var>onions</var>. It takes <param>1.5</param> days of tractor time and <param>2.5</param> days of hand-picking time per acre of <var>carrots</var>. It takes <param>2</param> days of tractor time and <param>2</param> days of hand-picking time per acre of <var>onions</var>. In a year, there are <limit>120</limit> days <const_dir>available</const_dir> for tractor use and <limit>200</limit> days <const_dir>available</const_dir> for hand-picking. If the <obj_name>profit</obj_name> per acre of <var>carrots</var> is $<param>75</param> and the <obj_name>profit</obj_name> per acre of <var>onions</var> is $<param>90</param>, how many acres of each should be grown in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 75 carrots + 90 onions\nst: carrots + onions <= 120\n     1.5 carrots + 2 onions <= 120\n     2.5 carrots + 2 onions <= 200"}
{"input": "Blue Novel Furniture produces two types of tables, <var>coffee table</var> and <var>bedside table</var>. It takes <param>2.5</param> hours to produce the parts of a <var>coffee table</var> and <param>4.5</param> hours for those of a <var>bedside table</var>. In addition, it takes <param>2</param> hours and <param>3</param> hours to assemble a <var>bedside table</var> and <var>coffee table</var>, respectively. Finally, polishing a <var>bedside table</var> takes <param>3.5</param> hours, whereas polishing a <var>coffee table</var> requires <param>1.5</param> hours. Every month, there are a total of <limit>6500</limit> hours <const_dir>available</const_dir> for producing the parts, <limit>3500</limit> hours for assembling the parts, and <limit>5000</limit> hours for polishing the tables. If the <obj_name>profit</obj_name> made on a <var>coffee table</var> is $<param>50</param> and the <obj_name>profit</obj_name> on a <var>bedside table</var> is $<param>90</param>, how many of each type of table should be manufactured to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 90 bedside_table + 50 coffee_table\nst: 2.5 coffee_table + 4.5 bedside_table <= 6500\n     2 bedside_table + 3 coffee_table <= 3500\n     3.5 bedside_table + 1.5 coffee_table <= 5000"}
{"input": "A furniture store makes <var>desks</var> and <var>chairs</var>. Two different manufacturers make each item. Manufacturer X can make <const_dir>at most</const_dir> <limit>22</limit> <var>desks</var> a day. Manufacturer Y can make <const_dir>at most</const_dir> <limit>28</limit> <var>chairs</var> a day. Both have to be quality checked by another company, and this company can quality check <const_dir>at most</const_dir> <limit>40</limit> items of either type per day. If the <obj_name>profit</obj_name> per <var>desk</var> is $<param>140</param> and the <obj_name>profit</obj_name> per <var>chair</var> is $<param>120</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 120 chair + 140 desk\nst: chair + desk <= 40\n     desks <= 22\n     chairs <= 28"}
{"input": "A factory makes two types of car oils: <var>Regular Synthetic</var> and <var>Premium Synthetic</var>. A container of <var>Regular Synthetic</var> contains <param>25</param> grams of substance A, <param>40</param> grams of substance B and <param>36</param> grams of substance C. A container of <var>Premium Synthetic</var> contains <param>10</param> grams of substance A, <param>25</param> grams of substance B and <param>40</param> grams of substance C. The factory <const_dir>has</const_dir> <limit>1000</limit> grams of substance A, <limit>500</limit> grams of substance B, <limit>900</limit> grams of substance C. In addition, the <obj_name>profit</obj_name> per container of <var>Regular Synthetic</var> is $<param>17.4</param> and the <obj_name>profit</obj_name> per container of <var>Premium Synthetic</var> is $<param>11.1</param>. How many containers of each oil should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 17.4 Regular_Synthetic + 11.1 Premium_Synthetic\nst: 25 Regular_Synthetic + 10 Premium_Synthetic <= 1000\n     40 Regular_Synthetic + 25 Premium_Synthetic <= 500\n     36 Regular_Synthetic + 40 Premium_Synthetic <= 900"}
{"input": "An litchi farm is trying to send their litchis to the city. They decide to ship them either by <var>boat</var> or by <var>cargo plane</var>. Each <var>boat trip</var> costs $<param>5000</param> and can take <param>500</param> <obj_name>boxes of litchis</obj_name> while each <var>cargo plane trip</var> costs $<param>3000</param> and can take <param>200</param> <obj_name>boxes</obj_name>. In order to transport all the produce on time, the number of <var>boat trips</var> <const_dir>cannot exceed</const_dir> the number of <var>cargo plane</var> trips. If the farm has a <const_dir>budget</const_dir> of $<limit>200000</limit>, decide how many to ship by <var>boat</var> or <var>by plane</var> to <obj_dir>maximize</obj_dir> the <obj_name>boxes of litchis</obj_name> the farm can deliver to their customers.", "output": "max: 500 boat_trip + 200 cargo_plane_trip\nst: 5000 boat_trip + 3000 cargo_plane_trip <= 200000\n     boat_trips <= cargo_plane"}
{"input": "A factory manufactures 2 types of tools, <var>drills</var> and <var>saws</var>, which require the use of two machines, a milling machine and a CNG. It takes <param>20</param> minutes on the milling machine and <param>70</param> minutes on CNG machine to manufacture a package of <var>drills</var>, while it takes <param>30</param> minutes on the milling machine and <param>90</param> minutes on the CNG machine to manufacture a package of <var>saws</var>. Each machine is available for a <const_dir>maximum</const_dir> of <limit>800</limit> minutes on any day. The manufacturer can sell a package of <var>drills</var> at a <obj_name>profit</obj_name> of $<param>35</param> and a package of <var>saws</var> at a <obj_name>profit</obj_name> of $<param>100</param>. Assuming that he can sell all the tools he manufactures, how many packages of each type should the factory owner produce in a day in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>? Determine the maximum profit.", "output": "max: 35 drills + 100 saws\nst: 20 drills + 30 saws <= 800\n     70 drills + 90 saws <= 800"}
{"input": "Delta Electronics sells two microphones: a <var>regular</var> one and a <var>premium</var> one. The <var>regular microphone</var> costs the store $<param>75</param> and yields a <obj_name>profit</obj_name> of $<param>80</param>. The <var>premium microphone</var> costs the store $<param>100</param> and yields a <obj_name>profit</obj_name> of $<param>95</param>. The store owner has a <const_dir>budget</const_dir> of $<limit>30000</limit> for investing in microphone inventory and estimates a total monthly demand of <const_dir>at most</const_dir> <limit>300</limit> microphones. How many microphones of either type should be stocked in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 80 regular_microphone + 95 premium_microphone\nst: 75 regular_microphone + 100 premium_microphone <= 30000\n     regular_microphone + premium_microphone <= 300"}
{"input": "The Jockspring company wants to use a total market <const_dir>budget</const_dir> of $<limit>50,000</limit> to promote a new brand of candy. To do the promotion, the company needs to decide how much to allocate to each of its two advertising channels: (1) <var>newspapers</var> and (2) <var>radio stations</var>. Each day, it costs the company $<param>2,500</param> and $<param>1,500</param> to run advertisement spots on <var>newspapers</var> and <var>radio stations</var>, respectively. Based on past ratings, the expected daily <obj_name>reach</obj_name> is <param>10,000</param> readers for each <var>newspaper spot</var> and <param>20,000</param> users for a <var>radio station</var> spot. The business director believes that both channels should be effectively used to ensure the success of the product launch. She wants to plan <const_dir>at least</const_dir> <limit>5</limit> but <const_dir>no more than</const_dir> <limit>10</limit> <var>newspaper spots</var>. Conversely, the <var>radio station</var> spots need to be <const_dir>at least</const_dir> <limit>20</limit> due to the pricing tier policy. How many times should each of the media channels be used to <obj_dir>maximize</obj_dir> the <obj_name>reach</obj_name> of the campaign?", "output": "max: 10,000 newspaper_spot + 20,000 radio_station\nst: 2,500 newspapers + 1,500 radio_stations <= 50,000\n     newspaper_spots <= 10\n     radio_station >= 20\n     newspaper_spots >= 5"}
{"input": "Tom is playing a first-person shooter game where a <var>slow shot</var> is worth <param>3</param> <obj_name>points</obj_name> and a <var>quick shot</var> is worth <param>6</param> <obj_name>points</obj_name>. In total, Tom can take <const_dir>at most</const_dir> <limit>20</limit> shots. He must take <const_dir>at least</const_dir> <limit>8</limit> <var>slow shots</var> and <limit>5</limit> <var>quick shots</var>, but due to time restrictions, he can take <const_dir>at most</const_dir> <limit>12</limit> <var>slow shots</var> or <limit>12</limit> <var>quick shots</var>. How many of each shot must Tom take, assuming all his shots get <obj_name>points</obj_name>, to <obj_dir>maximize</obj_dir> his <obj_name>score</obj_name>?", "output": "max: 6 quick_shot + 3 slow_shot\nst: quick_shot + slow_shot <= 20\n     slow_shots >= 8\n     slow_shots <= 12\n     quick_shots <= 12\n     quick_shots >= 5"}
{"input": "A food truck wants to make sausages using <var>shrimp</var> and <var>beef</var>. The mixture needs to contain <const_dir>at least</const_dir> <limit>20</limit> units of protein and <limit>25</limit> units of fat. <var>Shrimp</var> <obj_name>costs</obj_name> $<param>36</param> per kg and <var>beef</var> <obj_name>costs</obj_name> $<param>40</param> per kg. Per kilogram, <var>shrimp</var> contains <param>2.5</param> units of protein and <param>3</param> units of fat. Per kilogram, <var>beef</var> contains <param>4</param> units of protein and <param>2.5</param> units of fat. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of the mixture.", "output": "min: 40 beef + 36 Shrimp\nst: 2.5 shrimp + 4 beef >= 20\n     3 shrimp + 2.5 beef >= 25"}
{"input": "A pasta restaurant is going to purchase pasta rollers. There are two models available. <var>Roller v2</var> can make <param>15</param> kg of spaghetti per cycle, requires <param>60</param> grams of fuel per cycle, and <obj_name>costs</obj_name> $<param>9000</param>. <var>Roller v1</var> can make <param>9</param> kg of pasta per cycle, requires <param>70</param> grams of fuel per cycle, and <obj_name>costs</obj_name> $<param>4000</param>. The pasta restaurant must make <const_dir>at least</const_dir> <limit>150</limit> kg of spaghetti per cycle and use <const_dir>at most</const_dir> <limit>900</limit> grams of fuel per cycle. How many of each pasta roller should they purchase to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 4000 Roller_v1 + 9000 Roller_v2\nst: 15 Roller_v2 + 9 Roller_v1 >= 150\n     60 Roller_v2 + 70 Roller_v1 <= 900"}
{"input": "Elias Cookie sells <var>chocolate</var> and <var>strawberry cookies</var>. The store can make <const_dir>at most</const_dir> <limit>200</limit> cookies total. To stay in business, they must sell <const_dir>at least</const_dir> <limit>50</limit> <var>chocolate cookies</var> and <limit>70</limit> <var>strawberry cookies</var>. Due to raw material shortages however, they can make <const_dir>at most</const_dir> <limit>120</limit> <var>chocolate cookies</var> and <const_dir>at most</const_dir> <limit>150</limit> <var>strawberry cookies</var>. The <obj_name>profit</obj_name> per <var>chocolate cookie</var> is $<param>1.5</param> and the <obj_name>profit</obj_name> per <var>strawberry cookie</var> is $<param>1.2</param>. How many of each cookie should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1.5 chocolate_cookie + 1.2 strawberry_cookie\nst: chocolate_cookie + strawberry_cookie <= 200\n     chocolate_cookies >= 50\n     strawberry_cookies >= 70\n     chocolate_cookies <= 120\n     strawberry_cookies <= 150"}
{"input": "Organic Farming <const_dir>has</const_dir> <limit>300</limit> acres of land to grow <var>daikons</var> and <var>fennels</var>. <var>Daikons</var> require <param>0.5</param> hours of watering and $<param>70</param> worth of compost per acre. <var>Fennels</var> require <param>1.5</param> hours of watering and $<param>50</param> worth of compost per acre. The farmer has <limit>500</limit> hours <const_dir>available</const_dir> for watering and $<limit>7400</limit> <const_dir>available</const_dir> to spend on compost. If the <obj_name>revenue</obj_name> per acre of <var>daikons</var> is $<param>300</param> and the <obj_name>revenue</obj_name> per acre of <var>fennels</var> is $<param>250</param>, how many acres of each should he grow to <obj_dir>maximize</obj_dir> his <obj_name>revenue</obj_name>.", "output": "max: 300 daikons + 250 fennels\nst: daikons + fennels <= 300\n     0.5 Daikons + 1.5 Fennels <= 500\n     70 Daikons + 50 Fennels <= 7400"}
{"input": "A makeup company hand fills <var>perfume</var> and <var>cologne bottles</var>. Each <var>perfume bottle</var> takes <param>2</param> minutes to fill and each <var>cologne bottle</var> takes <param>2.5</param> minutes to fill. The company must fill <const_dir>at least</const_dir> <limit>60</limit> <var>perfume bottles</var> and <const_dir>at least</const_dir> <limit>40</limit> <var>cologne bottles</var>. The company has <limit>700</limit> minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>perfume bottle</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>cologne bottle</var> is $<param>60</param>, how many of each should be filled in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 perfume_bottle + 60 cologne_bottle\nst: 2 perfume_bottle + 2.5 cologne_bottle <= 700\n     perfume_bottles >= 60\n     cologne_bottles >= 40"}
{"input": "A grocery store wants to sell their bulk quantities of gummy bears, gummy worms, and sour candies by mixing them into special combo deals.  They <const_dir>have</const_dir> <limit>1200</limit> grams of gummy bears, <limit>1400</limit> grams of gummy worms, and <limit>900</limit> grams of sour candies. <var>Combo 1</var> contains <param>25</param> grams of gummy bears, <param>20</param> grams of gummy worms, and <param>15</param> grams of sour candies. <var>Combo 2</var> contains <param>12</param> grams of gummy bears, <param>21</param> grams of gummy worms, and <param>24</param> grams of sour candies. If the <obj_name>profit</obj_name> per <var>combo 1</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>combo 2</var> is $<param>4.50</param>, how many of each should the store sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 combo_1 + 4.50 combo_2\nst: 25 Combo_1 + 12 Combo_2 <= 1200\n     20 Combo_1 + 21 Combo_2 <= 1400\n     15 Combo_1 + 24 Combo_2 <= 900"}
{"input": "A toy shop makes <var>plush toys</var> and <var>action figures</var>. Each <var>plush toy</var> takes <param>20</param> minutes of assembly and <param>4</param> minutes of packaging. Each <var>action figure</var> takes <param>15</param> minutes of assembly and <param>5</param> minutes of packaging. The shop has <const_dir>available</const_dir> <limit>1200</limit> minutes for assembly and <limit>900</limit> minutes for packaging. If the <obj_name>profit</obj_name> per <var>plush toy</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>action figure</var> is $<param>4.50</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4.50 action_figure + 4 plush_toy\nst: 20 plush_toy + 15 action_figure <= 1200\n     4 plush_toy + 5 action_figure <= 900"}
{"input": "A dietician recommends that his patient eat gummy vitamins to get his mineral requirements. Each <var>blue gummy</var> contains <param>3</param> units of calcium, <param>2</param> units of vitamin A, and <param>5</param> units of iron. Each <var>red gummy</var> contains <param>4</param> units of calcium, <param>3</param> units of vitamin A, and <param>2</param> units of iron. The patient must get <const_dir>at least</const_dir> <limit>40</limit> units of calcium, <limit>45</limit> units of vitamin A, and <limit>20</limit> units of iron. If the <obj_name>cost</obj_name> per <var>blue gummy</var> is $<param>2</param> and the <obj_name>cost</obj_name> per <var>red gummy</var> is $<param>3</param>, how many of each gummy should the patient purchase to <obj_dir>minimize</obj_dir> his <obj_name>costs</obj_name>?", "output": "min: 2 blue_gummy + 3 red_gummy\nst: 3 blue_gummy + 4 red_gummy >= 40\n     2 blue_gummy + 3 red_gummy >= 45\n     5 blue_gummy + 2 red_gummy >= 20"}
{"input": "A small wood shop specializing in furniture can make a <const_dir>maximum</const_dir> of <limit>40</limit> <var>bookcases</var> and <limit>60</limit> <var>coffee tables</var> in a week. It takes a worker <param>7</param> hours to make a <var>bookcase</var> and <param>5</param> hours to make a <var>coffee table</var>. The <obj_name>profit</obj_name> on a <var>bookcase</var> is $<param>90</param> and the <obj_name>profit</obj_name> on a <var>coffee table</var> is $<param>65</param>. The total number of hours by all of the employees is <const_dir>at most</const_dir> <limit>150</limit> hours per week. Formulate an LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 90 bookcase + 65 coffee_table\nst: bookcases <= 40\n     7 bookcase + 5 coffee_table <= 150\n     coffee_tables <= 60"}
{"input": "A berry farmer <const_dir>has</const_dir> <limit>300</limit> acres of land to grow <var>blueberries</var> and <var>raspberries</var>. Each acre of <var>blueberries</var> costs $<param>60</param> for fertilizer and takes <param>3</param> hours of picking. Each acre of <var>raspberries</var> costs $<param>40</param> for fertilizer and takes <param>4</param> hours of picking. The farmer has <const_dir>available</const_dir> $<limit>20000</limit> to spend on fertilizer and <limit>400</limit> hours <const_dir>available</const_dir> for picking. If the <obj_name>profit</obj_name> per acre of <var>blueberries</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>raspberries</var> is $<param>250</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 250 raspberries + 200 blueberries\nst: raspberries + blueberries <= 300\n     60 blueberries + 40 raspberries <= 20000\n     3 blueberries + 4 raspberries <= 400"}
{"input": "In a basketball game, your team can shoot <var>long shots</var> or <var>mid-range shots</var>. Each <var>long shot</var> is worth <param>3</param> points and each <var>mid-range shot</var> is worth <param>2</param> points. To win against the next team, your team must score <const_dir>at least</const_dir> <limit>95</limit> points. Based on previous games, your team always makes <const_dir>at least</const_dir> <limit>5</limit> <var>long shots</var> in a game. The stats also show that your team <obj_name>efficiency</obj_name> is <param>25%</param> for <var>long shots</var> and <param>40%</param> for <var>mid-range shots</var>. Determine the number of <var>long shots</var> and <var>mid-range shots</var> that your team should make to <obj_dir>maximize</obj_dir> its <obj_name>efficiency</obj_name>?", "output": "max: 25% long_shots + 40% mid-range_shots\nst: 3 long_shot + 2 mid-range_shot >= 95\n     long_shots >= 5"}
{"input": "A man takes two forms of vitamin supplements to get his vitamin B and vitamin D requirements. He needs <const_dir>at least</const_dir> <limit>14</limit> units of vitamin B and <limit>24</limit> units of vitamin D. Per serving, a <var>gummy vitamin</var> contains <param>2</param> units of vitamin B and <param>7</param> units of vitamin D. Per serving, a <var>powder vitamin</var> contains <param>6</param> units of vitamin B and <param>2</param> units of vitamin D. If the <obj_name>cost</obj_name> per serving for a <var>gummy vitamin</var> is $<param>1</param> and the <obj_name>cost</obj_name> per serving of <var>powder vitamin</var> is $<param>3</param>, how many of each should he take to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 powder_vitamin + 1 gummy_vitamin\nst: 2 gummy_vitamin + 6 powder_vitamin >= 14\n     7 gummy_vitamin + 2 powder_vitamin >= 24"}
{"input": "A factory makes two types of bags: <var>laptop bags</var> and <var>briefcases</var>. Each <var>laptop bag</var> requires <param>12</param> minutes of sewing while each <var>briefcase</var> requires <param>10</param> minutes of sewing. Each <var>laptop bag</var> requires <param>5</param> minutes of painting while each <var>briefcase</var> requires <param>9</param> minutes of painting. There are <limit>300</limit> minutes <const_dir>available</const_dir> for sewing and <limit>500</limit> minutes <const_dir>available</const_dir> for painting. The <obj_name>profit</obj_name> per <var>laptop bag</var> is $<param>80</param> and the <obj_name>profit</obj_name> per <var>briefcase</var> is $<param>50</param>. How many of each type of bag should the factory make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 briefcase + 80 laptop_bag\nst: 12 laptop_bag + 10 briefcase <= 300\n     5 laptop_bag + 9 briefcase <= 500"}
{"input": "Two sisters, Joy and Willa, run a stand selling <var>green tea</var> and <var>pancakes</var>. A pitcher of <var>green tea</var> takes <param>0.7</param> hours of Joy's time along with <param>0.3</param> hours of Willa's time. A batch of <var>pancakes</var> takes <param>1.2</param> hours of Joy's time and <param>0.6</param> hours of Willa's time. Joy has <limit>8</limit> hours <const_dir>available</const_dir> each day, but since Willa has hockey lessons, she only has <limit>5</limit> hours <const_dir>available</const_dir> each day. They get $<param>2.5</param> <obj_name>profit</obj_name> per pitcher of <var>green tea</var>, and $<param>10</param> per batch of <var>pancakes</var>. Formulate an LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 2.5 green_tea + 10 pancakes\nst: 0.7 green_tea + 1.2 pancakes <= 8\n     0.3 green_tea + 0.6 pancakes <= 5"}
{"input": "A lighting company makes <var>desk lamps</var> and <var>chandeliers</var>. Each <var>desk lamp</var> takes <param>20</param> minutes of manufacturing time and <param>1</param> light bulb. Each <var>chandelier</var> takes <param>60</param> minutes of manufacturing time and requires <param>15</param> light bulbs. The company must make <const_dir>at least</const_dir> <limit>40</limit> <var>desk lamps</var>. They have <limit>1500</limit> minutes of manufacturing time <const_dir>available</const_dir> and <limit>300</limit> light bulbs <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>desk lamp</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>chandelier</var> is $<param>500</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 desk_lamp + 500 chandelier\nst: desk_lamps >= 40\n     20 desk_lamp + 60 chandelier <= 1500\n     1 desk_lamp + 15 chandelier <= 300"}
{"input": "A scooter company sells two types of scooters: <var>foldable scooters</var> and <var>electric scooters</var>. The <obj_name>profit</obj_name> per <var>foldable scooter</var> is $<param>150</param> and the <obj_name>profit</obj_name> per <var>electric scooter</var> is $<param>200</param>. Each product requires time with the design team and engineering team. Each <var>foldable scooter</var> needs <param>1.5</param> hours with the design team and <param>4</param> hours with the engineering team. Each <var>electric scooter</var> needs <param>3</param> hours with the design team and <param>6</param> hours with the engineering team. Per month, there are <limit>4000</limit> hours <const_dir>available</const_dir> on the design team and <limit>5000</limit> hours <const_dir>available</const_dir> on the engineering team. How many of each should the company make per month to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 150 foldable_scooter + 200 electric_scooter\nst: 1.5 foldable_scooter + 3 electric_scooter <= 4000\n     4 foldable_scooter + 6 electric_scooter <= 5000"}
{"input": "A company has to send out their <obj_name>products</obj_name> overseas. They can send the <obj_name>products</obj_name> using a <var>shipping container</var> which can take <param>1000</param> <obj_name>products</obj_name> each or by using <var>cargo planes</var> which can take <param>800</param> <obj_name>products</obj_name> each. The cost per <var>shipping container</var> sent is $<param>5000</param> and the cost per <var>cargo plane</var> sent is $<param>6000</param>. In addition, due to shipping delays, the number of <var>shipping containers</var> sent <const_dir>cannot exceed</const_dir> the number of <var>cargo planes</var> sent. If the store has a <const_dir>budget</const_dir> of $<limit>20000</limit>, how should they spend their money to <obj_dir>maximize</obj_dir> the <obj_name>number of products</obj_name> that can be sent?", "output": "max: 1000 shipping_container + 800 cargo_planes\nst: 5000 shipping_container + 6000 cargo_plane <= 20000\n     shipping_containers <= cargo_planes"}
{"input": "A clothing company makes <var>coats</var> and <var>shirts</var>. Each <var>coat</var> and <var>shirt</var> requires operations done by three teams: measuring, cutting, and sewing. The measuring team is available for <const_dir>at most</const_dir> <limit>50</limit> hours, the cutting team is available for <const_dir>at most</const_dir> <limit>35</limit> hours, and the sewing team is available for <const_dir>at most</const_dir> <limit>40</limit> hours. A <var>coat</var> requires <param>0.7</param> hours of measuring, <param>0.5</param> hours of cutting, and <param>0.9</param> hours of sewing. A <var>shirt</var> requires <param>0.2</param> hours of measuring, <param>0.3</param> hours of cutting, and <param>0.5</param> hours of sewing. The <obj_name>profit</obj_name> per <var>coat</var> is $<param>6</param> and the <obj_name>profit</obj_name> per <var>shirt</var> is $<param>11</param>. How many of each should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 11 shirt + 6 coat\nst: 0.7 coat + 0.2 shirt <= 50\n     0.5 coat + 0.3 shirt <= 35\n     0.5 shirt + 0.9 coat <= 40"}
{"input": "Joy Bakery uses a dough mixer and a commercial bake oven to make <var>bagels</var> and <var>croissants</var>. Each machine can run for <const_dir>at most</const_dir> <limit>2500</limit> hours per year. To bake a batch of <var>bagels</var> takes <param>2</param> hours in the dough mixer and <param>3.5</param> hours in the oven. A batch of <var>croissants</var> requires <param>1.5</param> hours in the mixer and <param>2</param> hours in the oven. The <obj_name>profit</obj_name> per batch of <var>bagels</var> is $<param>7.5</param> and the <obj_name>profit</obj_name> per batch of <var>croissants</var> is $<param>5</param>. How should the bakery operate to <obj_dir>maximize</obj_dir> total <obj_name>profit</obj_name>?", "output": "max: 7.5 bagels + 5 croissants\nst: 2 bagels + 1.5 croissants <= 2500\n     2 croissants + 3.5 bagels <= 2500"}
{"input": "A milk tea store wants to make milk tea that has some <var>red bean</var> and <var>pudding toppings</var>. Each <var>red bean topping</var> contains <param>1.5</param> grams of sugar and <param>2.5</param> grams of butter; each <var>pudding topping</var> contains <param>3</param> grams of sugar and <param>1.2</param> grams of butter. For health reasons, the milk tea will have <const_dir>at most</const_dir> <limit>3</limit> <var>red bean toppings</var>. To make the milk tea tasty, <const_dir>at least</const_dir> <limit>7</limit> grams of sugar and <limit>10</limit> grams of butter must be used in the toppings of the milk tea. If it <obj_name>costs</obj_name> $<param>1.5</param> to make one <var>red bean topping</var> and $<param>2</param> for one <var>pudding topping</var>, what is the optimal combination of <var>red bean</var> and <var>pudding toppings</var> to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name>?", "output": "min: 1.5 red_bean_topping + 2 pudding_topping\nst: 1.5 red_bean_topping + 3 pudding_topping >= 7\n     2.5 red_bean_topping + 1.2 pudding_topping >= 10\n     red_bean_toppings <= 3"}
{"input": "William is a potato farmer and he has to send his product to the city. He can transport his <obj_name>potato packages</obj_name> by <var>regular truck</var> which can take <param>70</param> <obj_name>packages</obj_name> per trip or by <var>refrigerated truck</var> which can take <param>100</param> <obj_name>packages</obj_name> per trip. The cost per <var>regular truck</var> trip is $<param>50</param> and the cost per <var>refrigerated truck</var> trip is $<param>70</param>. He wants to spend <const_dir>at most</const_dir> $<limit>5000</limit> and the number of <var>refrigerated truck</var> trips <const_dir>must not exceed</const_dir> the number of <var>regular truck</var> trips. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of potato packages</obj_name> that can be transported.", "output": "max: 70 regular_truck + 100 refrigerated_truck\nst: 50 regular_truck + 70 refrigerated_truck <= 5000\n     refrigerated_truck <= regular_truck"}
{"input": "A factory packages <var>glass jars</var> and <var>plates</var>. <var>Glass jars</var> take <param>15</param> minutes of worker time and <param>3</param> units of cardboard. <var>Plates</var> take <param>12</param> minutes of worker time and <param>4</param> units of cardboard. The factory has <limit>620</limit> minutes of worker time <const_dir>available</const_dir> and <limit>120</limit> units of cardboard <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>glass jar</var> packaged is $<param>2</param> and the <obj_name>profit</obj_name> per <var>plate</var> packaged is $<param>2.50</param>, how many of each should they package to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 glass_jar + 2.50 plate\nst: 15 Glass_jars + 12 Plates <= 620\n     3 Glass_jars + 4 Plates <= 120"}
{"input": "A farm wants to manufacture a special plant growth compound using two fertilizers: <var>P100</var> and <var>Y200</var>. Each kg of <var>fertilizer P100</var> contains <param>11</param> units of nitrogen, <param>6</param> units of phosphoric acid, <param>5</param> units of vitamin A and <param>4</param> units of <obj_name>vitamin B.</obj_name> Each kg of <var>fertilizer Y200</var> contains <param>9</param> units of nitrogen, <param>10</param> units of phosphoric acid, <param>8</param> units of vitamin A and <param>6</param> units of <obj_name>vitamin B.</obj_name> To be effective, the plant growth compound requires a <const_dir>minimum</const_dir> <limit>200</limit> units of nitrogen, a <const_dir>minimum</const_dir> of <limit>150</limit> units of phosphoric acid, and <const_dir>no more than</const_dir> <limit>300</limit> units of vitamin A. How many kg of each fertilizer should be used to <obj_dir>minimize</obj_dir> the <obj_name>amount of vitamin B</obj_name> in the compound? What is the minimum amount of vitamin B?", "output": "min: 6 fertilizer_Y200 + 4 fertilizer_P100\nst: 11 fertilizer_P100 + 9 fertilizer_Y200 >= 200\n     6 fertilizer_P100 + 10 fertilizer_Y200 >= 150\n     5 fertilizer_P100 + 8 fertilizer_Y200 <= 300"}
{"input": "Nova Furniture sells two types of chairs \u2013 a <var>desk chair</var> and a <var>garden chair</var>. Each <var>desk chair</var> costs $<param>200</param> to make and each <var>garden chair</var> costs $<param>300</param> to make. The company estimates that the total monthly demand of these two types of chairs combined will be <const_dir>at most</const_dir> <limit>250</limit> units. The monthly manufacturing <const_dir>budget</const_dir> for chairs is $<limit>35000</limit>. Determine the number of units of each type of chair the company should make to get <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name> if the <obj_name>profit</obj_name> on each <var>desk chair</var> and <var>garden chair</var> are $<param>100</param> and $<param>150</param>, respectively.", "output": "max: 100 desk_chair + 150 garden_chair\nst: 200 desk_chair + 300 garden_chair <= 35000\n     desk_chair + garden_chair <= 250"}
{"input": "A violin factory makes <var>modern violins</var> and <var>baroque violin</var>. A <var>modern violin</var> takes <param>5</param> hours of woodworking time and <param>3.5</param> hours of assembling time. A <var>baroque violin</var> takes <param>4</param> hours of woodworking time and <param>5</param> hours of assembling time. The factory has <limit>150</limit> hours of woodworking time and <limit>200</limit> hours of assembling time <const_dir>available</const_dir> per day among all the workers. The <obj_name>profit</obj_name> per <var>modern violin</var> is $<param>150</param> and the <obj_name>profit</obj_name> per <var>baroque violin</var> is $<param>200</param>. How many of each instrument should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 200 baroque_violin + 150 modern_violin\nst: 5 modern_violin + 4 baroque_violin <= 150\n     3.5 modern_violin + 5 baroque_violin <= 200"}
{"input": "IND Foods factory produces <var>basmati rice</var> and <var>bananas</var>. To make one kilogram of <var>basmati rice</var> requires <param>1.5</param> hours of human labor, <param>2</param> hours of machine work, and <param>3</param> hours of resting under the sun. To make one kilogram of <var>bananas</var> requires <param>2</param> hours of human labor, <param>4</param> hours of machine work, and <param>1.5</param> hours of resting under the sun. The factory only <const_dir>has</const_dir> <limit>90</limit> hours of human labor, <limit>150</limit> hours of machine labor, and <limit>70</limit> hours of time under the sun <const_dir>available</const_dir>. The <obj_name>net profit</obj_name> per kilogram of <var>basmati rice</var> is $<param>15</param> and the <obj_name>net profit</obj_name> per kilogram of <var>bananas</var> is $<param>28</param>. How many kilograms of each should the factory make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 15 basmati_rice + 28 bananas\nst: 1.5 basmati_rice + 2 bananas <= 90\n     2 basmati_rice + 4 bananas <= 150\n     1.5 bananas + 3 basmati_rice <= 70"}
{"input": "A beverage company wants to promote their new product. They want to maximize the <obj_name>exposure</obj_name> with a budget of <const_dir>at most</const_dir> $<limit>200000</limit>. To do so, the company needs to decide how much of the budget to spend on each of its two most effective media: (1) <var>newspaper</var> and (2) <var>television</var>. Each <var>newspaper advertisement</var> costs $<param>2500</param>; each <var>television advertisement</var> cover costs $<param>5000</param>. The company knows from experience that it is important to use both media. The product <obj_name>exposure</obj_name> is <param>30000</param> readers for each <var>newspaper advertisement</var> and <param>50000</param> viewers for each <var>television advertisement</var>. It makes a decision that <const_dir>at least</const_dir> <limit>12</limit> but <const_dir>at most</const_dir> <limit>24</limit> <var>newspaper advertisements</var> be ordered, and that <const_dir>at least</const_dir> <limit>10</limit> <var>television advertisements</var> should be contracted. How many times should each of the two media be used to obtain <obj_dir>maximum</obj_dir> <obj_name>exposure</obj_name> while staying within the budget?", "output": "max: 30000 newspaper_advertisement + 50000 television_advertisement\nst: 2500 newspaper_advertisement + 5000 television_advertisement <= 200000\n     newspaper_advertisements >= 12\n     newspaper_advertisements <= 24\n     television_advertisements >= 10"}
{"input": "Kappa Medical wants to mix two creams to create a mixture that contains <const_dir>at least</const_dir> <limit>4</limit> units of compound X and <limit>8</limit> units of compound Y. The amount of compound X and compound Y in <var>cream Alpha</var> is <param>2</param> units/mg and <param>2.7</param> units/mg respectively. On the other hand, the amount of compound X and compound Y in <var>cream Beta</var> is <param>4.1</param> units/mg and <param>3.2</param> units/mg respectively. It <obj_name>costs</obj_name> $<param>0.70</param> per mg to purchase <var>cream Alpha</var> and $<param>0.90</param> per mg to purchase <var>cream Beta</var>. Formulate an LP to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> of such a mixture.", "output": "min: 0.70 cream_Alpha + 0.90 cream_Beta\nst: 2 cream_Alpha + 4.1 cream_Beta >= 4\n     2.7 cream_Alpha + 3.2 cream_Beta >= 8"}
{"input": "A cosmetics company makes high-end skincare products whose main customers are wealthy women, both young girls and middle-aged women. In order to promote their product line, they decided to invest in short commercial spots on two types of programs: <var>social media</var> and <var>television</var>. While each <var>social media commercial</var> is seen by <param>5</param> million young girls and <param>1</param> million middle-aged women, each <var>television commercial</var> is seen by <param>3</param> million young girls and <param>7</param> million middle-aged women. A 1-minute <var>social media ad</var> <obj_name>costs</obj_name> $<param>30,000</param>, and a 1-minute <var>television ad</var> <obj_name>costs</obj_name> $<param>50,000</param>. The company would like the commercials to be seen by <const_dir>at least</const_dir> <limit>20</limit> million young girls and <limit>30</limit> million middle-aged women. Use linear programming to determine how the cosmetics company can meet its advertising requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 50,000 television_ad + 30,000 social_media_ad\nst: 5 social_media_commercial + 3 television_commercial >= 20\n     1 social_media_commercial + 7 television_commercial >= 30"}
{"input": "The company would like to design an office space with two types of desks: <var>regular desks</var> and <var>standing desks</var>. The company can spend <const_dir>at most</const_dir> $<limit>2500</limit>. <var>Regular desks</var> cost $<param>150</param>, take up <param>6</param> square feet of space, and <obj_name>seat</obj_name> <param>4</param> employees. <var>Standing desks</var> cost $<param>200</param>, take up <param>5</param> square feet of space, and <obj_name>seat</obj_name> <param>6</param> employees. The office can have <const_dir>at most</const_dir> <limit>250</limit> square feet of desks. How many of each desk should the company buy in order to <obj_dir>maximize</obj_dir> the <obj_name>seating availability</obj_name>?", "output": "max: 6 Standing_desks + 4 Regular_desks\nst: 150 Regular_desks + 200 Standing_desks <= 2500\n     6 Regular_desks + 5 Standing_desks <= 250"}
{"input": "Sofia Paint store mixes two brands of paint, <var>Iota</var> and <var>Lambda</var>, to create a new mixture of paint. A can of <var>Iota paint</var> <obj_name>costs</obj_name> $<param>8</param> and a can of <var>Lambda paint</var> <obj_name>costs</obj_name> $<param>12</param>. A can of <var>Iota paint</var> contains <param>3</param> units of dye, <param>5</param> units of thinner, and <param>6</param> units of oil. A can of <var>Lambda paint</var> contains <param>5</param> units of dye, <param>8</param> units of thinner, and <param>3</param> units of oil. The <const_dir>minimum</const_dir> requirements of dye, thinner, and oil for the new mixture are <limit>10</limit> units, <limit>12</limit> units, and <limit>15</limit> units, respectively. How many cans of each paint brand should be mixed to achieve the new mixture at a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 8 Iota_paint + 12 Lambda_paint\nst: 3 Iota_paint + 5 Lambda_paint >= 10\n     5 Iota_paint + 8 Lambda_paint >= 12\n     6 Iota_paint + 3 Lambda_paint >= 15"}
{"input": "A woman owns two cafes. Running <var>cafe 1</var> for an hour <obj_name>costs</obj_name> $<param>400</param> and makes <param>12</param> lattes, <param>18</param> americanos, and <param>16</param> macchiatos. Running <var>cafe 2</var> for an hour <obj_name>costs</obj_name> $<param>550</param> and makes <param>14</param> lattes, <param>20</param> americanos, and <param>9</param> macchiatos. To meet demand, she must make <const_dir>at least</const_dir> <limit>90</limit> lattes, <limit>80</limit> americanos, and <limit>40</limit> macchiatos. How many hours should she run each cafe to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 400 cafe_1 + 550 cafe_2\nst:  >= 90\n      >= 80\n      >= 40"}
{"input": "A factory makes <var>dotted paper</var> and <var>grid paper</var>. Both have to go through a cutting machine and a printing machine. A ream of <var>dotted paper</var> requires <param>3</param> minutes on the cutting machine and <param>5.5</param> minutes on the printing machine. A ream of <var>grid paper</var> requires <param>1.5</param> minutes on the cutting machine and <param>7</param> minutes on the printing machine. In a week, each machine is <const_dir>available</const_dir> for <limit>3000</limit> minutes. There is a <obj_name>profit</obj_name> of $<param>5.5</param> per ream of <var>dotted paper</var> and a <obj_name>profit</obj_name> of $<param>11</param> per ream of <var>grid paper</var>. How many reams of each should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5.5 dotted_paper + 11 grid_paper\nst: 3 dotted_paper + 1.5 grid_paper <= 3000\n     5.5 dotted_paper + 7 grid_paper <= 3000"}
{"input": "A grandmother knits <var>blankets</var> and <var>sweaters</var> for her community. A <var>blanket</var> requires <param>30</param> units of yarn and <param>5</param> hours of knitting. A <var>sweater</var> requires <param>20</param> units of yarn and <param>4</param> hours of knitting. The grandmother has <limit>200</limit> units of yarn <const_dir>available</const_dir> and <limit>40</limit> hours of knitting <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>blanket</var> is $<param>5.50</param> and the <obj_name>profit</obj_name> per <var>sweater</var> is $<param>5</param>, how many of each should she knit to <obj_dir>maximize</obj_dir> her <obj_name>profit</obj_name>?", "output": "max: 5.50 blanket + 5 sweater\nst: 30 blanket + 20 sweater <= 200\n     5 blanket + 4 sweater <= 40"}
{"input": "A company makes <var>surfboards</var> and <var>skateboards</var>. Each <var>surfboard</var> requires <param>5</param> units of wood and <param>3</param> units of paint. Each <var>skateboard</var> requires <param>4</param> units of wood and <param>2</param> units of paint. At the company, there are <limit>700</limit> units of wood <const_dir>available</const_dir> and <limit>320</limit> units of paint. If the <obj_name>profit</obj_name> per <var>surfboard</var> is $<param>70</param> and the <obj_name>profit</obj_name> per <var>skateboard</var> is $<param>45</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 70 surfboard + 45 skateboard\nst: 5 surfboard + 4 skateboard <= 700\n     3 surfboard + 2 skateboard <= 320"}
{"input": "A food truck sells <var>burritos</var> and <var>tacitos</var>. To stay in business, they must sell <const_dir>at least</const_dir> <limit>30</limit> orders of <var>burritos</var> but they can make <const_dir>at most</const_dir> <limit>100</limit> orders of <var>burritos</var>. Also, they must sell <const_dir>at least</const_dir> <limit>20</limit> orders of <var>tacitos</var> but they can make <const_dir>at most</const_dir> <limit>150</limit> orders of <var>tacitos</var>. Due to the lack of help, the food truck can only sell <limit>250</limit> orders in <const_dir>total</const_dir>. If the <obj_name>price</obj_name> per order of <var>burritos</var> is $<param>17</param> and the <obj_name>price</obj_name> per order of <var>tacitos</var> is $<param>12</param>, how many orders of each should they sell to <obj_dir>maximize</obj_dir> the <obj_name>revenue</obj_name>?", "output": "max: 17 burritos + 12 tacitos\nst: burritos >= 30\n     burritos <= 100\n     tacitos >= 20\n     burritos + tacitos <= 250\n     tacitos <= 150"}
{"input": "A glass company makes <var>sliding doors</var> and <var>windows</var>. They have orders for <const_dir>at least</const_dir> <limit>120</limit> <var>sliding doors</var> and <const_dir>at least</const_dir> <limit>110</limit> <var>windows</var> per day. However, due to supply constraints, the company can make <const_dir>at most</const_dir> <limit>210</limit> <var>sliding doors</var> and <const_dir>at most</const_dir> <limit>170</limit> <var>windows</var> per day. In addition, they have a contract to ship <const_dir>at least</const_dir> <limit>250</limit> products of either type per day. If the <obj_name>profit</obj_name> per <var>sliding door</var> is $<param>30</param> and the <obj_name>profit</obj_name> per <var>window</var> is $<param>25</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 sliding_door + 25 window\nst: sliding_doors >= 120\n     windows >= 110\n     sliding_doors <= 210\n     windows <= 170\n     sliding_door + window <= 250"}
{"input": "James has <const_dir>available</const_dir> a field of <limit>120</limit> square feet in which he plants <var>aster flowers</var> and <var>stonecrops.</var> The seed for <var>aster</var> costs $<param>20</param> per square foot. The seed for <var>stonecrops</var> costs $<param>45</param> per square foot. James has available a <const_dir>budget</const_dir> of $<limit>5000</limit> to spend on seeds. The <obj_name>profit</obj_name> per square foot of <var>aster flowers</var> is $<param>60</param> and the <obj_name>profit</obj_name> per square foot of <var>stonecrops</var> is $<param>80</param>. Find the optimal solution for James in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 60 aster_flowers + 80 stonecrops\nst: aster_flowers + stonecrops <= 120\n     20 aster + 45 stonecrops <= 5000"}
{"input": "A sandwich shop produces <var>premium</var> and <var>regular</var> versions of their sandwiches. A <var>premium sandwich</var> takes <param>6</param> minutes of preparation and requires <param>5</param> slices of meat to make. A <var>regular sandwich</var> takes <param>4</param> minutes of preparation and requires <param>1</param> slice of meat to make. The shop has <const_dir>in total</const_dir> <limit>400</limit> minutes of preparation time and <limit>100</limit> slices of meat. If the <obj_name>profit</obj_name> per <var>premium sandwich</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>regular sandwich</var> is $<param>1</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1 regular_sandwich + 5 premium_sandwich\nst: 6 premium_sandwich + 4 regular_sandwich >= 400\n     1 regular_sandwich + 5 premium_sandwich >= 100"}
{"input": "Nova Network wants to design a plan to bid for the job of providing a computer network for city offices. It can build three types of layouts using workstations, servers, and switches. It <const_dir>has</const_dir> <limit>2000</limit> workstations, <limit>500</limit> servers, and <limit>300</limit> switches. A <var>ring layout</var> uses <param>50</param> workstations, <param>20</param> servers, and <param>10</param> switches; a <var>tree layout</var> uses <param>30</param> workstations, <param>15</param> servers, and <param>7</param> switches; and a <var>mesh layout</var> uses <param>100</param> workstations, <param>50</param> servers, and <param>30</param> switches. The net <obj_name>profit</obj_name> is $<param>2000</param> for each <var>ring layout</var>, $<param>4000</param> for each <var>tree layout</var>, and $<param>8000</param> for each <var>mesh layout</var>.  How many layouts of each type should be used to yield <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2000 ring_layout + 4000 tree_layout + 8000 mesh_layout\nst: 50 ring_layout + 30 tree_layout + 100 mesh_layout <= 2000\n     20 ring_layout + 15 tree_layout + 50 mesh_layout <= 500\n     10 ring_layout + 7 tree_layout + 30 mesh_layout <= 300"}
{"input": "A company makes <var>kayaks</var> and <var>canoes</var>. The company has <const_dir>available</const_dir> <limit>8000</limit> minutes for assembly and <limit>4000</limit> minutes for quality checking. Each <var>kayak</var> takes <param>60</param> minutes of assembly and <param>15</param> minutes of quality checking. Each <var>canoe</var> takes <param>80</param> minutes of assembly and <param>25</param> minutes of quality checking. If the <obj_name>profit</obj_name> per <var>kayak</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>canoe</var> is $<param>450</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 kayak + 450 canoe\nst: 60 kayak + 80 canoe <= 8000\n     15 kayak + 25 canoe <= 4000"}
{"input": "A cat shelter feeds their cats using <var>cat foods</var> and <var>canned tuna</var>. Each packet of <var>cat food</var> <obj_name>costs</obj_name> $<param>12</param> while each can of <var>tuna</var> <obj_name>costs</obj_name> $<param>7</param>. Each packet of <var>cat food</var> contains <param>5</param> grams of carbohydrates, <param>15</param> grams of vitamins, and <param>12</param> grams of protein. Each can of <var>tuna</var> contains <param>7</param> grams of carbohydrates, <param>12</param> grams of vitamins, and <param>15</param> grams of protein. The cat shelter needs <const_dir>in total</const_dir> <limit>700</limit> grams of carbohydrates, <limit>1100</limit> grams of vitamins, and <limit>900</limit> grams of protein to feed their cats. How many of each should they buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 12 cat_food + 7 tuna\nst: 5 cat_food + 7 tuna >= 700\n     15 cat_food + 12 tuna >= 1100\n     12 cat_food + 15 tuna >= 900"}
{"input": "Robert would like to mix his colored cocktails. He has a <var>white cocktail</var> that has <param>7%</param> alcohol and <param>10%</param> sugar and a <var>green cocktail</var> that has <param>2%</param> alcohol and <param>25%</param> sugar. The <var>white cocktail</var> <obj_name>costs</obj_name> $<param>5.5</param> per kilogram and the <var>green cocktail</var> <obj_name>costs</obj_name> $<param>12</param> per kilogram. He wants to create a super cocktail that has a <const_dir>minimum</const_dir> of <limit>5</limit> kilograms of alcohol and <limit>25</limit> kilograms of sugar. How much of each cocktail should he mix in order to create the super cocktail at the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 12 green_cocktail + 5.5 white_cocktail\nst: 7% white_cocktail + 2% green_cocktail >= 5\n     10% white_cocktail + 25% green_cocktail >= 25"}
{"input": "Theta Electronics makes two phone models: a <var>regular model</var> and a <var>premium model</var>. Each <var>regular model</var> requires <param>70</param> minutes of assembly and <param>25</param> minutes of software verification. Each <var>premium model</var> requires <param>100</param> minutes of assembly and <param>30</param> minutes of software verification. The maximum <const_dir>available</const_dir> time for assembly is <limit>6000</limit> minutes and the maximum <const_dir>available</const_dir> time for software verification is <limit>4000</limit> minutes. If the company makes a <obj_name>profit</obj_name> of $<param>200</param> per <var>regular model</var> and a <obj_name>profit</obj_name> of $<param>500</param> per <var>premium model</var>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 regular_model + 500 premium_model\nst: 70 regular_model + 100 premium_model <= 6000\n     25 regular_model + 30 premium_model <= 4000"}
{"input": "Boarstone factory has two types of machines: a <var>regular</var> one and an <var>advanced</var> one. A <var>regular machine</var> can perform <param>5</param> tasks per hour, requires <param>2</param> workers, and <obj_name>costs</obj_name> $<param>1000</param>. An <var>advanced machine</var> can perform <param>25</param> tasks per hour, requires <param>5</param> workers, and <obj_name>costs</obj_name> $<param>10000</param>. The factory wants to complete <const_dir>at least</const_dir> <limit>120</limit> tasks per hour with a <const_dir>maximum</const_dir> of <limit>20</limit> workers. How many of each type of machine, <var>regular</var> and <var>advanced</var>, need to be used in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> and meet the requirements?", "output": "min: 10000 advanced_machine + 1000 regular_machine\nst: 5 regular_machine + 25 advanced_machine >= 120\n     2 regular_machine + 5 advanced_machine <= 20"}
{"input": "Bob <const_dir>has</const_dir> a <limit>250</limit> acre berry farm on which to plant <var>cranberries</var> and <var>bilberries</var>. Bob has $<limit>9000</limit> to spend on watering and <limit>600</limit> days worth of labor <const_dir>available</const_dir>. For each acre of <var>cranberries</var>, <param>5</param> days worth of labor and $<param>25</param> in watering costs is required. For each acre of <var>bilberries</var>, <param>4</param> days worth of labor and $<param>30</param> in watering costs is required. The <obj_name>profit</obj_name> per acre of <var>cranberries</var> is $<param>66</param> and the <obj_name>profit</obj_name> per acre of <var>bilberries</var> is $<param>73</param>. Formulate an LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 66 cranberries + 73 bilberries\nst: cranberries + bilberries <= 250\n     5 cranberries + 4 bilberries <= 9000\n     25 cranberries + 30 bilberries <= 600"}
{"input": "Julia is on a strict diet and insists on only taking <var>vanilla protein bars</var> and organic <var>meal replacement shakes</var>. She wants to save money and <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> but must get enough protein and carbs, and not too much fat. <var>Vanilla protein bars</var> <obj_name>cost</obj_name> $<param>10</param> per serving and contain <param>30</param> units of protein, <param>50</param> units of carbs, and <param>2</param> units of fat. Organic <var>meal replacement shakes</var> <obj_name>cost</obj_name> $<param>15</param> per serving and contain <param>10</param> units of protein, <param>20</param> units of carbs, and <param>5</param> units of fat. Julia requires <const_dir>at least</const_dir> <limit>155</limit> units of protein and <limit>140</limit> units of carbs but must <const_dir>not eat more than</const_dir> <limit>55</limit> units of fat each day. Formulate the problem as an LP problem in order to minimize cost.", "output": "min: 15 meal_replacement_shakes + 10 Vanilla_protein_bars\nst: 30 Vanilla_protein_bars + 10 meal_replacement_shakes >= 155\n     50 Vanilla_protein_bars + 20 meal_replacement_shakes >= 140\n     5 meal_replacement_shakes + 2 Vanilla_protein_bars <= 55"}
{"input": "A berry picker must pick <const_dir>at least</const_dir> <limit>3000</limit> strawberries and <limit>15000</limit> raspberries. He visits two farms. For each <obj_name>hour</obj_name> at <var>farm 1</var> he spends, he can pick <param>50</param> strawberries and <param>300</param> raspberries. For each <obj_name>hour</obj_name> at <var>farm 2</var> he spends, he can catch <param>70</param> strawberries and <param>200</param> raspberries. How many <obj_name>hours</obj_name> should he spend at each farm to <obj_dir>minimize</obj_dir> the <obj_name>amount of time</obj_name> he spends at both farms?", "output": "min: \nst: 70 farm_2 + 50 farm_1 >= 3000\n     300 farm_1 + 200 farm_2 >= 15000"}
{"input": "Nolan decides to take part in a physics contest with <var>multiple choice questions</var> worth <param>2</param> <obj_name>points</obj_name> each and <var>short answer questions</var> worth <param>5</param> <obj_name>points</obj_name> each. In this contest, he can answer <const_dir>at most</const_dir> <limit>30</limit> questions. In addition, he must answer <const_dir>at least</const_dir> <limit>15</limit> <var>multiple choice questions</var> and <const_dir>at least</const_dir> <limit>10</limit> <var>short answer questions</var>. Nolan can answer <const_dir>at most</const_dir> <limit>20</limit> <var>multiple choice questions</var> and <limit>20</limit> <var>short answer questions</var>. Assuming all his answers are correct, how many of each type of question should Nolan answer to <obj_dir>maximize</obj_dir> his <obj_name>score</obj_name>?", "output": "max: 2 multiple_choice_questions + 5 short_answer_questions\nst: multiple_choice_questions + short_answer_questions <= 30\n     multiple_choice_questions >= 15\n     short_answer_questions >= 10\n     multiple_choice_questions <= 20\n     short_answer_questions <= 20"}
{"input": "A pizza shop sells <var>pepperoni</var> and <var>Hawaiian pizzas</var>. They must sell <const_dir>at least</const_dir> <limit>35</limit> <var>pepperoni pizzas</var> but <const_dir>cannot sell more than</const_dir> <limit>40</limit>. They must also sell <const_dir>at least</const_dir> <limit>40</limit> <var>Hawaiian pizzas</var> but <const_dir>cannot sell more than</const_dir> <limit>70</limit>. In total, they <const_dir>only</const_dir> have enough supplies to sell <limit>90</limit> pizzas total. If the <obj_name>profit</obj_name> per <var>pepperoni pizza</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>Hawaiian pizza</var> is $<param>5</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 pepperoni_pizza + 5 Hawaiian_pizza\nst: pepperoni_pizzas >= 35\n     pepperoni_pizzas <= 40\n     Hawaiian_pizzas >= 40\n     Hawaiian_pizzas <= 70\n     pepperoni_pizza + Hawaiian_pizza <= 90"}
{"input": "You need to buy cabinets to store your <obj_name>seasonings and spices</obj_name>. A <var>small cabinet</var> takes <param>4</param> sq ft of space and costs $<param>70</param>. A <var>large cabinet</var> takes <param>8</param> sq ft and costs $<param>120</param>. You have <limit>200</limit> sq ft of space <const_dir>available</const_dir> in your kitchen and a <const_dir>budget</const_dir> of $<limit>1400</limit>. If the <var>small cabinet</var> can hold <param>30</param> <obj_name>seasonings and spices</obj_name> and a <var>large cabinet</var> can hold <param>40</param> <obj_name>seasonings and spices</obj_name>, how many of each should you buy to <obj_dir>maximize</obj_dir> the number of <obj_name>seasonings and spices</obj_name> you can store.", "output": "max: 40 large_cabinet + 30 small_cabinet\nst: 4 small_cabinet + 8 large_cabinet <= 200\n     70 small_cabinet + 120 large_cabinet <= 1400"}
{"input": "A company makes two types of cars, a <var>SUV</var> and a <var>sedan</var>. The <var>SUV</var> takes <param>200</param> minutes on the manufacturing line and <param>120</param> minutes of testing. The <var>sedan</var> takes <param>150</param> minutes on the manufacturing line and <param>100</param> minutes of testing. The company has <limit>20000</limit> minutes <const_dir>available</const_dir> on the manufacturing line and <limit>10000</limit> minutes <const_dir>available</const_dir> for testing. If the <obj_name>profit</obj_name> per <var>SUV</var> is $<param>10000</param> and the <obj_name>profit</obj_name> per <var>sedan</var> is $<param>9000</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 9000 sedan + 10000 SUV\nst: 200 SUV + 150 sedan <= 20000\n     120 SUV + 100 sedan <= 10000"}
{"input": "A factory makes tomato paste using two types of tomatoes. <var>Cherry tomatoes</var> contain <param>5</param> grams of sugar per unit and <param>1.5</param> grams of acid per unit. <var>Cocktail tomatoes</var> contain <param>2.5</param> grams of sugar per unit and <param>3</param> grams of acid per unit. Past sales has shown that the factory needs <const_dir>at least</const_dir> <limit>350</limit> grams of sugar and <limit>250</limit>  grams of acid to make a tasty tomato paste. If <var>cherry tomatoes</var> <obj_name>cost</obj_name> $<param>3</param> per unit and <var>cocktail tomatoes</var> <obj_name>cost</obj_name> $<param>4</param> per unit, how many units of each tomato should be used to make the tasty tomato paste at a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>. What is this cost?", "output": "min: 3 cherry_tomatoes + 4 cocktail_tomatoes\nst: 5 Cherry_tomatoes + 2.5 Cocktail_tomatoes >= 350\n     1.5 Cherry_tomatoes + 3 Cocktail_tomatoes >= 250"}
{"input": "A cafe company has two locations, a <var>university cafe</var> and a <var>downtown cafe</var>. The <var>university cafe</var> <obj_name>costs</obj_name> $<param>400</param> to run for 1 hour while the <var>downtown cafe</var> <obj_name>costs</obj_name> $<param>700</param> to run for 1 hour. In an hour, the <var>university cafe</var> yields <param>30</param> cappuccinos, <param>40</param> lattes, and <param>60</param> regular coffees. In an hour, the <var>downtown cafe</var> yields <param>40</param> cappuccinos, <param>70</param> lattes, and <param>110</param> regular coffees. The cafe company must produce <const_dir>at least</const_dir> <limit>900</limit> cappuccinos, <limit>700</limit> lattes, and <limit>1400</limit> regular coffees in total. How many hours should each cafe be run to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 400 university_cafe + 700 downtown_cafe\nst: 30 university_cafe + 40 downtown_cafe >= 900\n     40 university_cafe + 70 downtown_cafe >= 700\n     60 university_cafe + 110 downtown_cafe >= 1400"}
{"input": "CE Chemicals produces two types of products, <var>adhesives</var> and <var>plasticizers</var>. To produce each type of product, we need to use both an automatic device and a human-operated device. On a given day, each processing device is available for <const_dir>at most</const_dir> <limit>450</limit> minutes. To extract a package of <var>adhesives</var>, it takes <param>6</param> minutes of processing on the automatic device and <param>5</param> minutes on human-operated device. To extract a package of <var>plasticizers</var>, the automatic device needs to be run for <param>8</param> minutes and the human-operated device for <param>4</param> minutes. The manufacturer can sell a package of <var>adhesives</var> for a <obj_name>revenue</obj_name> of $<param>8.5</param> and <var>plasticizers</var> for a <obj_name>revenue</obj_name> of $<param>11.5</param>. Assuming that the company can sell all the products it produces, how many packages of each product should be produced daily in order to <obj_dir>maximize</obj_dir> the <obj_name>revenue</obj_name>?", "output": "max: 8.5 adhesives + 11.5 plasticizers\nst: 6 adhesives + 8 plasticizers <= 450\n     5 adhesives + 4 plasticizers <= 450"}
{"input": "A family <const_dir>has</const_dir> <limit>100</limit> acres of farmland on which to grow <var>carrots</var> and <var>green peas</var>. Both vegetables have to be watered and sprayed with bug repellant. There are <limit>135</limit> days per year <const_dir>available</const_dir> for watering and <limit>110</limit> days per year <const_dir>available</const_dir> for spraying bug spray. It takes <param>0.7</param> days to water an acre of <var>carrots</var> and <param>1.2</param> days to spray an acre of <var>carrots</var>. It takes <param>0.4</param> days to water an acre of <var>green peas</var> and <param>1.5</param> days to spray an acre of <var>green peas</var>. The family earns a <obj_name>profit</obj_name> of $<param>250</param> per acre of <var>carrots</var> and $<param>340</param> per acre of <var>green peas</var>. How many acres of each vegetable should be planted in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 250 carrots + 340 green_peas\nst: carrots + green_peas <= 100\n     0.7 carrots + 0.4 green_peas <= 135\n     1.2 carrots + 1.5 green_peas <= 110"}
{"input": "A framing company frames <var>printed art</var> and <var>paintings</var>. Each <var>printed art</var> takes <param>10</param> minutes for printing and <param>5</param> minutes for framing. Each <var>painting</var> takes <param>0</param> minutes for printing and <param>15</param> minutes for framing. The company has <const_dir>available</const_dir> <limit>150</limit> minutes for printing and <limit>400</limit> minutes for framing. If the <obj_name>profit</obj_name> per <var>printed art</var> sold is $<param>5</param> and the <obj_name>profit</obj_name> per <var>painting</var> sold is $<param>8</param>, how many of each should they produce to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 5 printed_art + 8 painting\nst: 10 printed_art + 0 painting <= 150\n     5 printed_art + 15 painting <= 400"}
{"input": "ABC Toys Co makes <var>RC drones</var> and <var>model cars</var> using wood and paint. A <var>RC drone</var> requires <param>7</param> units of wood and <param>30</param> units of paint. A <var>model car</var> requires <param>4</param> units of wood and <param>20</param> units of paint. The hobbyist has <const_dir>available</const_dir> <limit>200</limit> units of wood and <limit>900</limit> units of paint. If the <obj_name>profit</obj_name> per <var>RC drone</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>model car</var> is $<param>90</param>, how many of each toy should be made to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 50 RC_drone + 90 model_car\nst: 7 RC_drone + 4 model_car <= 200\n     30 RC_drone + 20 model_car <= 900"}
{"input": "Luke is a carrot farmer and he <const_dir>has</const_dir> <limit>150</limit> acres of land on which he grows <var>Danvers carrots</var> and <var>Nantes carrots</var>. The <obj_name>net revenue</obj_name> per acre of <var>Danvers carrots</var> is $<param>600</param> and the <obj_name>net revenue</obj_name> per acre of <var>Nantes carrots</var> is $<param>300</param>. Each acre of <var>Danvers carrots</var> requires <param>2.5</param> days worth of labor and $<param>100</param> in maintenance costs. Each acre of <var>Nantes carrots</var> requires <param>3.7</param> days worth of labor and $<param>200</param> in maintenance costs. Luke has $<limit>20000</limit> <const_dir>available</const_dir> to spend on maintenance costs and <limit>300</limit> days worth of labor <const_dir>available</const_dir>. How many acres of each should be grown in order to <obj_dir>maximize</obj_dir> <obj_name>net revenue</obj_name>?", "output": "max: 600 Danvers_carrots + 300 Nantes_carrots\nst: Danvers_carrots + Nantes_carrots <= 150\n     2.5 Danvers_carrots + 3.7 Nantes_carrots <= 300\n     100 Danvers_carrots + 200 Nantes_carrots <= 20000"}
{"input": "Tim Bakery sells <var>chocolate croissants</var> and <var>strawberry croissants</var>. The store pays a baker $<param>3</param> and $<param>5</param> for each unit of a <var>chocolate</var> and <var>strawberry croissant</var> respectively. The store makes a <obj_name>profit</obj_name> of $<param>4</param> per <var>chocolate croissant</var> and a <obj_name>profit</obj_name> of $<param>6</param> per <var>strawberry croissant</var>. In a month, the store owner expects to sell <const_dir>at most</const_dir> <limit>1200</limit> croissants and wants to spend <const_dir>at most</const_dir> $<limit>6000</limit>. How many of each type of croissant should be made in order to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 4 chocolate_croissant + 6 strawberry_croissant\nst: chocolate_croissant + strawberry_croissant <= 1200\n     3 chocolate + 5 strawberry_croissant <= 6000"}
{"input": "Great Sounds Co makes <var>headphones</var> and <var>earphones</var>. Each <var>headphone</var> requires <param>30</param> dollars of labor to make whereas each <var>earphone</var> requires only <param>20</param> dollars. In addition, each <var>headphone</var> requires <param>50</param> minutes of production time and each <var>earphone</var> requires <param>40</param> minutes of production time. The manufacturer has at most <limit>2000</limit> dollars of <const_dir>budget</const_dir> and <const_dir>at most</const_dir> <limit>2500</limit> minutes of production time. If the <obj_name>profit</obj_name> per <var>headphone</var> is $<param>350</param> and the <obj_name>profit</obj_name> per <var>earphone</var> is $<param>120</param>, how many of each product should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 350 headphone + 120 earphone\nst: 50 headphone + 40 earphone <= 2500\n     30 headphone + 20 earphone <= 2000"}
{"input": "Omega Seafood fishes in two areas, the <var>Indian</var> and <var>Arctic oceans</var>. In a week, they must <const_dir>provide</const_dir> <limit>20</limit> tons of fish, <limit>12</limit> tons of crab, and <limit>10</limit> tons of shrimp. It <obj_name>costs</obj_name> the company $<param>6000</param> per day to operate in the <var>Indian ocean</var> and $<param>9000</param> per day to operate in the <var>Arctic ocean</var>. In a day's operation in the <var>Indian ocean</var>, the company can catch <param>3.4</param> tons of fish, <param>2.2</param> tons of crab, and <param>1.5</param> tons of shrimp. In a day's operation in the <var>Arctic ocean</var>, the company can catch <param>6</param> tons of fish, <param>5</param> tons of crab, and <param>3</param> tons of shrimp. How many days a week should fishing be done in each ocean to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 6000 Indian_ocean + 9000 Arctic_ocean\nst: 3.4 Indian_ocean + 6 Arctic_ocean >= 20\n     2.2 Indian_ocean + 5 Arctic_ocean >= 12\n     1.5 Indian_ocean + 3 Arctic_ocean >= 10"}
{"input": "Sweet Popcorn store <const_dir>has</const_dir> <limit>35</limit> pounds of butter popcorn and <limit>45</limit> pounds of caramel popcorn. They sell two mixed bags: a <var>family mix</var> and a <var>party mix</var>. The <var>family mix</var> <obj_name>sells</obj_name> for $<param>4.5</param> a pound while the <var>party mix</var> <obj_name>sells</obj_name> for $<param>6</param> a pound. The <var>family mix</var> has <param>50%</param> caramel popcorn and <param>50%</param> butter popcorn. The <var>party mix</var> has <param>80%</param> caramel popcorn and <param>20%</param> butter popcorn. How many bags of each mix should be made in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 6 party_mix + 4.5 family_mix\nst: 50% family_mix + 80% party_mix <= 35\n     50% family_mix + 20% party_mix <= 45"}
{"input": "John mixes two brands of cereal to ensure he gets <const_dir>at least</const_dir> <limit>400</limit> units of iron and <limit>450</limit> units of fiber. A serving of <var>cereal A</var> contains <param>25</param> units of iron and <param>30</param> units of fiber. A serving of <var>cereal B</var> contains <param>20</param> units of iron and <param>40</param> units of fiber. If <var>cereal A</var> <obj_name>costs</obj_name> $<param>0.45</param> per serving and <var>cereal B</var> <obj_name>costs</obj_name> $<param>0.55</param> per serving, how many servings of each should John buy in order to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 0.45 cereal_A + 0.55 cereal_B\nst: 25 cereal_A + 20 cereal_B >= 400\n     30 cereal_A + 40 cereal_B >= 450"}
{"input": "Mia Clothing makes fancy <var>skirts</var> and <var>coats</var>. Both of these items require use of a sewing machine and embroidery machine. A <var>skirt</var> requires <param>3</param> hours on the sewing machine and <param>5</param> hours on the embroidery machine. A <var>coat</var> requires <param>2</param> hours on the sewing machine and <param>3.5</param> hours on the embroidery machine. In a week, there are <limit>25</limit> hours <const_dir>available</const_dir> on the sewing machine and <limit>35</limit> hours <const_dir>available</const_dir> on the embroidery machine. If the <obj_name>profit</obj_name> per <var>skirt</var> is $<param>300</param> and the <obj_name>profit</obj_name> per <var>coat</var> is $<param>500</param>, what should the weekly production be to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 skirt + 500 coat\nst: 3 skirt + 2 coat <= 25\n     5 skirt + 3.5 coat <= 35"}
{"input": "Thomas has 50 cows and feeds them on <var>silage</var> and <var>mixed grains</var>. <var>Silage</var> <obj_name>costs</obj_name> $<param>215</param> per kilogram while <var>mixed grains</var> <obj_name>cost</obj_name> $<param>320</param> per kilogram. Each kilogram of <var>silage</var> contains <param>0.5</param> kilograms of protein, <param>0.2</param> kilograms of vitamins, and <param>0.1</param> kilograms of minerals. Each kilogram of <var>mixed grains</var> contains <param>0.2</param> kilograms of protein, <param>0.1</param> kilograms of vitamins, and <param>0.2</param> kilograms of minerals. Each cow requires a <const_dir>minimum</const_dir> of <limit>2</limit> kilograms of protein and <limit>1.5</limit> kilograms of minerals per day. However, each cow can have <const_dir>at most</const_dir> <limit>1.0</limit> kilograms of vitamins per day. How should Thomas feed his cows in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while ensuring the cows get the required nutrition?", "output": "min: 215 Silage + 320 mixed_grains\nst: 0.5 silage + 0.2 mixed_grains >= 2\n     0.2 silage + 0.1 mixed_grains <= 1.0\n     0.1 silage + 0.2 mixed_grains >= 1.5"}
{"input": "Kald Vehicle makes <var>minivans</var> and <var>trucks</var>, each requiring the use of an assembly machine and a painting machine. It takes <param>2</param> hours on the assembly machine and <param>1.5</param> hours on the painting machine to make a <var>minivan</var>. On the other hand, it takes <param>4</param> hours on the assembly machine and <param>2</param> hours on the painting machine to make a <var>truck</var>. The <obj_name>profit</obj_name> per <var>minivan</var> is $<param>1200</param> and the <obj_name>profit</obj_name> per <var>truck</var> is $<param>1700</param>. The assembly machine is available for <const_dir>at most</const_dir> <limit>12</limit> hours per day and the painting machine is available for <const_dir>at most</const_dir> <limit>11</limit> hours per day. How many of each vehicle should the company make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1700 truck + 1200 minivan\nst: 2 minivan + 4 truck <= 12\n     1.5 minivan + 2 truck <= 11"}
{"input": "A boy buys and sells two types of hoodies. <var>Zippered hoodies</var> cost him $<param>20</param> each and <var>pullover hoodies</var> cost his $<param>15</param> each. He can spend <const_dir>a total of</const_dir> $<limit>450</limit>. He can sell <const_dir>at most</const_dir> <limit>25</limit> hoodies total. If the <obj_name>profit</obj_name> per <var>zippered hoodie</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>pullover hoodie</var> is $<param>4</param>, how many of each should he buy and sell to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 5 zippered_hoodie + 4 pullover_hoodie\nst: zippered_hoodie + pullover_hoodie <= 25\n     20 Zippered_hoodies + 15 pullover_hoodies >= 450"}
{"input": "A telecommunications company installs <var>internet service</var> and <var>TV service</var> in buildings. Each <var>internet service</var> takes <param>60</param> minutes of wiring time and <param>10</param> minutes of box installation time. Each <var>TV service</var> takes <param>50</param> minutes of wiring time and <param>20</param> minutes of box installation time. The company has <const_dir>available</const_dir> <limit>7000</limit> minutes of wiring time and <limit>4000</limit> minutes of box installation time. If the <obj_name>profit</obj_name> per <var>internet service</var> installation is $<param>100</param> and the <obj_name>profit</obj_name> per <var>TV service</var> installation is $<param>120</param>, how many of each should be installed to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 100 internet_service + 120 TV_service\nst: 60 internet_service + 50 TV_service <= 7000\n     10 internet_service + 20 TV_service <= 4000"}
{"input": "A processing plant cleans and shells both <var>crabs</var> and <var>lobsters</var>. Each <var>crab</var> takes <param>4</param> minutes of cleaning and <param>15</param> minutes of shelling. Each <var>lobster</var> takes <param>5</param> minutes of cleaning and <param>12</param> minutes of shelling. The processing plant has <limit>400</limit> minutes <const_dir>available</const_dir> for cleaning and <limit>900</limit> minutes <const_dir>available</const_dir> for shelling. If the <obj_name>profit</obj_name> per <var>crab</var> is $<param>14</param> and the <obj_name>profit</obj_name> per <var>lobster</var> is $<param>18</param>, how many of each should the processing plant clean and shell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 14 crab + 18 lobster\nst: 4 crab + 5 lobster <= 400\n     15 crab + 12 lobster <= 900"}
{"input": "Frank <const_dir>has</const_dir> <limit>1500</limit> acres of land on which he plans to grow <var>carrots</var> and <var>pumpkins</var>. He has <const_dir>at most</const_dir> <limit>1000</limit> hours of tractor time available and $<limit>25000</limit> of capital available. Each acre of <var>carrots</var> requires <param>15</param> hours of tractor work and $<param>12</param> of capital, and each acre of <var>pumpkins</var> requires <param>20</param> hours of tractor work and $<param>55</param> of capital. If the <obj_name>profit</obj_name> from an acre of <var>carrots</var> is $<param>80</param> and the <obj_name>profit</obj_name> from an acre of <var>pumpkins</var> is $<param>124</param>, how many acres of each crop should he plant to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 124 pumpkins + 80 carrots\nst: pumpkins + carrots <= 1500\n     15 carrots + 20 pumpkins <= 1000\n     12 carrots + 55 pumpkins <= 25000"}
{"input": "A fish food company makes <var>small</var> and <var>bulk size</var> containers of fish food. To make a <var>small container</var> of fish food, it takes <param>10</param> units of fish food and <param>2</param> minutes to fill. To make a <var>bulk size</var> container of fish food, it takes <param>30</param> units of fish food and <param>7</param> minutes to fill. The company has <limit>200</limit> units of fish food <const_dir>available</const_dir> and <limit>120</limit> minutes of filling time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>small container</var> of fish food is $<param>2</param> and the <obj_name>profit</obj_name> per <var>bulk size container</var> of fish food is $<param>7</param>, how many of each should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 bulk_size_container + 2 small_container\nst: 10 small_container + 30 bulk_size <= 200\n     7 bulk_size + 2 small_container <= 120"}
{"input": "A snack company wants to make a special mix using previous snack mixes, <var>snack mix A</var> and <var>snack mix B.</var> Each <var>snack mix A</var> has <param>20</param> cashews and <param>30</param> peanuts. Each <var>snack mix B</var> has <param>10</param> cashews and <param>45</param> peanuts.  The special mix must contain <const_dir>at least</const_dir> <limit>90</limit> cashews and <limit>80</limit> peanuts. In addition, there can be <const_dir>at most</const_dir> <limit>12</limit> of <var>snack mix A</var> in the mixture. If the <obj_name>cost</obj_name> per <var>snack mix A</var> is $<param>1.00</param> and the <obj_name>cost</obj_name> per <var>snack mix B</var> is $<param>1.20</param>, how many of each should be in the mixture to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 1.00 snack_mix_A + 1.20 snack_mix_B\nst: 20 snack_mix_A + 10 snack_mix_B >= 90\n     30 snack_mix_A + 45 snack_mix_B >= 80\n     snack_mix_A <= 12"}
{"input": "Bluelight Kitchen makes two types of dish detergents: <var>Clear Liquid</var> and <var>Fresh Mint</var>. <var>Clear Liquid</var> consists of <param>15%</param> soap and <param>6.5%</param> citric acid and <var>Fresh Mint</var> consists of <param>7%</param> soap and <param>10.5%</param> citric acid. After doing some research, the company realizes that it needs to use <const_dir>at least</const_dir> <limit>25</limit> kg of soap and <limit>20</limit> kg of citric acid. If <var>Clear Liquid</var> <obj_name>costs</obj_name> $<param>6.5</param> per kg and <var>Fresh Mint</var> <obj_name>costs</obj_name> $<param>5.5</param> per kg, determine how much of each type of detergents should be produced so that chemical requirements are met at a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 5.5 Fresh_Mint + 6.5 Clear_Liquid\nst: 15% Clear_Liquid + 7% Fresh_Mint >= 25\n     6.5% Clear_Liquid + 10.5% Fresh_Mint >= 20"}
{"input": "A gardener grows <var>lettuce</var> and <var>tomatoes</var> <const_dir>in</const_dir> their <limit>300</limit> sqft backyard. The <obj_name>profit</obj_name> per sqft of <var>lettuce</var> is $<param>2</param> and the <obj_name>profit</obj_name> per sqft of <var>tomatoes</var> is $<param>3</param>. In addition, bug spray must be used to grow both <var>lettuce</var> and <var>tomatoes</var>. Per sqft of <var>lettuce</var>, <param>5</param> mL of bug spray are needed. Per sqft of <var>tomatoes</var>, <param>7</param> mL of bug spray are needed. The gardener has <const_dir>available</const_dir> <limit>255</limit> mL of bug spray. How many of sqft of each should the gardener grow to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 lettuce + 3 tomatoes\nst: 5 lettuce + 7 tomatoes <= 255\n     lettuce + tomatoes <= 300"}
{"input": "Emma wants to eat a diet that includes a <const_dir>minimum</const_dir> of <limit>120</limit> units of proteins and <limit>30</limit> units of fat. She can eat <var>pork</var> and <var>shrimp</var> to supplement her current vegetable-based diet. <var>Pork</var> <obj_name>costs</obj_name> $<param>3</param> per unit and <var>shrimp</var> <obj_name>costs</obj_name> $<param>5.5</param> per unit. One unit of <var>Pork</var> has <param>15</param> units of proteins and <param>4</param> units of fat. One unit of <var>shrimp</var> has <param>22</param> units of proteins and <param>7</param> units of fat. Formulate this as a linear programming problem. Find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> for a diet that consists of a mixture of these foods and also meets the minimal nutritional requirements.", "output": "min: 3 Pork + 5.5 shrimp\nst: 22 shrimp + 15 Pork >= 120\n     4 Pork + 7 shrimp >= 30"}
{"input": "A cereal company makes <var>nutritional cereal</var>, <var>kids' cereal</var>, and <var>sugary cereal</var>. Each box of <var>nutritional cereal</var> requires <param>3</param> units of oat and <param>1</param> unit of sugar. Each <var>kids' cereal</var> requires <param>1.5</param> units of oat and <param>1.5</param> units of sugar. Each <var>sugary cereal</var> requires <param>2</param> units of oat and <param>4</param> units of sugar. The company has <const_dir>available</const_dir> <limit>500</limit> units of oat and <limit>700</limit> units of sugar. If the <obj_name>revenue</obj_name> per box of <var>nutritional cereal</var> is $<param>1</param>, the <obj_name>revenue</obj_name> per <var>kids' cereal</var> is $<param>1.50</param>, and the <obj_name>revenue</obj_name> per <var>sugary cereal</var> is $<param>2</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 1 nutritional_cereal + 1.50 kids'_cereal + 2 sugary_cereal\nst: 3 nutritional_cereal + 1.5 kids'_cereal + 2 sugary_cereal <= 500\n     1 nutritional_cereal + 1.5 kids'_cereal + 4 sugary_cereal <= 700"}
{"input": "A neighbourhood community builds and paints <var>sheds</var> and <var>treehouses</var>. Each <var>shed</var> takes <param>4</param> hours to build and <param>2</param> hours to paint. Each <var>treehouse</var> takes <param>2</param> hours to build and <param>1.5</param> hours to paint. The neighbourhood community has <const_dir>at most</const_dir> <limit>40</limit> hours available for building and <limit>30</limit> hours <const_dir>available</const_dir> for painting. If the neighbourhood community makes a <obj_name>profit</obj_name> of $<param>700</param> per <var>shed</var> and a <obj_name>profit</obj_name> of $<param>500</param> per <var>treehouse</var>, how many of each should they make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 500 treehouse + 700 shed\nst: 4 shed + 2 treehouse <= 40\n     2 shed + 1.5 treehouse <= 30"}
{"input": "One batch of <var>shortbread cookies</var> is made of <param>256</param>g of flour and <param>200</param>g of butter while a batch of <var>peanut butter cookies</var> requires <param>180</param>g of flour and <param>250</param>g of butter. Please find the <obj_dir>maximum</obj_dir> <obj_name>number of batches</obj_name> of cookies we can bake <obj_dir>using</obj_dir> <param>3500</param>g of flour and <param>2500</param>g of butter assuming that there is no shortage of the other ingredients used in making the cookies.", "output": "max:"}
{"input": "Peter produces a plant growth compound by mixing two types of fertilizer: <var>GreenCycle</var> and <var>GrowSafe</var>. This growth compound must contain <const_dir>at least</const_dir> <limit>9</limit> units of nitrous oxide and <limit>5</limit> units of vitamin mix. Fertilizer <var>GreenCycle</var> and <var>GrowSafe</var> <obj_name>cost</obj_name> $<param>1.5</param> and $<param>1.8</param> per kg, respectively. Fertilizer <var>GreenCycle</var> contains <param>2.1</param> units of nitrous oxide per kg and <param>1.3</param> units of vitamin mix per kg. Fertilizer <var>GrowSafe</var> contains <param>3.5</param> units of nitrous oxide per kg and <param>1.1</param> units of vitamin mix per kg. Determine the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> of Peter's compound.", "output": "min: 1.5 GreenCycle + 1.8 GrowSafe\nst: 2.1 GreenCycle + 3.5 GrowSafe >= 9\n     1.1 GrowSafe + 1.3 GreenCycle >= 5"}
{"input": "A small family business makes homemade <var>apple pies</var> and <var>blueberry pies</var>. It takes <param>30</param> minutes to make one <var>apple pie</var> and <param>40</param> minutes to make a <var>blueberry pie</var>. The family business <const_dir>only</const_dir> operates for <limit>4500</limit> minutes per week. Due to fruit availability, they can make <const_dir>at most</const_dir> <limit>70</limit> <var>apple pies</var> and <const_dir>at most</const_dir> <limit>60</limit> <var>blueberry pies</var>. If the <obj_name>profit</obj_name> per <var>apple pie</var> is $<param>5</param> and the <obj_name>profit</obj_name> per <var>blueberry pie</var> is $<param>6</param>, how many of each pie should they make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 5 apple_pie + 6 blueberry_pie\nst: 30 blueberry_pies + 40 apple_pie <= 4500\n     apple_pies <= 70\n     blueberry_pies <= 60"}
{"input": "You are playing a game where you can catch <var>fish</var> or <var>birds</var>. Each <var>fish</var> caught is <param>4</param> <obj_name>points</obj_name> and each <var>bird</var> caught is <param>6</param> <obj_name>points</obj_name>. You have to catch <const_dir>at least</const_dir> <limit>6</limit> <var>fishes</var> and <const_dir>at least</const_dir> <limit>2</limit> <var>birds</var> to progress. However, you only have time to catch <const_dir>at most</const_dir> <limit>9</limit> <var>fishes</var> and <const_dir>at most</const_dir> <limit>4</limit> <var>birds</var>. In total, you can catch <const_dir>no more than</const_dir> <limit>12</limit> animals. How many of each type of animal should you catch to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 4 fish + 6 bird\nst: fishes <= 9\n     birds <= 4\n     fishes >= 6\n     birds >= 2\n     fish + bird <= 12"}
{"input": "In an exam, you can solve <var>easy questions</var> worth <param>4</param> <obj_name>points</obj_name> each or <var>hard questions</var> worth <param>10</param> <obj_name>points</obj_name> each. You have to solve <const_dir>at least</const_dir> <limit>4</limit> <var>easy questions</var> and <limit>2</limit> <var>hard question</var> to pass. Due to time restrictions, you can solve <const_dir>at most</const_dir> <limit>12</limit> <var>easy questions</var> and <limit>4</limit> <var>hard questions</var>. In total, you can only solve a <const_dir>maximum</const_dir> of <limit>9</limit> questions. How many of each question type should you solve to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 4 easy_questions + 10 hard_questions\nst: easy_questions >= 4\n     hard_question >= 2\n     easy_questions <= 12\n     hard_questions <= 4\n     easy_questions + hard_questions <= 9"}
{"input": "A company makes <var>regular desks</var> and <var>standing desks</var>. <var>Regular desks</var> require <param>20</param> units of wood while <var>standing desks</var> require <param>15</param> units of wood. <var>Regular desks</var> take <param>10</param> minutes to package while <var>standing desks</var> take <param>20</param> minutes to package. The company has <limit>4000</limit> units of wood <const_dir>available</const_dir> and <limit>1500</limit> minutes of packaging time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>regular desk</var> is $<param>200</param> and the <var>standing desk</var> is $<param>300</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 standing_desk + 200 regular_desk\nst: 20 Regular_desks + 15 standing_desks <= 4000\n     10 Regular_desks + 20 standing_desks <= 1500"}
{"input": "A restaurant makes prepackaged takeout meals. The <var>breakfast option</var> takes <param>7</param> minutes to prepare and <param>2</param> minutes to package. The <var>lunch option</var> takes <param>8</param> minutes to prepare and <param>3</param> minutes to package. The restaurant has <limit>700</limit> minutes <const_dir>available</const_dir> for preparations and <limit>500</limit> minutes <const_dir>available</const_dir> for packaging. If the <obj_name>profit</obj_name> per <var>breakfast option</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>lunch option</var> is $<param>8</param>, how many of each should the restaurant make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 breakfast_option + 8 lunch_option\nst: 7 breakfast_option + 8 lunch_option <= 700\n     2 breakfast_option + 3 lunch_option <= 500"}
{"input": "Daniel and David are running a bakery store to sell <var>pancakes</var> and <var>bagels</var>. Each batch of <var>pancakes</var> takes <param>25</param> minutes of Daniel's time and <param>15</param> minutes of David's time. Each batch of <var>bagels</var> takes <param>9</param> minutes of Daniel's time and <param>20</param> minutes of David's time. In a day, Daniel has <limit>150</limit> minutes <const_dir>available</const_dir> and David has <limit>350</limit> minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per batch of <var>pancakes</var> is $<param>25</param> and the <obj_name>profit</obj_name> per batch of <var>bagels</var> is $<param>30</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 25 pancakes + 30 bagels\nst: 25 pancakes + 9 bagels <= 150\n     15 pancakes + 20 bagels <= 350"}
{"input": "Kim <const_dir>has</const_dir> $<limit>40000</limit> to invest in two technology industries. She decides to invest in the <var>LED display industry</var> and <var>microprocessor industry</var>. Money invested in the <var>LED display industry</var> yields a <obj_name>return</obj_name> of <param>4%</param> while money invested in the <var>microprocessor industry</var> yields a <obj_name>return</obj_name> of <param>5.5%</param>. She has been advised to invest <const_dir>at least</const_dir> <limit>20%</limit> of the money in the <var>LED display industry</var> and <const_dir>at most</const_dir> <limit>65%</limit> in the <var>microprocessor industry</var>. How much should she invest in each to <obj_dir>maximize</obj_dir> her <obj_name>return</obj_name>?", "output": "max: 4% LED_display_industry + 5.5% microprocessor_industry\nst: LED_display_industry >= 20%\n     microprocessor_industry <= 65%\n     LED_display_industry + microprocessor_industry <= 40000"}
{"input": "A wood artist makes <var>cutting boards</var> and <var>chairs</var>. Each <var>cutting board</var> takes <param>30</param> minutes to make while each <var>chair</var> takes <param>70</param> minutes to make. In a week, the artist only has <limit>1500</limit> minutes <const_dir>available</const_dir> to do woodworking. In addition, he <const_dir>only</const_dir> has enough wood to make <limit>40</limit> items total. If he makes a <obj_name>profit</obj_name> of $<param>14</param> per <var>cutting board</var> and a <obj_name>profit</obj_name> of $<param>25</param> per <var>chair</var>, how many of each should he make to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 14 cutting_board + 25 chair\nst: cutting_board + chair <= 40\n     30 cutting_board + 70 chair <= 1500"}
{"input": "A bubble tea truck sells and delivers <var>regular milk tea</var> and <var>fresh fruit tea</var> during the pandemic. The <obj_name>profit</obj_name> on a cup of <var>regular milk tea</var> is <param>1.5</param>$, and the <obj_name>profit</obj_name> on a cup of <var>fresh fruit tea</var> is <param>1.8$.</param> In order to thrive, it must sell <const_dir>at least</const_dir> <limit>45</limit> cups of <var>regular milk tea</var> but can make <const_dir>at most</const_dir> <limit>60</limit> in a day. It must also sell <const_dir>at least</const_dir> <limit>55</limit> cups of <var>fresh fruit tea</var> due to its high demand, but can <const_dir>not prepare more than</const_dir> <limit>75</limit> a day. Due to staff shortage, the bubble tea truck can only prepare up to <limit>120</limit> items <const_dir>in total</const_dir>. How many of each item should it prepare to satisfy its customers and <obj_dir>maximize</obj_dir> its daily <obj_name>profit</obj_name>?", "output": "max: 1.5 regular_milk_tea + 1.8$. fresh_fruit_tea\nst: regular_milk_tea >= 45\n     regular_milk_tea <= 60\n     fresh_fruit_tea >= 55\n     fresh_fruit_tea <= 75\n     regular_milk_tea + fresh_fruit_tea <= 120"}
{"input": "An electronics factory manufactures two calculators: <var>solar calculators</var> and <var>finance calculators</var>, using silicon, plastic, and steel. To make a <var>solar calculator</var>, <param>5</param> grams of silicon, <param>4</param> grams of plastic, and <param>2</param> grams of steel are needed. The <obj_name>profit</obj_name> per <var>solar calculator</var> is $<param>12</param>. To make a <var>finance calculator</var>, <param>3</param> grams of silicon, <param>5</param> grams of plastic, and <param>3</param> grams of steel are needed. The <obj_name>profit</obj_name> per <var>finance calculator</var> is $<param>9</param>. Even though the company can sell as many calculators as it produces, there is only <limit>150</limit> grams of silicon, <limit>150</limit> grams of plastic, and <limit>70</limit> grams of steel <const_dir>available</const_dir>. Formulate an LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 12 solar_calculator + 9 finance_calculator\nst: 5 solar_calculator + 3 finance_calculator <= 150\n     4 solar_calculator + 5 finance_calculator <= 150\n     2 solar_calculator + 3 finance_calculator <= 70"}
{"input": "A wedding cake company mixes two cake mixes to get a perfect consistency. <var>Vanilla cake mix</var> contains <param>3%</param> leavening agent and <param>55%</param> flour. <var>Chocolate cake mix</var> contains <param>2%</param> leavening agent and <param>43%</param> flour. The final mixture needs <const_dir>at least</const_dir> <limit>0.3</limit> kg of leavening agent and <limit>10</limit> kg of flour. If the <obj_name>cost</obj_name> per kg of <var>vanilla cake mix</var> is $<param>10</param> and the <obj_name>cost</obj_name> per kg of <var>chocolate cake mix</var> is $<param>15</param>, how many kg of each should the wedding cake company buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 10 vanilla_cake_mix + 15 chocolate_cake_mix\nst: 3% Vanilla_cake_mix + 2% Chocolate_cake_mix >= 0.3\n     55% Vanilla_cake_mix + 43% Chocolate_cake_mix >= 10"}
{"input": "Gabriel has <var>lemons</var> and <var>pecans</var> to eat. A pound of <var>lemons</var> <obj_name>costs</obj_name> $<param>12</param> and contains <param>3</param> units of calcium, <param>4</param> units of potassium, and <param>7</param> units of zinc per pound. A pound of <var>pecans</var> <obj_name>costs</obj_name> $<param>10</param> and contains <param>5</param> units of calcium, <param>4</param> units of potassium, and <param>9</param> units of zinc per pound. There is nothing else available to eat and Gabriel must meet his daily requirements of <const_dir>at least</const_dir> <limit>25</limit> units of calcium, <limit>18</limit> units of potassium, and <limit>19</limit> units of zinc. How many pounds of each should Gabriel eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 10 pecans + 12 lemons\nst: 3 lemons + 5 pecans >= 25\n     4 lemons + 4 pecans >= 18\n     7 lemons + 9 pecans >= 19"}
{"input": "A furniture factory makes two products: <var>bedside tables</var> and <var>bookcases</var>. Both products have to go through two processes: crafting and polishing. For each <var>bedside table</var>, the workers spend <param>2.5</param> hours crafting and <param>1.5</param> hours polishing. For each <var>bookcase</var>, the workers spend <param>5</param> hours crafting and <param>3</param> hours polishing. On any day, there is a <const_dir>maximum</const_dir> of <limit>30</limit> crafting hours available and <limit>20</limit> polishing hours <const_dir>available</const_dir>. The <obj_name>profit</obj_name> from the sale of each <var>bedside table</var> is $<param>200</param> and the <obj_name>profit</obj_name> from the sale of each <var>bookcase</var> is $<param>500</param>. The factory can sell everything they make. How should they schedule daily production in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 bedside_table + 500 bookcase\nst: 2.5 bedside_table + 5 bookcase <= 30\n     1.5 bedside_table + 3 bookcase <= 20"}
{"input": "A company sells <var>blankets</var> and <var>bedsheets</var>. Each <var>blanket</var> takes <param>14</param> minutes to cut and <param>12</param> minutes to hem. Each <var>bedsheet</var> takes <param>17</param> minutes to cut and <param>14</param> minutes to hem. There are <limit>2000</limit> minutes <const_dir>available</const_dir> for cutting and <limit>1500</limit> minutes <const_dir>available</const_dir> for hemming. If the <obj_name>profit</obj_name> per <var>blanket</var> is $<param>24</param> and the <obj_name>profit</obj_name> per <var>bedsheet</var> is $<param>21</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 24 blanket + 21 bedsheet\nst: 14 blanket + 17 bedsheet <= 2000\n     12 blanket + 14 bedsheet <= 1500"}
{"input": "Angela mixes <var>French perfume</var> and <var>Spanish perfume</var> together to create a new mixture. The mixture must contain <const_dir>at least</const_dir> <limit>150</limit> units of flower scent and <limit>60</limit> units of fruit scent. Each bottle of <var>French perfume</var> contains <param>50</param> units of fruit scent and <param>20</param> units of flower scent. Each bottle of <var>Spanish perfume</var> contains <param>40</param> units of fruit scent and <param>30</param> units of flower scent. If the <obj_name>cost</obj_name> per bottle of <var>French perfume</var> is $<param>50.00</param> and the <obj_name>cost</obj_name> per bottle of <var>Spanish perfume</var> is $<param>45.00</param>, how many of each should Angela buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 50.00 French_perfume + 45.00 Spanish_perfume\nst: 20 French_perfume + 30 Spanish_perfume >= 150\n     50 French_perfume + 40 Spanish_perfume >= 60"}
{"input": "You are buying vehicles to transport foods and will keep them in your parking lot. A <var>small vehicle</var> costs $<param>7000</param>, takes <param>1</param> parking spot, and can carry <param>10</param> <obj_name>boxes of foods</obj_name>. A <var>large vehicle</var> costs $<param>14000</param>, takes <param>2</param> parking spots, and can carry <param>25</param> <obj_name>boxes of foods</obj_name>. You have a $<limit>200000</limit> <const_dir>limit</const_dir> and have <const_dir>at most</const_dir> <limit>30</limit> parking spots. How many of each vehicle should be purchased to <obj_dir>maximize</obj_dir> the <obj_name>number of boxes of foods</obj_name> you can carry?", "output": "max: 25 large_vehicle + 10 small_vehicle\nst: 7000 small_vehicle + 14000 large_vehicle <= 200000\n     1 small_vehicle + 2 large_vehicle <= 30"}
{"input": "Gary eats only <var>noodles</var> and <var>cakes</var> for a diet. A serving of <var>noodles</var> contains <param>5</param> units of proteins and <param>12</param> units of minerals. A serving of <var>cake</var> contains <param>4</param> units of proteins and <param>8</param> units of minerals. He wants to receive <const_dir>at most</const_dir> <limit>100</limit> units of proteins and <const_dir>at most</const_dir> <limit>30</limit> units of minerals. If <var>noodles</var> <obj_name>cost</obj_name> $<param>3</param> per serving and each <var>cake</var> <obj_name>cost</obj_name> $<param>5</param>, how many servings of each food should Gary eat to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3 noodles + 5 cake\nst: 5 noodles + 4 cake <= 100\n     12 noodles + 8 cake <= 30"}
{"input": "A store sells two salad bowls. The <var>individual salad</var> contains <param>5</param> units of lettuce, <param>2</param> units of tomatoes, and <param>2</param> units of sauce. The <var>family-sized salad</var> contains <param>18</param> units of lettuce, <param>6</param> units of tomatoes, and <param>5</param> units of sauce. The store has <const_dir>available</const_dir> <limit>220</limit> units of lettuce, <limit>150</limit> units of tomatoes, and <limit>140</limit> units of sauce. If the <obj_name>profit</obj_name> per <var>individual salad</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>family-sized salad</var> is $<param>7</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 family-sized_salad + 4 individual_salad\nst: 5 individual_salad + 18 family-sized_salad <= 220\n     2 individual_salad + 6 family-sized_salad <= 150\n     2 individual_salad + 5 family-sized_salad <= 140"}
{"input": "A brunch restaurant makes <var>eggs benedicts</var> and <var>hashbrowns.</var> Each <var>eggs benedict</var> requires <param>10</param> grams of butter and <param>1</param> egg. Each <var>hashbrown</var> requires <param>5</param> grams of butter and <param>2</param> eggs. The restaurant has <const_dir>available</const_dir> <limit>5000</limit> grams of butter and <limit>600</limit> eggs. If the <obj_name>profit</obj_name> per <var>eggs benedict</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>hashbrown</var> is $<param>2</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 eggs_benedict + 2 hashbrown\nst: 10 eggs_benedict + 5 hashbrown <= 5000\n     1 eggs_benedict + 2 hashbrown <= 600"}
{"input": "A teddy bear shop makes two sizes of teddy bears - <var>small</var> and <var>large</var>. Both require time for filling and stitching. A <var>small teddy bear</var> requires <param>5</param> minutes of filling and <param>25</param> minutes of stitching. A <var>large teddy bear</var> requires <param>10</param> minutes of filling and <param>35</param> minutes of stitching. The shop has <limit>700</limit> minutes <const_dir>available</const_dir> per day for filling and <limit>900</limit> minutes <const_dir>available</const_dir> per day for stitching. The <obj_name>profit</obj_name> per <var>small teddy bear</var> is $<param>50</param> and the <obj_name>profit</obj_name> per <var>large teddy bear</var> is $<param>8</param>. How many of each teddy bear should the shop make to <obj_dir>maximize</obj_dir> their <obj_name>profits</obj_name>?", "output": "max: 50 small_teddy_bear + 8 large_teddy_bear\nst: 5 small_teddy_bear + 10 large_teddy_bear <= 700\n     35 large_teddy_bear + 25 small_teddy_bear <= 900"}
{"input": "Andy likes to mix his two post-workout drinks: <var>chocolate milk</var> and <var>vegetable juice</var>. <var>Chocolate milk</var> <obj_name>costs</obj_name> $<param>3.5</param> per bottle, contains <param>6</param> units of potassium, <param>4</param> units of magnesium, and <param>5</param> units of calcium. <var>Vegetable juice</var> <obj_name>costs</obj_name> $<param>6</param> per bottle and contains <param>9</param> units of potassium, <param>5</param> units of magnesium, and <param>7</param> units of calcium. David likes to make sure he gets <const_dir>at least</const_dir> <limit>20</limit> units of potassium, <limit>8</limit> units of magnesium, and <limit>12</limit> units of calcium after each workout. How many bottles of each drink should he buy and mix in order to ensure a <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>? What is the minimum cost?", "output": "min: 3.5 Chocolate_milk + 6 Vegetable_juice\nst: 6 Chocolate_milk + 9 Vegetable_juice >= 20\n     4 Chocolate_milk + 5 Vegetable_juice >= 8\n     5 Chocolate_milk + 7 Vegetable_juice >= 12"}
{"input": "A construction company makes <var>bulldozers</var> and <var>forklifts</var>. Each <var>bulldozer</var> takes <param>3</param> hours on the assembly line and <param>2</param> hours of QC time. Each <var>forklift</var> takes <param>2</param> hours on the assembly line and <param>1.5</param> hours of QC time. There are <limit>600</limit> hours of assembly line time <const_dir>available</const_dir> and <limit>400</limit> hours of QC time <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>bulldozer</var> is $<param>7000</param> and the <obj_name>profit</obj_name> per <var>forklift</var> is $<param>6000</param>, how many of each should the construction company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 6000 forklift + 7000 bulldozer\nst: 3 bulldozer + 2 forklift <= 600\n     1.5 forklift <= 400"}
{"input": "Bob is a potato farmer and he has to transport his potatoes using <var>trucks</var> and <var>vans</var>. Each <var>truck</var> can take <param>150</param> <obj_name>potatoes</obj_name> and each <var>van</var> can take <param>80</param> <obj_name>potatoes</obj_name>. The cost of running each <var>truck</var> is $<param>20</param> per trip and the cost of running each <var>van</var> is $<param>12</param> per trip. Bob wants to spend <const_dir>at most</const_dir> $<limit>250</limit> on transporting his potatoes. Due to traffic laws, the number of <var>trucks</var> must be <const_dir>less than</const_dir> the number of <var>vans</var>. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of potatoes</obj_name> that can be transported.", "output": "max: 150 truck + 80 van\nst: 20 truck + 12 van <= 250\n     trucks <= vans"}
{"input": "Leeside Designs sells <var>office</var> and <var>dining chairs</var>. An <var>office chair</var> costs the company $<param>200</param> and a <var>dining chair</var> costs the company $<param>250</param>. The <obj_name>profit</obj_name> per <var>office chair</var> sold is $<param>120</param> and the <obj_name>profit</obj_name> per <var>dining chair</var> sold is $<param>180</param>. The company does <const_dir>not want to invest more than</const_dir> $<limit>20000</limit> on chairs and estimates a monthly demand of <const_dir>at most</const_dir> <limit>130</limit> total chairs. How many of each chair should the company stock in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 180 dining_chair + 120 office_chair\nst: 200 office_chair + 250 dining_chair <= 20000\n     dining_chair + office_chair <= 130"}
{"input": "Eric is a world-famous wood artist. He manufactures two types of decors made of oak. The first product, a <var>display shelf</var>, requires <param>25</param> minutes each for carving and <param>20</param> minutes each for polishing. The second decor is a <var>plant stand</var> and it requires <param>20</param> minutes each for carving and <param>10</param> minutes each for polishing. There are <limit>350</limit> minutes <const_dir>available</const_dir> for carving and <limit>600</limit> for polishing. The <obj_name>profit</obj_name> is $<param>55</param> each for the <var>display shelf</var> and $<param>45</param> for each <var>plant stand</var>. How many decors of each type should the artist create in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 45 plant_stand + 55 display_shelf\nst: 25 display_shelf + 20 plant_stand <= 350\n     20 display_shelf + 10 plant_stand <= 600"}
{"input": "A candy store hand makes gummy bears. Each packet of <var>fruit gummy bears</var> takes <param>10</param> minutes to make and each packet of <var>sour gummy bears</var> takes <param>15</param> minutes to make. The store has <const_dir>available</const_dir> <limit>2000</limit> minutes to make the packets. In addition, they can make <const_dir>at most</const_dir> <limit>120</limit> <var>fruit gummy bears</var> packets and <limit>70</limit> <var>sour gummy bears</var> packets. If the <obj_name>profit</obj_name> per packet of <var>fruit gummy bears</var> is $<param>1</param> and the <obj_name>profit</obj_name> per packet of <var>sour gummy bears</var> is $<param>1.25</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1 fruit_gummy_bears + 1.25 sour_gummy_bears\nst: 10 fruit_gummy_bears + 15 sour_gummy_bears <= 2000\n     fruit_gummy_bears <= 120\n     sour_gummy_bears <= 70"}
{"input": "In an arcade shooter, each <var>duck shot</var> is <param>5</param> <obj_name>points</obj_name> and each <var>goose shot</var> is <param>6</param> <obj_name>points</obj_name>. You must shoot <const_dir>at least</const_dir> <limit>5</limit> <var>ducks</var> and <const_dir>at least</const_dir> <limit>3</limit> <var>geese</var> to pass the level. However, you can shoot <const_dir>at most</const_dir> <limit>12</limit> <var>ducks</var> and <const_dir>at most</const_dir> <limit>7</limit> <var>geese</var>. In addition, you <const_dir>only</const_dir> have enough bullets to shoot <limit>15</limit> animals total. How many of each animal should you shoot to <obj_dir>maximize</obj_dir> your <obj_name>points</obj_name>?", "output": "max: 6 goose_shot + 5 duck_shot\nst: ducks >= 5\n     geese >= 3\n     ducks <= 12\n     geese <= 7\n     goose_shot + duck_shot <= 15"}
{"input": "A sandwich store makes <var>meatballs</var> and <var>ham sandwiches</var>. Each <var>meatball sandwich</var> requires <param>25</param> grams of meat, <param>10</param> grams of cheese, and <param>50</param> grams of sauce. Each <var>ham sandwich</var> requires <param>30</param> grams of meat, <param>25</param> grams of cheese, and <param>20</param> grams of sauce. The store has <const_dir>available</const_dir> <limit>4000</limit> grams of meat, <limit>5000</limit> grams of cheese, and <limit>5200</limit> grams of sauce. If the <obj_name>profit</obj_name> per <var>meatball sandwich</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>ham sandwich</var> is $<param>3.50</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 meatball_sandwich + 3.50 ham_sandwich\nst: 25 meatball_sandwich + 30 ham_sandwich <= 4000\n     10 meatball_sandwich + 25 ham_sandwich <= 5000\n     50 meatball_sandwich + 20 ham_sandwich <= 5200"}
{"input": "Beta Audio makes two types of speakers: <var>regular speakers</var> and <var>portable speakers</var>. Two different teams make each type of speaker. Team A can make <const_dir>at most</const_dir> <limit>120</limit> <var>regular speakers</var> per day and Team B can make <const_dir>at most</const_dir> <limit>200</limit> <var>portable speakers</var> per day. Both teams require the use of a shared testing machine, and this machine can be used to make a <const_dir>maximum</const_dir> of <limit>300</limit> total speakers per day. The <obj_name>profit</obj_name> per <var>regular speaker</var> is $<param>40</param> and the <obj_name>profit</obj_name> per <var>portable speaker</var> is $<param>60</param>. How many of each speaker should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 40 regular_speaker + 60 portable_speaker\nst: regular_speaker + portable_speaker <= 300\n     portable_speakers <= 200\n     regular_speakers <= 120"}
{"input": "Eta Auto makes two versions of the same car, a <var>hybrid model</var> and an <var>electric model</var>. They make y1 <var>hybrid models</var> per day and y2 <var>electric models</var> per day. The <obj_name>profit</obj_name> per <var>hybrid model</var> is $<param>4500</param> and the <obj_name>profit</obj_name> per <var>electric model</var> is $<param>5500</param> (y1 and y2 are unknown values both greater than or equal to 0). The daily demand for these cars is limited to <const_dir>at most</const_dir> <limit>9</limit> <var>hybrid models</var> and <limit>5</limit> <var>electric models</var>. In addition, the manufacturer can make a <const_dir>maximum</const_dir> of <limit>10</limit> total cars a day. How many cars of each model should the manufacturer make in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 5500 electric_model + 4500 hybrid_model\nst: electric_model + hybrid_model <= 10\n     hybrid_models <= 9\n     electric_models <= 5"}
{"input": "Modern Bicycle sells two models of a bike: a <var>folding bike</var> and a <var>touring bike</var>. The <var>folding bike</var> costs $<param>550</param> and yields a <obj_name>profit</obj_name> of $<param>200</param>. The <var>touring bike</var> costs $<param>700</param> and yields a <obj_name>profit</obj_name> of $<param>350</param>. The bike shop owner knows that the monthly demand will be <const_dir>at most</const_dir> <limit>100</limit> bikes. He also wants to make sure that there is <const_dir>at most</const_dir> $<limit>30000</limit> worth of bikes in stock. How many bikes of each type should be stocked in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 folding_bike + 350 touring_bike\nst: folding_bike + touring_bike <= 100\n     550 folding_bike + 700 touring_bike <= 30000"}
{"input": "A milk company makes <var>ice cream</var> and <var>cheese</var>. Two different teams produce <var>ice cream</var> and <var>cheese</var>. The <var>ice cream</var> team has a <const_dir>maximum</const_dir> daily production of <limit>50</limit> units of <var>ice cream</var> while the <var>cheese</var> team has a <const_dir>maximum</const_dir> daily production of <limit>80</limit> units of <var>cheese</var>. However, both items require time on a shared processing machine and this machine can process <const_dir>at most</const_dir> <limit>100</limit> units of total units of items per day. If the <obj_name>profit</obj_name> per unit of <var>ice cream</var> is $<param>2.5</param> and the <obj_name>profit</obj_name> per unit of <var>cheese</var> is $<param>4</param>, how many units of each should the company make in order to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 2.5 ice_cream + 4 cheese\nst: ice_cream <= 50\n     cheese <= 80\n     ice_cream + cheese <= 100"}
{"input": "A construction worker mixes two different concrete mixes. One unit of <var>mix A</var> contains <param>5</param> unit of cement, <param>2</param> units of sand, and <param>1</param> unit of gravel. One unit of <var>mix B</var> contains <param>6</param> units of cement, <param>1</param> unit of sand, and <param>2</param> units of gravel. The new mixture must contain <const_dir>at least</const_dir> <limit>70</limit> units of cement, <limit>20</limit> units of sand, and <limit>15</limit> units of gravel. If the <obj_name>cost</obj_name> per unit of <var>mix A</var> is $<param>1</param> and the <obj_name>cost</obj_name> per unit of <var>mix B</var> is $<param>1.25</param>, how many of each should be mixed to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 1 mix_A + 1.25 mix_B\nst: 5 mix_A + 6 mix_B >= 70\n     2 mix_A + 1 mix_B >= 20\n     1 mix_A + 2 mix_B >= 15"}
{"input": "Jack needs to find <const_dir>at least</const_dir> <limit>80</limit> shrimps and <limit>50</limit> conches to pay his monthly rent for his beach house. There are two beaches that Jack frequents: <var>Silver Beach</var> and <var>Lucent Beach</var>. Each <obj_name>day</obj_name> at <var>Silver beach</var>, Jack finds <param>7</param> shrimps and <param>3</param> conches. Each <obj_name>day</obj_name> at <var>Lucent Beach</var>, Jack finds <param>4</param> shrimps and <param>6</param> conches. Formulate an LP to help Jack meet his requirements while spending a <obj_dir>minimal</obj_dir> <obj_name>amount of time</obj_name>.", "output": "min: \nst: 7 Silver_beach + 4 Lucent_Beach >= 80\n     3 Silver_beach + 6 Lucent_Beach >= 50"}
{"input": "A pet store feeds their dogs by making a mixture from two bags. <var>Bag A</var> contains <param>3</param> units of protein and <param>4</param> units of calcium per bag. <var>Bag B</var> contains <param>4</param> units of protein and <param>2</param> units of calcium per bag. The mixture must contain <const_dir>at least</const_dir> <limit>30</limit> units of protein and <limit>35</limit> units of calcium. <var>Bag A</var> <obj_name>costs</obj_name> $<param>3.50</param> per bag and <var>Bag B</var> <obj_name>costs</obj_name> $<param>2.50</param> per bag. Formulate an LP to <obj_dir>minimize</obj_dir> the <obj_name>cost</obj_name> for the mixture.", "output": "min: 3.50 Bag_A + 2.50 Bag_B\nst: 3 Bag_A + 4 Bag_B >= 30\n     4 Bag_A + 2 Bag_B >= 35"}
{"input": "A seafood factory packages <var>fish meat</var> and <var>shrimp meat</var>. All packages must pass through a weight checking machine and a packaging inspection machine. In a week, each machine is available for <const_dir>at most</const_dir> <limit>1200</limit> minutes. A package of <var>fish meat</var> requires <param>3</param> minutes in the weight checking machine and <param>15</param> minutes in the packaging inspection machine. A package of <var>shrimp meat</var> requires <param>1.5</param> minutes in the weight checking machine and <param>7</param> minutes in the packaging inspection machine. A package of <var>fish meat</var> generates a <obj_name>profit</obj_name> of $<param>7</param> while a package of <var>shrimp</var> generates a <obj_name>profit</obj_name> of $<param>3</param>. Formulate an LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 7 fish_meat + 3 shrimp\nst: 3 fish_meat + 1.5 shrimp_meat <= 1200\n     15 fish_meat + 7 shrimp_meat <= 1200"}
{"input": "A gem store makes <var>earrings</var> and <var>watches</var> using gems, each requiring the use of a heating machine and a polishing machine. On any day, the heating machine is available for <const_dir>at the most</const_dir> <limit>14</limit> hours and the polishing machine for <const_dir>at the most</const_dir> <limit>10</limit> hours. It takes <param>2</param> hours on the heating machine and <param>1.5</param> hours on the polishing machine to make a pair of <var>earrings</var>. It takes <param>3.5</param> hours on the heating machine and <param>2</param> hours on the polishing machine to make a <var>watch</var>. The <obj_name>profit</obj_name> from the sale of a pair of <var>earrings</var> is $<param>45</param> and the <obj_name>profit</obj_name> from the sale of a <var>watch</var> is $<param>70</param>. Assuming the store can sell all the <var>earrings</var> and <var>watches</var> it makes, how should the store owner schedule his daily production in order to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 45 earrings + 70 watch\nst: 2 earrings + 3.5 watch <= 14\n     2 watch + 1.5 earrings <= 10"}
{"input": "Steven owns two rice processing machines. <var>Machine X</var> <obj_name>costs</obj_name> $<param>400</param> to operate per day and can produce and deliver <param>3</param> bags of basmati rice, <param>5</param> bags of brown rice, and <param>7</param> bags of jasmine rice. <var>Machine Y</var> <obj_name>costs</obj_name> $<param>500</param> to operate per day and can produce and deliver <param>4</param> bags of basmati rice, <param>8</param> bags of brown rice, and <param>3</param> bag of jasmine rice. Steven recently obtained a contract to <const_dir>provide</const_dir> a restaurant with <limit>20</limit> bags of basmati rice, <limit>30</limit> bags of brown rice, and <limit>25</limit> bags of jasmine rice. How can we <obj_dir>minimize</obj_dir> Steven's <obj_name>total costs</obj_name>?", "output": "min: 400 Machine_X + 500 Machine_Y\nst: 3 Machine_X + 4 Machine_Y >= 20\n     5 Machine_X + 8 Machine_Y >= 30\n     7 Machine_X + 3 Machine_Y >= 25"}
{"input": "A sign company makes <var>neon</var> and <var>metal signs</var>. Each <var>neon sign</var> takes <param>3</param> hours for crafting and <param>2</param> hours for installation. Each <var>metal sign</var> takes <param>2</param> hours for crafting and <param>1.5</param> hours for installation. The company has <const_dir>available</const_dir> <limit>950</limit> hours for crafting and <limit>400</limit> hours for installation. If the <obj_name>profit</obj_name> per <var>neon sign</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>metal sign</var> is $<param>100</param>, how many of each should the company craft and install to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 neon_sign + 100 metal_sign\nst: 3 neon_sign + 2 metal_sign <= 950\n     2 neon_sign + 1.5 metal_sign <= 400"}
{"input": "An underground factory <const_dir>has</const_dir> <limit>120</limit> sq. feet of space. It makes low-quality <var>headsets</var> and <var>keyboards</var>. <var>Headsets</var> require <param>2.5</param> hours of labor and cost $<param>10</param> for each sq. foot of space allocated for <var>headset</var> production (cost of electricity and equipment). <var>Keyboards</var> require <param>3.5</param> hours of labor and cost $<param>12</param> for each sq. foot of space allocated for <var>keyboard</var> production. <var>Headsets</var> produce a <obj_name>net revenue</obj_name> of $<param>45</param> per sq. foot while <var>keyboards</var> produce a <obj_name>net revenue</obj_name> of $<param>80</param> per sq. foot. The factory wants to spend <const_dir>at most</const_dir> $<limit>5500</limit> and <limit>2500</limit> hours of labor. What is the optimal factory layout to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 45 Headsets + 80 keyboards\nst: Headsets + keyboards <= 120\n     2.5 Headsets + 3.5 Keyboards <= 2500\n     10 Headsets + 12 Keyboards <= 5500"}
{"input": "Rho Burrito sell two burritos: a <var>Mexican burrito</var> and a <var>Korean burrito</var>. The burritos are made using cheese, beans, and onions. A <var>Mexican burrito</var> requires <param>7</param> units of cheese and <param>8</param> units of beans. A <var>Korean burrito</var> requires <param>5</param> units of cheese and <param>5</param> units of onions. There are <limit>70</limit> units of cheese <const_dir>available</const_dir>, <limit>60</limit> units of beans <const_dir>available</const_dir>, and <limit>45</limit> units of onions <const_dir>available</const_dir>. The <obj_name>profit</obj_name> per <var>Mexican burrito</var> is $<param>7</param> and the <obj_name>profit</obj_name> per <var>Korean burrito</var> is $<param>4.5</param>. Formulate as an LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 7 Mexican_burrito + 4.5 Korean_burrito\nst: 7 Mexican_burrito + 5 Korean_burrito <= 70\n     8 Mexican_burrito <= 60\n     5 Korean_burrito <= 45"}
{"input": "Sid has to meet his daily <const_dir>requirements</const_dir> of <limit>2</limit> servings of meat, <limit>1</limit> serving of dairy, <limit>4</limit> servings of vegetables, and <limit>3</limit> servings of grains. He can eat a <var>hamburger</var>, which has <param>1</param> serving of meat, <param>0.5</param> servings of dairy, <param>1</param> serving of vegetables and <param>1</param> serving of grains or he can eat a plate of <var>pasta</var>, which has <param>0</param> servings of meat, <param>1</param> serving of dairy, <param>1</param> serving of vegetables and <param>2</param> servings of grains. If a <var>hamburger</var> <obj_name>costs</obj_name> $<param>3</param> and a plate of <var>pasta</var> <obj_name>costs</obj_name> $<param>4</param>, how many of each item should he buy to meet his requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 3 hamburger + 4 pasta\nst: 1 hamburger + 0 pasta >= 2\n     0.5 hamburger + 1 pasta >= 1\n     1 hamburger + 1 pasta >= 4\n     1 hamburger + 2 pasta >= 3"}
{"input": "A company makes <var>small</var> and <var>large chessboards</var>. Each <var>small chessboard</var> takes <param>5</param> minutes of cutting and <param>10</param> minutes of assembly. Each <var>large chessboard</var> takes <param>10</param> minutes of cutting and <param>20</param> minutes of assembly. The company has <const_dir>available</const_dir> <limit>400</limit> minutes for cutting and <limit>700</limit> minutes for assembly. If the <obj_name>profit</obj_name> per <var>small chessboard</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>large chessboard</var> is $<param>8</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 large_chessboard + 4 small_chessboard\nst: 5 small_chessboard + 10 large_chessboard <= 400\n     10 small_chessboard + 20 large_chessboard <= 700"}
{"input": "An ice cream truck sells <var>strawberry</var> and <var>mint ice cream cakes</var>. The <obj_name>profit</obj_name> per <var>strawberry ice cream cake</var> is $<param>2.5</param> and the <obj_name>profit</obj_name> per <var>mint ice cream cake</var> is $<param>4</param>. The ice cream truck must make <const_dir>at least</const_dir> <limit>10</limit> cakes of <var>strawberry ice cream</var> but <const_dir>cannot make more than</const_dir> <limit>20</limit> cakes. It must also make <const_dir>at least</const_dir> <limit>20</limit> <var>mint ice cream cakes</var> but <const_dir>can not make more than</const_dir> <limit>40</limit> cakes. In total, the ice cream truck can make <const_dir>at most</const_dir> <limit>50</limit> total cakes. How many cakes of each flavor should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2.5 strawberry_ice_cream_cake + 4 mint_ice_cream_cake\nst: strawberry_ice_cream >= 10\n     strawberry_ice_cream <= 20\n     mint_ice_cream_cakes <= 40\n     mint_ice_cream_cakes >= 20\n     strawberry_ice_cream_cake + mint_ice_cream_cake <= 50"}
{"input": "Fancy Clothing Co makes <var>red shirts</var> and <var>green shirts</var>. A <var>red shirt</var> requires <param>2</param> unit of dye, <param>5</param> units of water, and <param>20</param> worker minutes. A <var>green shirt</var> requires <param>5</param> units of dye, <param>8</param> units of water, and <param>25</param> worker minutes. The company only has <limit>1500</limit> units of dye, <limit>3000</limit> units of water, and <limit>8000</limit> worker minutes <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>red shirt</var> is $<param>20</param> and the <obj_name>profit</obj_name> per <var>green shirt</var> is $<param>35</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 red_shirt + 35 green_shirt\nst: 2 red_shirt + 5 green_shirt <= 1500\n     5 red_shirt + 8 green_shirt <= 3000\n     20 red_shirt + 25 green_shirt <= 8000"}
{"input": "Bob Fashion produces two types of lipsticks: <var>cream lipsticks</var> and <var>matte lipsticks</var>. The <obj_name>profit</obj_name> per <var>cream lipstick</var> is $<param>70</param> and the <obj_name>profit</obj_name> per <var>matte lipstick</var> is $<param>100</param>. It takes <param>3.5</param> hours to produce the raw materials for one <var>cream lipstick</var>, <param>5</param> hours to mix and <param>2</param> hours in packing. It takes <param>5</param> hours to produce the raw materials for one <var>matte lipstick</var>, <param>3</param> hours to mix and <param>1.5</param> hours in packing. Per month, <limit>300</limit> hours are <const_dir>available</const_dir> for preparing the raw materials, <limit>400</limit> hours for mixing and <limit>200</limit> hours for packing the lipsticks.  How many of each type of lipstick should be produced in order to <obj_dir>maximize</obj_dir> the total monthly <obj_name>profit</obj_name>?", "output": "max: 70 cream_lipstick + 100 matte_lipstick\nst: 3.5 cream_lipstick + 5 matte_lipstick <= 300\n     5 cream_lipstick + 3 matte_lipstick <= 400\n     2 cream_lipstick + 1.5 matte_lipstick <= 200"}
{"input": "A city has $<limit>200000</limit> <const_dir>available</const_dir> to invest in a 9-month commitment.  They have decided to invest in both the <var>film</var> and <var>healthcare industries</var>. After consulting an advisor, the city has decided to invest a <const_dir>minimum</const_dir> of <limit>25%</limit> in the <var>film industry</var> and <const_dir>at most</const_dir> <limit>60%</limit> in the <var>healthcare industry</var>. The money placed in the <var>film industry</var> yields an <param>8%</param> <obj_name>return</obj_name> and the money placed in the <var>healthcare industry</var> yields a <param>10%</param> <obj_name>return</obj_name>. How much should the city invest in each industry to <obj_dir>maximize</obj_dir> its <obj_name>return</obj_name> on investment over this period of time?", "output": "max: 8% film_industry + 10% healthcare_industry\nst: film_industry + healthcare_industry <= 200000\n     film_industry >= 25%\n     healthcare_industry <= 60%"}
{"input": "John's trainer has given him a list of available food options as well as the macronutrient content and cost per serving of each food. A certain amount of macronutrients is required each day. For example, here is the data corresponding to <var>rice</var> and <var>beef</var> and the three macronutrients (proteins, carbs, and fat). Each serving of <var>rice</var> contains <param>2</param> units of protein, <param>80</param> units of carbs, and <param>1</param> unit of fat. Each serving of <var>beef</var> contains <param>20</param> units of protein, <param>200</param> units of carbs, and <param>16</param> units of fat. A serving of <var>rice</var> <obj_name>costs</obj_name> $<param>5</param> and a serving of <var>beef</var> <obj_name>costs</obj_name> $<param>30</param>. John's trainer requires him to get <const_dir>at least</const_dir> <limit>50</limit> units of protein, <limit>1000</limit> units of carbs, and <limit>40</limit> units of fat per day. Find out how many servings of each food to consume per day to meet the requirements at <obj_dir>minimal</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 30 beef + 5 rice\nst: 2 rice + 20 beef >= 50\n     80 rice + 200 beef >= 1000\n     1 rice + 16 beef >= 40"}
{"input": "XYZ Automobile sells <var>SUV cars</var> and <var>minivans</var>. Two different factories produce these cars. The <var>SUV  car</var> factory can make <const_dir>at most</const_dir> <limit>5</limit> <var>SUV cars</var> per day while the <var>minivan car</var> factory can make <const_dir>at most</const_dir> <limit>3</limit> <var>minivans</var> per day. The company outsources the finishing touches to a third party, which can process <const_dir>at most</const_dir> <limit>5</limit> vehicle of either type per day. If the <obj_name>profit</obj_name> per <var>SUV car</var> is $<param>7500</param> and the <obj_name>profit</obj_name> per <var>minivan</var> is $<param>4000</param>, how many of each vehicle should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7500 SUV_car + 4000 minivan\nst: SUV_cars <= 5\n     minivans <= 3\n     SUV_car + minivan <= 5"}
{"input": "A food truck makes two different sandwiches: an <var>egg sandwich</var> and a <var>ham sandwich</var>. Both need eggs and ham. Each <var>egg sandwich</var> requires <param>5</param> eggs and <param>2</param> slices of ham. Each <var>ham sandwich</var> requires <param>1</param> egg and <param>4</param> slices of ham. The truck has <const_dir>a total of</const_dir> <limit>50</limit> eggs and <limit>60</limit> slices of ham. It makes a <obj_name>profit</obj_name> of $<param>3.5</param> per <var>egg sandwich</var> and a <obj_name>profit</obj_name> of $<param>5</param> per <var>ham sandwich</var>. How many of each sandwich should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.5 egg_sandwich + 5 ham_sandwich\nst: 5 egg_sandwich + 1 ham_sandwich >= 50\n     2 egg_sandwich + 4 ham_sandwich >= 60"}
{"input": "A cafe makes <var>lattes</var> and <var>cappuccinos</var>. Both of which require milk and coffee. Each <var>latte</var> needs <param>4</param> units of milk and <param>1</param> unit of coffee. Each <var>cappuccino</var> requires <param>2</param> units of milk and <param>2</param> units of coffee. The cafe has <const_dir>a total of</const_dir> <limit>80</limit> units of milk and <limit>50</limit> units of coffee <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>latte</var> is $<param>2</param> and the <obj_name>profit</obj_name> per <var>cappuccino</var> is $<param>1</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 latte + 1 cappuccino\nst: 2 cappuccino + 4 latte >= 80\n     1 latte + 2 cappuccino <= 50"}
{"input": "A doctor prescribed two supplements to a patient. <var>Supplement A</var> contains <param>3</param> units of calcium, <param>2</param> units of vitamin A, and <param>3</param> units of vitamin B per supplement. <var>Supplement B</var> contains <param>4</param> units of calcium, <param>1</param> unit of vitamin A, and <param>2</param> units of vitamin B per supplement. <var>Supplement A</var> <obj_name>costs</obj_name> $<param>3.50</param> per supplement while <var>supplement B</var> <obj_name>costs</obj_name> $<param>3.80</param> per supplement. The patient must get <const_dir>at least</const_dir> <limit>25</limit> units of calcium, <limit>20</limit> units of vitamin A, and <limit>18</limit> units of vitamin B. How many of each supplement should he buy to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 3.80 supplement_B + 3.50 Supplement_A\nst: 3 Supplement_A + 4 Supplement_B >= 25\n     2 Supplement_A + 1 Supplement_B >= 20\n     3 Supplement_A + 2 Supplement_B >= 18"}
{"input": "A steel company <const_dir>produces</const_dir> <limit>120</limit> tons of iron ore and <limit>70</limit> tons of zinc ore each month. These can be treated in different ways to produce three types of vessels: <var>general purpose vessels</var>, <var>pharmaceutical vessels</var> or <var>pressure vessels</var>. To produce 1 set of <var>general purpose vessels</var> requires <param>3.5</param> tons of iron ore and <param>2</param> tons of zinc ore. To produce 1 set of <var>pharmaceutical vessels</var> requires <param>4</param> tons of iron ore and <param>5</param> tons of zinc ore. Finally, to produce 1 set of <var>pressure vessels</var> requires <param>2</param> tons of iron ore and <param>3.5</param> tons of zinc ore. The <obj_name>profit</obj_name> per set from selling the vessels are $<param>2000</param>, $<param>3000</param> and $<param>4500</param> for the <var>general purpose</var>, <var>pharmaceutical</var>, and <var>pressure vessels</var> respectively. How many sets of each type of vessel should be produced to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2000 general_purpose + 3000 pharmaceutical + 4500 pressure_vessels\nst: 3.5 general_purpose_vessels + 4 pharmaceutical_vessels + 2 pressure_vessels <= 120\n     2 general_purpose_vessels + 5 pharmaceutical_vessels + 3.5 pressure_vessels <= 70"}
{"input": "A fast food restaurant makes <var>cheeseburgers</var> and <var>fries</var>. They make x1 <var>cheeseburgers</var> per day at a <obj_name>profit</obj_name> of $<param>1.50</param> per <var>cheeseburger</var> and x2 <var>fries</var> per day at a <obj_name>profit</obj_name> of $<param>1</param> per <var>fries</var> (x1 and x2 must be greater than or equal to 0). There is a daily demand for <const_dir>at most</const_dir> <limit>110</limit> <var>cheeseburgers</var> and <limit>80</limit> <var>fries</var>. The restaurant only has capacity to make a <const_dir>maximum</const_dir> of <limit>150</limit> items of either type. How many of each should they produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1.50 cheeseburgers + 1 cheeseburger\nst: cheeseburgers + cheeseburger <= 150\n     cheeseburgers <= 110\n     fries <= 80"}
{"input": "A bubble tea shop makes <var>taro</var> and <var>mango bubble teas</var>. Three ingredients are needed to make the bubble teas: milk tea, taro, and mango. One <var>taro bubble tea</var> requires <param>3</param> units of taro and <param>4</param> units of milk. One <var>mango bubble tea</var> requires <param>3</param> units of mango and <param>5</param> units of milk. The shop has <const_dir>available</const_dir> <limit>60</limit> units of taro, <limit>60</limit> units of mango, and <limit>140</limit> units of milk. If the <obj_name>profit</obj_name> per <var>taro bubble tea</var> is $<param>4</param> and the <obj_name>profit</obj_name> per <var>mango bubble tea</var> is $<param>6</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 6 mango_bubble_tea + 4 taro_bubble_tea\nst: 3 taro_bubble_tea <= 60\n     3 mango_bubble_tea <= 60\n     4 taro_bubble_tea + 5 mango_bubble_tea <= 140"}
{"input": "A sandwich store makes <var>subs</var> and <var>flatbreads</var>. Each <var>sub</var> takes <param>3</param> minutes of preparation and <param>2</param> minutes of toasting. Each <var>flatbread</var> takes <param>4</param> minutes of preparation and <param>1</param> minute of toasting. The store has <const_dir>available</const_dir> <limit>2000</limit> minutes for preparation and <limit>2200</limit> minutes for toasting. If the <obj_name>profit</obj_name> per <var>sub</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>flatbread</var> is $<param>2.50</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 sub + 2.50 flatbread\nst: 3 sub + 4 flatbread <= 2000\n     1 flatbread + 2 sub <= 2200"}
{"input": "Calcium and magnesium are found in <var>pork meat</var> and <var>shrimp meat</var>. A serving of <var>pork meat</var> <obj_name>costs</obj_name> $<param>6.5</param> and contains <param>3</param> units of calcium and <param>5</param> units of magnesium. A serving of <var>shrimp meat</var> <obj_name>costs</obj_name> $<param>9</param> and contains <param>5</param> units of calcium and <param>9</param> units of magnesium. If <const_dir>at least</const_dir> <limit>25</limit> units of calcium and <limit>35</limit> units of magnesium must be consumed daily, formulate an LP to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 9 shrimp_meat + 6.5 pork_meat\nst: 3 pork_meat + 5 shrimp_meat >= 25\n     5 pork_meat + 9 shrimp_meat >= 35"}
{"input": "Tom Designs manufactures three coats: long, short, and mini. These coats are produced in two different factories: a <var>north one</var> and a <var>south one</var>. Running the <var>north factory</var> for an hour <obj_name>costs</obj_name> $<param>200</param> and produces <param>20</param> long coats, <param>15</param> short coats, and <param>10</param> mini coats. Running the <var>south factory</var> for an hour <obj_name>costs</obj_name> $<param>400</param> and yields <param>30</param> long coats, <param>25</param> short coats, and <param>30</param> mini coats. To meet customer demands, a <const_dir>minimum</const_dir> of <limit>75</limit> long coats, <limit>30</limit> short coats, and <limit>40</limit> mini coats must be produced daily. Determine a daily production plan that <obj_dir>minimizes</obj_dir> the <obj_name>cost</obj_name> of meeting the company\u2019s daily demands.", "output": "min: 200 north_factory + 400 south_factory\nst: 20 north_factory + 30 south_factory >= 75\n     15 north_factory + 25 south_factory >= 30\n     10 north_factory + 30 south_factory >= 40"}
{"input": "A bike factory builds two types of bikes: <var>road bikes</var> and <var>mountain bikes</var>. One <var>road bike</var> requires <param>3</param> hours of tooling on the grinder and then <param>2</param> hours of tooling on the polisher. One <var>mountain bike</var> requires <param>5</param> hours of tooling on the grinder and then <param>2.5</param> hours of tooling on the polisher. The factory makes a <obj_name>profit</obj_name> of $<param>70</param> per <var>road bike</var> and $<param>100</param> per <var>mountain bike</var>. Each machine, the grinder and polisher, can only be used for a <const_dir>maximum</const_dir> of <limit>12</limit> hours per day. How many units of each, <var>road bikes</var> and <var>mountain bikes</var>, should the factory produce to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 70 road_bike + 100 mountain_bike\nst: 3 road_bike + 5 mountain_bike <= 12\n     2 road_bike + 2.5 mountain_bike <= 12"}
{"input": "A company produces <var>action figures</var> and <var>toy cars</var>. Each <var>action figure</var> takes <param>5</param> minutes of production time and $<param>2</param> worth of plastic. Each <var>toy car</var> takes <param>8</param> minutes of production time and $<param>2.50</param> worth of plastic. The company has <const_dir>available</const_dir> <limit>1000</limit> minutes for production and $<limit>1000</limit> worth of plastic. If the company <obj_name>earns</obj_name> $<param>2</param> per <var>action figure</var> and $<param>3</param> per <var>toy car</var>, how many of each should they produce to <obj_dir>maximize</obj_dir> their <obj_name>earnings</obj_name>?", "output": "max: 2 action_figure + 3 toy_car\nst: 5 action_figure + 8 toy_car <= 1000\n     2 action_figure + 2.50 toy_car <= 1000"}
{"input": "A fast-food restaurant sells <var>burgers</var> and <var>sandwiches</var>. To stay in business, they must sell <const_dir>at least</const_dir> <limit>100</limit> <var>burgers</var> and <const_dir>at least</const_dir> <limit>80</limit> <var>sandwiches</var>. However, they only have enough supplies to make <const_dir>at most</const_dir> <limit>120</limit> <var>burgers</var> and <const_dir>at most</const_dir> <limit>100</limit> <var>sandwiches</var>. Given their tight schedule, they can only cook <const_dir>at most</const_dir> <limit>200</limit> items total. The <obj_name>profit</obj_name> per <var>burger</var> is $<param>4.5</param> and the <obj_name>profit</obj_name> per <var>sandwich</var> is $<param>5</param>. How many of each item should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4.5 burger + 5 sandwich\nst: burgers >= 100\n     sandwiches >= 80\n     burgers <= 120\n     sandwiches <= 100\n     burger + sandwich <= 200"}
{"input": "Amy owns a bakery and sells two types of bread: <var>croissant</var> and <var>ficelle</var>. Each <var>croissant</var> requires <param>12</param> minutes of mixing and <param>2</param> tablespoons of vanilla extract. Each <var>ficelle</var> requires <param>17</param> minutes of mixing and <param>1</param> tablespoon of vanilla extract. There are <limit>350</limit> minutes of mixing time <const_dir>available</const_dir> and <limit>45</limit> tablespoons of vanilla extract <const_dir>available</const_dir>. Each <var>croissant</var> can be <obj_name>sold</obj_name> for $<param>4.5</param> and each <var>ficelle</var> can be <obj_name>sold</obj_name> for $<param>3.5</param>. Formulate an LP to <obj_dir>maximize</obj_dir> Amy's <obj_name>revenue</obj_name>, then graphically solve the LP. (A fractional number of bread is okay)", "output": "max: 4.5 croissant + 3.5 ficelle\nst: 12 croissant + 17 ficelle <= 350\n     2 croissant + 1 ficelle <= 45"}
{"input": "A cyclist only eats <var>chicken</var> and <var>potatoes</var>. He wants to make sure he gets a <const_dir>minimum</const_dir> of <limit>80</limit> grams of protein, <limit>50</limit> grams of fat, and <limit>100</limit> grams of carbs. <var>Chicken</var> contains <param>20</param> grams of protein, <param>4</param> grams of fat, and <param>4</param> grams of carbs. <var>Potatoes</var> contain <param>2</param> grams of protein, <param>3</param> grams of fat, and <param>7</param> grams of carbs. If the <obj_name>cost</obj_name> per <var>chicken</var> is $<param>6</param> and the <obj_name>cost</obj_name> per <var>potato</var> is $<param>2</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> his <obj_name>costs</obj_name>?", "output": "min: 2 potato + 6 chicken\nst: 20 Chicken + 2 Potatoes >= 80\n     4 Chicken + 3 Potatoes >= 50\n     4 Chicken + 7 Potatoes >= 100"}
{"input": "A company sells <var>tea</var> and <var>coffee</var> in small tins. Each <var>tea tin</var> takes <param>4</param> minutes to fill and <param>1</param> minute to label. Each <var>coffee tin</var> takes <param>3</param> minutes to fill and <param>2</param> minutes to label. The company has <const_dir>available</const_dir> <limit>500</limit> minutes for filling and <limit>600</limit> minutes for labeling. If the <obj_name>profit</obj_name> per <var>tea tin</var> is $<param>11</param> and the <obj_name>profit</obj_name> per <var>coffee tin</var> is $<param>13</param>, how many of each should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 11 tea_tin + 13 coffee_tin\nst: 3 coffee_tin + 4 tea_tin <= 500\n     2 coffee_tin + 1 tea_tin <= 600"}
{"input": "John is an artisan and he makes two types of terracotta pots: an <var>oval pot</var> and a <var>square pot</var>. Each <var>oval pot</var> requires <param>40</param> minutes of shaping time and <param>50</param> minutes of baking time. Each <var>square pot</var> requires <param>35</param> minutes of shaping time and <param>80</param> minutes of baking time. Per week, there are <limit>2500</limit> minutes <const_dir>available</const_dir> for shaping and <limit>3800</limit> minutes <const_dir>available</const_dir> for baking. The <obj_name>profit</obj_name> per <var>oval pot</var> is $<param>4.5</param> and the <obj_name>profit</obj_name> per <var>square pot</var> is $<param>8</param>. How many pots of each type should he make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 square_pot + 4.5 oval_pot\nst: 40 oval_pot + 35 square_pot <= 2500\n     50 oval_pot + 80 square_pot <= 3800"}
{"input": "Samuel <const_dir>has</const_dir> <limit>90</limit> acres of land to grow <var>wheat</var> and <var>corn</var>. Each acre of <var>wheat</var> requires $<param>10</param> in maintenance and <param>4</param> hours of care. Each acre of <var>corn</var> requires $<param>20</param> in maintenance and <param>3</param> hours of care. He has <const_dir>at most</const_dir> $<limit>1400</limit> to spend on maintenance and <limit>90</limit> hours of time <const_dir>available</const_dir> for care keeping. If the <obj_name>profit</obj_name> per acre of <var>wheat</var> is $<param>50</param> and the <obj_name>profit</obj_name> per acre of <var>corn</var> is $<param>90</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 50 wheat + 90 corn\nst: wheat + corn <= 90\n     10 wheat + 20 corn <= 1400\n     3 corn + 4 wheat <= 90"}
{"input": "Mary follows a new daily diet for which she needs to have <const_dir>at least</const_dir> <limit>100</limit> grams of vitamin A, <limit>500</limit> grams of vitamin C, and <limit>3000</limit> grams of proteins. In order to do so, her dietician recommended her to drink a <var>protein drink</var> or <var>fruit snack</var>. The <var>protein drink</var> <obj_name>costs</obj_name> $<param>4</param> per serving and contains <param>45</param> grams of vitamin A, <param>200</param> grams of vitamin C, and <param>300</param> grams of proteins. <var>Fruit snack</var> <obj_name>costs</obj_name> $<param>12</param> per serving and contains <param>400</param> grams of vitamin A, <param>600</param> unit of vitamin C, and <param>200</param> grams of proteins. How many servings of each should Mary buy to <obj_dir>minimize</obj_dir> her <obj_name>cost</obj_name>?", "output": "min: 12 Fruit_snack + 4 protein_drink\nst: 45 protein_drink + 400 Fruit_snack >= 100\n     200 protein_drink + 600 Fruit_snack >= 500\n     300 protein_drink + 200 Fruit_snack >= 3000"}
{"input": "Thunder Wood is a logging company and it cuts three specific trees: Elm, Oak, and Alder. The company has two operations. The <var>north side</var> operation <obj_name>costs</obj_name> $<param>450</param> to operate per day and produces <param>5</param> elm trees, <param>5</param> oak trees, and <param>4</param> alder trees daily. The <var>south side</var> operation <obj_name>costs</obj_name> $<param>550</param> to operate per day and produces <param>6</param> elm trees, <param>4</param> oak trees, and <param>6</param> alder trees daily. The logging company must <const_dir>provide</const_dir> a paper pulp with <limit>25</limit> elm trees, <limit>15</limit> oak trees, and <limit>30</limit> alder trees per week. How many days a week should each operation be run in order to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> while meeting the requirements?", "output": "min: 450 north_side + 550 south_side\nst: 5 north_side + 6 south_side >= 25\n     5 north_side + 4 south_side >= 15\n     4 north_side + 6 south_side >= 30"}
{"input": "A small grocery weighs and packages their bulk foods. Each container of <var>nuts</var> takes <param>10</param> minutes of weighing and <param>5</param> minutes of packaging. Each container of <var>candy</var> takes <param>5</param> minutes of weighing and <param>8</param> minutes of packaging. The grocery has <const_dir>available</const_dir> <limit>1000</limit> minutes for weighing and <limit>1500</limit> minutes for packaging. If the <obj_name>profit</obj_name> per container of <var>nuts</var> is $<param>5</param> and the <obj_name>profit</obj_name> per container of <var>candy</var> is $<param>3</param>, how many of each should the grocery prepare to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 candy + 5 nuts\nst: 10 nuts + 5 candy <= 1000\n     5 nuts + 8 candy <= 1500"}
{"input": "A small tea shop wants to sell cups of <var>green tea</var> and <var>black tea</var>. It takes <param>3</param> minutes to make a cup of <var>green tea</var> and <param>5</param> minutes to make a cup of <var>black tea</var>. The shop owner <const_dir>only</const_dir> has <limit>560</limit> minutes a week to make drinks (<var>green tea</var> and <var>black tea</var>). In addition, the owner only has enough product to make <limit>150</limit> <const_dir>total</const_dir> cups per week. She makes a <obj_name>profit</obj_name> of $<param>2</param> on each cup of <var>green tea</var> and a <obj_name>profit</obj_name> of $<param>3</param> on each cup of <var>black tea</var>. How many cups of <var>green tea</var> and <var>black tea</var> should the shop owner make each week to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>, assuming she sells all her cups?", "output": "max: 2 green_tea + 3 black_tea\nst: 3 green_tea + 5 black_tea <= 560\n     green_tea + black_tea <= 150"}
{"input": "A vacuum repair company repairs <var>home vacuums</var> and <var>shop vacuums</var>. Each <var>shop vacuum</var> requires <param>1</param> hour of disassembly and <param>2</param> hours of repair. Each <var>home vacuum</var> requires <param>0.5</param> hours of disassembly and <param>1</param> hour of repair. The company has <const_dir>available</const_dir> <limit>300</limit> hours for disassembly and <limit>400</limit> hours for repair. If the <obj_name>profit</obj_name> per <var>home vacuum</var> repaired is $<param>20</param> and the <obj_name>profit</obj_name> per <var>shop vacuum</var> repaired is $<param>35</param>, how many of each should the company repair to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 20 home_vacuum + 35 shop_vacuum\nst: 1 shop_vacuum + 0.5 home_vacuum <= 300\n     2 shop_vacuum + 1 home_vacuum <= 400"}
{"input": "An electronics company produces <var>entry-level devices</var> and <var>premium devices</var>. The company makes a $<param>300</param> <obj_name>profit</obj_name> for each <var>entry-level device</var> sold and a $<param>200</param> <obj_name>profit</obj_name> for each <var>premium device</var> sold. Note that the daily demand for <var>entry-level devices</var> is <const_dir>at most</const_dir> <limit>20</limit> and the daily demand for <var>premium devices</var> is <const_dir>at most</const_dir> <limit>15</limit>. In addition, the company can only sell <const_dir>at most</const_dir> <limit>30</limit> devices total per day. How many devices of each type should the company sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 300 entry-level_device + 200 premium_device\nst: entry-level_devices <= 20\n     premium_devices <= 15\n     entry-level_device + premium_device <= 30"}
{"input": "A chef mixes two types of seasoning to ensure the new mixture contains a <const_dir>minimum</const_dir> of <limit>5</limit> units of pepper and <limit>6</limit> units of salt. <var>Seasoning A</var> contains <param>2</param> units of pepper and <param>1</param> unit of salt per kg. <var>Seasoning B</var> contains <param>1</param> unit of pepper and <param>4</param> units of salt per kg. If it <obj_name>costs</obj_name> $<param>1.50</param> per kg of <var>seasoning A</var> and $<param>3</param> per kg of <var>seasoning B</var>, how many kg of each should the chef buy to <obj_dir>minimize</obj_dir> her <obj_name>costs</obj_name>?", "output": "min: 1.50 seasoning_A + 3 seasoning_B\nst: 2 Seasoning_A + 1 Seasoning_B >= 5\n     1 Seasoning_A + 4 Seasoning_B >= 6"}
{"input": "A pizza shop specializes in pizza and they make two types. <var>Pizza A</var> requires <param>4</param> units of mozzarella cheese and <param>5</param> units of American cheese. <var>Pizza B</var> requires <param>5</param> units of mozzarella cheese and <param>3</param> units of American cheese. The shop has <limit>600</limit> units and <limit>500</limit> units of mozzarella and American cheese <const_dir>available</const_dir>, respectively. If the <obj_name>profit</obj_name> per <var>pizza A</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>pizza B</var> is $<param>4</param>, how many of each should the shop make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 4 pizza_B + 3 pizza_A\nst: 4 Pizza_A + 5 Pizza_B <= 600\n     5 Pizza_A + 3 Pizza_B <= 500"}
{"input": "A salad shop sells two salads, <var>Caesar salad</var> and <var>Mediterranean salad</var>. Each salad uses different amounts of lettuce, sauce, and cheese. <var>Caesar salad</var> uses <param>100</param> g of lettuce, <param>10</param> g of sauce, and <param>5</param> g of cheese. <var>Mediterranean salad</var> uses <param>150</param> g of lettuce, <param>15</param> g of sauce, and <param>15</param> g of cheese. The store has <const_dir>available</const_dir> <limit>20000</limit> g of lettuce, <limit>2000</limit> g of sauce, and <limit>3000</limit> g of cheese. If the <obj_name>profit</obj_name> per <var>Caesar salad</var> is $<param>7</param> and the <obj_name>profit</obj_name> per <var>Mediterranean salad</var> is $<param>9</param>, how many of each salad should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 7 Caesar_salad + 9 Mediterranean_salad\nst: 100 Caesar_salad + 150 Mediterranean_salad <= 20000\n     10 Caesar_salad + 15 Mediterranean_salad <= 2000\n     5 Caesar_salad + 15 Mediterranean_salad <= 3000"}
{"input": "A man wants to do his weekly meal prep but wants to minimize his <obj_name>fat intake</obj_name>. He eats two meals. Each meal of <var>chicken salad</var> contains <param>20</param> units of protein, <param>20</param> units of carbs, <param>15</param> units of <obj_name>fat</obj_name>, and <param>10</param> units of fiber. Each meal of <var>beef tacos</var> contains <param>25</param> units of protein, <param>25</param> units of carbs, <param>25</param> units of <obj_name>fat</obj_name>, and <param>2</param> units of fiber. The man needs <const_dir>at least</const_dir> <limit>120</limit> units of protein and <limit>150</limit> units of carbs. However he wants to consume <const_dir>at most</const_dir> <limit>25</limit> units of fiber. How many meals of each should he produce to <obj_dir>minimize</obj_dir> his <obj_name>fat intake</obj_name>?", "output": "min: 25 beef_tacos + 15 chicken_salad\nst: 20 chicken_salad + 25 beef_tacos >= 120\n     20 chicken_salad + 25 beef_tacos >= 150\n     10 chicken_salad + 2 beef_tacos <= 25"}
{"input": "Tom's Florist sells <var>sunflowers</var> and <var>roses</var> every day. The <obj_name>profit</obj_name> per bouquet of <var>sunflowers</var> sold is $<param>7</param> and the <obj_name>profit</obj_name> per bouquet of <var>roses</var> sold is $<param>12</param>. Each bouquet of <var>sunflowers</var> needs <param>4</param> minutes of clipping and <param>3</param> minutes of packaging. Each bouquet of <var>roses</var> requires <param>5</param> minutes of clipping and <param>7</param> minutes of packaging. In total, there are <limit>1200</limit> minutes <const_dir>available</const_dir> for clipping and <limit>800</limit> minutes <const_dir>available</const_dir> for packaging. Having signed a contract with a local restaurant, <const_dir>at least</const_dir> <limit>30</limit> bouquets of <var>sunflowers</var> must be picked. There is no such limit on bouquets of <var>roses</var>. Formulate an LP to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 7 sunflowers + 12 roses\nst: 4 sunflowers + 5 roses <= 1200\n     3 sunflowers + 7 roses <= 800\n     sunflowers >= 30"}
{"input": "A dessert factory makes <var>cakes</var> and <var>pies</var>. Each <var>cake</var> requires <param>4</param> units of sugar and <param>5</param> units of flour. Each <var>pie</var> requires <param>5</param> units of sugar and <param>3</param> units of flour. The factory has <limit>1000</limit> units of sugar and <limit>1200</limit> units of flour agent <const_dir>available</const_dir>. If the <obj_name>revenue</obj_name> per <var>cake</var> made is $<param>4</param> and the <obj_name>revenue</obj_name> per <var>pie</var> made is $<param>3</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 4 cake + 3 pie\nst: 4 cake + 5 pie <= 1000\n     5 cake + 3 pie <= 1200"}
{"input": "Lucas has <const_dir>acquired</const_dir> <limit>150</limit> acres of tropical land. He wants to plant <var>mango trees</var> and <var>durian trees</var>, as he knows he can sell all the <var>durians</var> and <var>mangos</var> harvested. <var>Mango trees</var> cost $<param>150</param> per acre to maintain, yield a <obj_name>profit</obj_name> of $<param>200</param> per acre, and require <param>6</param> days worth of labor per acre. <var>Durian trees</var> cost $<param>180</param> per acre to maintain, yield a <obj_name>profit</obj_name> of $<param>300</param> per acre, and require <param>3</param> days worth of labor per acre. Lucas has a <const_dir>budget</const_dir> of $<limit>20000</limit> and <limit>700</limit> days worth of labor <const_dir>available</const_dir> (among all his workers). How many acres of each tree should Lucas plant in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 Mango_trees + 300 Durian_trees\nst: Mango_trees + Durian_trees <= 150\n     180 Durian_trees + 150 Mango_trees <= 20000\n     6 Mango_trees + 3 Durian_trees <= 700"}
{"input": "A furniture company makes <var>regular refrigerators</var> and <var>energy-efficient refrigerators</var>. There is an expected demand of <const_dir>at least</const_dir> <limit>25</limit> <var>regular refrigerators</var> and <limit>40</limit> <var>energy-efficient refrigerators</var> each day. However, due to the size of their factory, they can make <const_dir>at most</const_dir> <limit>100</limit> <var>regular refrigerators</var> and <limit>70</limit> <var>energy-efficient refrigerators</var> per day. To satisfy a contract, a <const_dir>minimum</const_dir> of <limit>90</limit> refrigerators must be made each day. If the <obj_name>profit</obj_name> per <var>regular refrigerator</var> sold is $<param>50</param> and the <obj_name>profit</obj_name> per <var>energy-efficient refrigerator</var> sold is $<param>80</param>, how many refrigerators of each type should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 80 energy-efficient_refrigerator + 50 regular_refrigerator\nst: regular_refrigerators >= 25\n     energy-efficient_refrigerators >= 40\n     regular_refrigerators <= 100\n     energy-efficient_refrigerators <= 70\n     energy-efficient_refrigerator + regular_refrigerator <= 90"}
{"input": "James is following a fitness plan and has decided to mix two brands of protein drinks to create a new mixture. The <var>Delta brand</var> <obj_name>costs</obj_name> $<param>2.5</param> per can and contains <param>8</param> units of protein, <param>7</param> units of carbs, and <param>5</param> units of fat. The <var>Phi brand</var> <obj_name>costs</obj_name> $<param>4</param> per can and contains <param>12</param> units of protein, <param>5</param> units of carbs, and <param>7</param> units of fat. James wants to create a mixture having <const_dir>at least</const_dir> <limit>80</limit> units of protein, <limit>50</limit> units of carbs, and <limit>65</limit> units of fat. How many cans of each brand of drink should be mixed to create the new mixture at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 2.5 Delta_brand + 4 Phi_brand\nst: 8 Delta_brand + 12 Phi_brand >= 80\n     7 Delta_brand + 5 Phi_brand >= 50\n     5 Delta_brand + 7 Phi_brand >= 65"}
{"input": "Amanda <const_dir>has</const_dir> <limit>4000</limit> acres of land to grow <var>apple</var> and <var>peach trees</var>. <var>Apple trees</var> cost $<param>50</param> for their saplings, and they take <param>3</param> hours to maintain per acre. <var>Peach trees</var> cost $<param>80</param> for their saplings and take <param>5</param> hours to maintain per acre. Amanda has a <const_dir>budget</const_dir> of $<limit>30000</limit> for saplings and has <limit>600</limit> <const_dir>available</const_dir> hours for maintenance. If the <obj_name>profit</obj_name> per acre of <var>apples</var> is $<param>15</param> and the <obj_name>profit</obj_name> per acre of <var>peaches</var> is $<param>25</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 25 peaches + 15 apples\nst: 50 Apple_trees + 80 Peach_trees <= 30000\n     3 Apple_trees + 5 Peach_trees <= 600\n     peaches + apples <= 4000"}
{"input": "An artist uses cotton to make both <var>mini bears</var> and <var>dogs</var>. Each <var>mini bear</var> requires <param>8</param> units of cotton and each <var>mini dog</var> requires <param>7</param> units of cotton. The artist has <const_dir>available</const_dir> <limit>400</limit> units of cotton. However, due to time constraints, the artist can make <const_dir>at most</const_dir> <limit>40</limit> animals total. If the <obj_name>profit</obj_name> per <var>mini bear</var> sold is $<param>40</param> and the <obj_name>profit</obj_name> per <var>mini dog</var> sold is $<param>47</param>, how many of each should the artist make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 40 mini_bear + 47 mini_dog\nst: 8 mini_bear + 7 mini_dog <= 400\n     mini_bear + mini_dog <= 40"}
{"input": "A fragrance shop makes a mixture of perfume using <var>essential oils</var> and <var>fruit scents</var>. A unit of <var>essential oil</var> contains <param>3</param> units of aromatic notes and lasts up to <limit>9</limit> hours. A unit of <var>fruit scent</var> has <param>10</param> units of aromatic notes but lasts only for <param>4</param> hours. The shop wants to make sure that the mixture contains <const_dir>at least</const_dir> <limit>6</limit> units of aromatic notes and lasts <const_dir>at least</const_dir> for <limit>7</limit> hours.  The mixture can also contain <const_dir>at most</const_dir> <limit>8</limit> units of aromatic notes. If a unit of <var>essential oil</var> <obj_name>costs</obj_name> $<param>3.50</param> and a unit of <var>fruit scent</var> <obj_name>costs</obj_name> $<param>2</param>, how many units of each ingredient should be used to <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name> of the mixture?", "output": "min: 3.50 essential_oil + 2 fruit_scent\nst: 3 essential_oil + 10 fruit_scent >= 6\n     4 fruit_scent >= 7\n     3 essential_oil + 10 fruit_scent <= 8"}
{"input": "Theta Fishing wants to transport their catch. They can either use <var>freight trains</var> or <var>cargo ships</var>. <var>Freight trains</var> can take <param>2000</param> <obj_name>fish</obj_name> per trip while <var>cargo ships</var> can take <param>7000</param> <obj_name>fish</obj_name> per trip. The cost per trip for <var>freight trains</var> is $<param>100</param> while the cost per trip for <var>cargo ships</var> is $<param>180</param>. The budget is <const_dir>at most</const_dir> $<limit>1500</limit> and the number of <var>freight train</var> trips must be <const_dir>less than</const_dir> the number of <var>cargo ship</var> trips. Formulate an LP to <obj_dir>maximize</obj_dir> the <obj_name>number of fish</obj_name> that can be transported.", "output": "max: 7000 cargo_ships + 2000 Freight_trains\nst: 100 freight_trains + 180 cargo_ships <= 1500\n     freight_train <= cargo_ship"}
{"input": "A dessert restaurant makes <var>cakes</var> and <var>cupcakes</var>. Each type of dessert requires time in the oven and cooling rack. A batch of <var>cupcakes</var> requires <param>20</param> minutes in the oven and <param>60</param> minutes cooling. A batch of <var>cakes</var> requires <param>60</param> minutes in the oven and <param>120</param> minutes cooling. Additionally, the oven is <const_dir>available</const_dir> for <limit>9000</limit> minutes per month, the cooling rack is <const_dir>available</const_dir> for <limit>12000</limit> minutes per month. If the <obj_name>profit</obj_name> per batch of <var>cupcakes</var> is $<param>10</param> and the <obj_name>profit</obj_name> per batch of <var>cake</var> is $<param>25</param>, how many batches of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 cupcakes + 25 cake\nst: 20 cupcakes + 60 cakes <= 9000\n     120 cakes + 60 cupcakes <= 12000"}
{"input": "Amazing Arts makes <var>large</var> and <var>small artworks</var>. The store has <const_dir>available</const_dir> <limit>200</limit> units of paint, <limit>100</limit> units of glitter, and <limit>80</limit> units of glue. To make a <var>large artwork</var> requires <param>5</param> units of paint, <param>3</param> units of glitter, and <param>4</param> units of glue. To make a <var>small artwork</var> requires <param>3</param> units of paint, <param>1</param> unit of glitter, and <param>2</param> units of glue. The store must make <const_dir>at least</const_dir> <limit>5</limit> units of <var>large artworks</var> and <limit>10</limit> units of <var>small artworks</var>. If the <obj_name>profit</obj_name> per <var>large artwork</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>small artwork</var> is $<param>75</param>, how many of each artwork should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 large_artwork + 75 small_artwork\nst: 5 large_artwork + 3 small_artwork <= 200\n     3 large_artwork + 1 small_artwork <= 100\n     3 large_artwork + 2 small_artwork <= 80\n     large_artworks >= 5\n     small_artworks >= 10"}
{"input": "Adrian needs to gain weight for a role and decides to eat only <var>bagels</var> and <var>burgers</var>. He wants to eat a <const_dir>minimum</const_dir> of <limit>2500</limit> calories per day and <const_dir>at least</const_dir> <limit>500</limit> grams of fat per day. Each <var>bagel</var> <obj_name>costs</obj_name> $<param>4.5</param> and contains <param>250</param> calories and <param>15</param> grams of fat. Each <var>burger</var> <obj_name>costs</obj_name> $<param>12</param> and contains <param>800</param> calories and <param>23.5</param> grams of fat. How many of each should Adrian eat to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 4.5 bagel + 12 burger\nst: 250 bagel + 800 burger >= 2500\n     15 bagel + 23.5 burger >= 500"}
{"input": "A pie shop sells <var>apple</var> and <var>peach pies</var>. In a day, they must sell <const_dir>at least</const_dir> <limit>15</limit> <var>apple pies</var> and <const_dir>at least</const_dir> <limit>12</limit> <var>peach pies</var>. However, they can make <const_dir>at most</const_dir> <limit>20</limit> <var>apple pies</var> and <const_dir>at most</const_dir> <limit>18</limit> <var>peach pies</var>. In addition, they <const_dir>only</const_dir> have enough pie crusts to make <limit>30</limit> pies total of either type. If the <obj_name>profit</obj_name> per <var>apple pie</var> is $<param>7</param> and the <obj_name>profit</obj_name> per <var>peach pie</var> is $<param>8</param>, how many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 8 peach_pie + 7 apple_pie\nst: apple_pies >= 15\n     peach_pies >= 12\n     apple_pies <= 20\n     peach_pies <= 18\n     peach_pie + apple_pie <= 30"}
{"input": "A sign shop makes <var>storefront signs</var> and <var>street signs</var>. Each requires time for cutting, printing, and assembly. Each <var>storefront sign</var> takes <param>2</param> hours of cutting, <param>1</param> hour of printing, and <param>2</param> hours of assembly. Each <var>street sign</var> takes <param>1</param> hour of cutting, <param>0.5</param> hours of printing, and <param>0.8</param> hours of assembly. The sign shop has <limit>100</limit> hours <const_dir>available</const_dir> for cutting, <limit>50</limit> hours <const_dir>available</const_dir> for printing, and <limit>60</limit> hours <const_dir>available</const_dir> for assembly. If the <obj_name>profit</obj_name> per <var>storefront sign</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>street sign</var> is $<param>120</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 400 storefront_sign + 120 street_sign\nst: 2 storefront_sign + 1 street_sign <= 100\n     1 storefront_sign + 0.5 street_sign <= 50\n     2 storefront_sign + 0.8 street_sign <= 60"}
{"input": "Bob <const_dir>has</const_dir> <limit>100</limit> acres of agricultural land in which he wants to plant <var>daisies</var> and <var>peonies</var>. The seeds for <var>daisies</var> costs $<param>20</param> per acre, whereas the seeds for <var>peonies</var> costs $<param>35</param> per acre. The <obj_name>profit</obj_name> per acre of <var>daisies</var> is $<param>55</param>, whereas the <obj_name>profit</obj_name> for <var>peonies</var> is $<param>80</param> an acre. If Bob has a <const_dir>maximum</const_dir> budget of $<limit>3000</limit> to spend on seeds, determine how many <var>daisies</var> and <var>peonies</var> he needs to plant to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>.", "output": "max: 55 daisies + 80 peonies\nst: daisies + peonies <= 100\n     20 daisies + 35 peonies <= 3000"}
{"input": "An apple farm produces <var>Granny Smith apples</var> and <var>McIntosh apples</var>. They can make <const_dir>at most</const_dir> <limit>100</limit> kg of <var>Granny Smith apples</var> and <const_dir>at most</const_dir> <limit>120</limit> kg of <var>McIntosh apples</var>. In addition, they must supply <const_dir>at least</const_dir> <limit>25</limit> kg of <var>Granny Smith apples</var> and <limit>50</limit> kg of <var>McIntosh apples</var> per day. Both require time in a cleaning machine. Each kg of <var>Granny Smith apples</var> and <var>McIntosh apples</var> requires <param>3</param> hours at the cleaning machine. The cleaning machine is available for <const_dir>at most</const_dir> <limit>15</limit> hours per day. If the <obj_name>profit</obj_name> per kg of <var>Granny Smith apples</var> is $<param>2</param> and the <obj_name>profit</obj_name> per kg of <var>McIntosh apples</var> is $<param>1</param>, how many kg of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2 Granny_Smith_apples + 1 McIntosh_apples\nst: Granny_Smith_apples <= 100\n     McIntosh_apples <= 120\n     Granny_Smith_apples >= 25\n     McIntosh_apples >= 50\n     3 Granny_Smith_apples + 3 McIntosh_apples <= 15"}
{"input": "A tea shop offers two promotion packages, <var>package X</var> and <var>package Y.</var> Each promotion package consists of some combination of green and black tea. One <var>package X</var> has <param>5</param> bottles of green tea and <param>2</param> bottles of black tea, and yields a <obj_name>profit</obj_name> of $<param>70</param>. In comparison, a <var>package Y</var> contains <param>3</param> bottles of green tea and <param>4</param> bottles of black tea, and yields a <obj_name>profit</obj_name> of $<param>120</param>. However, the shop <const_dir>only</const_dir> has <limit>1200</limit> bottles of green tea and <limit>900</limit> bottles of black tea. Find the best mix of packages to achieve <obj_dir>maximum</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 120 package_Y + 70 package_X\nst: 5 package_X + 3 package_Y <= 1200\n     2 package_X + 4 package_Y <= 900"}
{"input": "A cheese factory mixes two cheese mixes to create a final product. <var>Pizza mix</var> contains <param>4</param> units of mozzarella, <param>2</param> units of cheddar, and <param>1</param> unit of salt. <var>Mac and cheese</var> mix contains <param>1</param> unit of mozzarella, <param>5</param> units of cheddar, and <param>2</param> units of salt. The <const_dir>minimum</const_dir> requirements of the new product are <limit>30</limit> units of mozzarella, <limit>25</limit> units of cheddar, and <limit>5</limit> units of salt. If the <obj_name>cost</obj_name> per <var>pizza mix</var> is $<param>3</param> and the <obj_name>cost</obj_name> per <var>mac and cheese</var> mix is $<param>3.25</param>, how many of each should be used to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 3 pizza_mix + 3.25 mac_and_cheese\nst: 4 Pizza_mix + 1 Mac_and_cheese >= 30\n     2 Pizza_mix + 5 Mac_and_cheese >= 25\n     1 Pizza_mix + 2 Mac_and_cheese >= 5"}
{"input": "Two colours of paints: <var>Egret</var> and <var>Crane</var>, have quality ratings of <param>60</param> and <param>85</param>, respectively. The <var>Egret paint</var> <obj_name>costs</obj_name> $<param>0.40</param> per liter while the <var>Crane paint</var> <obj_name>costs</obj_name> $<param>1.20</param> per liter. In order to paint his fence, Bob wants to use a mix of paint with a quality of <const_dir>at least</const_dir> <limit>70</limit>. This ensures that the paint on the fence will withstand a few storms. What blend of the two paints should he mix in order to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>? [Hint: Let x be the fraction of each liter that is <var>Egret paint</var> and y be the fraction that is <var>Crane paint</var>.]", "output": "min: 0.40 Egret_paint + 1.20 Crane_paint\nst: 60 Egret + 85 Crane >= 70"}
{"input": "An ice cream shop sells <var>regular</var> and <var>premium ice cream</var>. They make x1 <var>regular ice cream</var> at a <obj_name>profit</obj_name> of $<param>1</param> each and x2 <var>premium ice cream</var> at a <obj_name>profit</obj_name> of $<param>2.50</param> each (x1 and x2 are unknown and greater than or equal to 0). The demand for <var>regular ice cream</var> is <const_dir>at most</const_dir> <limit>40</limit> and the demand for <var>premium ice cream</var> is <const_dir>at most</const_dir> <limit>25</limit>. In addition the shop can <const_dir>only</const_dir> make <limit>60</limit> ice creams total. How many of each should they make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 2.50 premium_ice_cream + 1 regular_ice_cream\nst: regular_ice_cream <= 40\n     premium_ice_cream <= 25\n     premium_ice_cream + regular_ice_cream <= 60"}
{"input": "John wants to develop a weight loss program that includes a <const_dir>minimum</const_dir> of <limit>250</limit> units of protein and <limit>45</limit> units of carbs. There are two cuisine options available: <var>Vietnamese</var> and <var>Korean</var>. One plate of <var>Vietnamese food</var> contains <param>15</param> units of protein and <param>20</param> units of carbs. One plate of <var>Korean food</var> contains <param>10</param> units of protein and <param>14</param> units of carbs. <var>Vietnamese food</var> <obj_name>costs</obj_name> $<param>12.5</param> per plate food and <var>Korean food</var> <obj_name>costs</obj_name> $<param>16.5</param> per plate. Find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> for the program that can consist of a mixture of the cuisines and at the same time meet the minimal protein and carb requirements.", "output": "min: 12.5 Vietnamese_food + 16.5 Korean_food\nst: 15 Vietnamese_food + 10 Korean_food >= 250\n     20 Vietnamese_food + 14 Korean_food >= 45"}
{"input": "A food truck makes <var>apple</var> and <var>orange smoothies</var>. It takes <param>6</param> minutes on the cutting machine and <param>3</param> minutes on the blending machine to make an <var>apple smoothie</var>. It takes <param>5</param> minutes on the cutting machine and <param>2</param> minutes on the blending machine to make an <var>orange smoothie</var>. The <obj_name>profit</obj_name> per <var>apple smoothie</var> is $<param>3.5</param> and the <obj_name>profit</obj_name> per <var>orange smoothie</var> is $<param>4.5</param>. If both the cutting machine and blending machine are available for <const_dir>at most</const_dir> <limit>500</limit> minutes per day, how many of each smoothie should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3.5 apple_smoothie + 4.5 orange_smoothie\nst: 6 apple_smoothie + 5 orange_smoothie <= 500\n     3 apple_smoothie + 2 orange_smoothie <= 500"}
{"input": "Daniel has two types of liquid supplementation available: <var>Zeta</var> and <var>Phi</var>. After consulting with a doctor, he finds that he needs a <const_dir>minimum</const_dir> of <limit>25</limit> grams of iron and <limit>40</limit> grams of vitamin A. <var>Zeta supplementation</var> consists of <param>15%</param> iron and <param>20%</param> vitamin A while <var>Phi supplementation</var> consists of <param>20%</param> iron and <param>45%</param> vitamin A. <var>Zeta supplementation</var> <obj_name>costs</obj_name> $<param>0.08</param> per gram while <var>Phi supplementation</var> <obj_name>costs</obj_name> $<param>0.18</param> per gram. How much of each supplementation should be used to meet his requirements and <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 0.08 Zeta_supplementation + 0.18 Phi_supplementation\nst: 15% Zeta_supplementation + 20% Phi_supplementation >= 25\n     20% Zeta_supplementation + 45% Phi_supplementation >= 40"}
{"input": "Alex is making a special vitamin mix using two drinks: <var>orange juice</var> and <var>apple juice</var>. The vitamin mix must contain <const_dir>at least</const_dir> <limit>100</limit> units of Vitamin A, <const_dir>at least</const_dir> <limit>200</limit> units of vitamin D, and <const_dir>at most</const_dir> <limit>150</limit> units of vitamin E. A cup of <var>orange juice</var> contains <param>6</param> units of Vitamin A, <param>5</param> units of Vitamin D, <param>12</param> units of Vitamin E, and <param>3</param> units of <obj_name>Vitamin K.</obj_name> A cup of <var>apple juice</var> contains <param>10</param> units of Vitamin A, <param>3</param> units of Vitamin D, <param>15</param> units of Vitamin E, and <param>9</param> units of <obj_name>Vitamin K.</obj_name> How many cups of each drink should be used to make the vitamin mix in order to <obj_dir>minimize</obj_dir> the <obj_name>amount of Vitamin K</obj_name>?", "output": "min: 9 apple_juice + 3 orange_juice\nst: 6 orange_juice + 10 apple_juice >= 100\n     5 orange_juice + 3 apple_juice >= 200\n     12 orange_juice + 15 apple_juice <= 150"}
{"input": "In a video game, Alison <const_dir>has to collect</const_dir> <limit>40</limit> stars and <limit>80</limit> snowballs. There are two areas. <var>Starry Mountain</var> and <var>Frosty Hills</var>, where she can find these resources. For <obj_name>each hour</obj_name> in <var>Starry Mountain</var> that she spends, she gets <param>5</param> stars and <param>2</param> snowballs. For <obj_name>each hour</obj_name> in <var>Frosty Hills</var> that she spends, she gets <param>1</param> star and <param>12</param> snowballs. Formulate an LP to <obj_dir>minimize</obj_dir> the <obj_name>amount of time</obj_name> spent in both areas.", "output": "min: \nst: 5 Starry_Mountain + 1 Frosty_Hills >= 40\n     2 Starry_Mountain + 12 Frosty_Hills >= 80"}
{"input": "John Designs crafts two types of necklaces: <var>platinum</var> and <var>silver necklaces</var>. Each <var>platinum necklace</var> takes <param>4</param> hours to design and <param>15</param> hours to craft. Each <var>silver necklace</var> takes <param>7</param> hours to design and <param>5</param> hours to craft. The designing team is <const_dir>available</const_dir> for <limit>35</limit> hours and the crafting team is <const_dir>available</const_dir> for <limit>40</limit> hours. The <obj_name>profit</obj_name> is $<param>2000</param> per <var>platinum necklace</var> and $<param>700</param> per <var>silver necklace</var>. How many necklaces of each type should the company make to <obj_dir>maximize</obj_dir> their <obj_name>profit</obj_name>?", "output": "max: 2000 platinum_necklace + 700 silver_necklace\nst: 4 platinum_necklace + 7 silver_necklace <= 35\n     15 platinum_necklace + 5 silver_necklace <= 40"}
{"input": "Zeta Monitor makes <var>LCD</var> and <var>LED monitors</var>. Projections indicate a demand of <const_dir>at least</const_dir> <limit>150</limit> <var>LCD monitors</var> and <limit>80</limit> <var>LED monitors</var> each day. Because of the manual labor involved, <const_dir>at most</const_dir> <limit>300</limit> <var>LCD monitors</var> and <limit>280</limit> <var>LED monitors</var> can be made each day. To satisfy a contract with an electronics shop, <const_dir>at least</const_dir> <limit>250</limit> total monitors must be made each day. The factory makes a <obj_name>profit</obj_name> of $<param>25</param> per <var>LCD monitor</var> and $<param>70</param> per <var>LED monitor</var>. How many of each monitor should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 25 LCD_monitor + 70 LED_monitor\nst: LCD_monitors >= 150\n     LED_monitors >= 80\n     LCD_monitors <= 300\n     LED_monitors <= 280\n     LCD_monitor + LED_monitor <= 250"}
{"input": "Alpha Glass makes two types of glass panes: a <var>bulletproof glass pane</var> and a <var>fire-rated glass pane</var>. Both require time on a heating and cooling machine. Both machines are available for a <const_dir>maximum</const_dir> of <limit>350</limit> minutes per day. It takes <param>4</param> minutes in the heating machine and <param>6</param> minutes in the cooling machine to make one <var>bulletproof glass pane</var>. It takes <param>7</param> minutes in the heating machine and <param>9</param> minutes in the cooling machine to make one <var>fire-rated glass pane</var>. The <obj_name>profit</obj_name> per pane of <var>bulletproof glass</var> is $<param>12</param> and the <obj_name>profit</obj_name> per pane of <var>fire-rated glass</var> is $<param>9.5</param>. How many panes of each glass type should the company make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>? What is the maximum <obj_name>profit</obj_name>?", "output": "max: 12 bulletproof_glass + 9.5 fire-rated_glass\nst: 4 bulletproof_glass_pane + 7 fire-rated_glass_pane <= 350\n     6 bulletproof_glass_pane + 9 fire-rated_glass_pane <= 350"}
{"input": "A gardener mixes soil to produce his own soil mix to fulfill his compost and loam requirements. There are two types of soil, an <var>outdoor soil</var> and an <var>indoor soil</var>. The <var>indoor soil</var> <obj_name>costs</obj_name> $<param>2</param> and contains <param>2</param> units of compost and <param>3</param> units of loam. The <var>outdoor soil</var> <obj_name>costs</obj_name> $<param>3</param> and contains <param>4</param> units of compost and <param>6</param> units of loam. If the gardener requires <const_dir>at least</const_dir> <limit>80</limit> units of compost and <limit>70</limit> units of loam per week, how much of each soil should he purchase to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 2 indoor_soil + 3 outdoor_soil\nst: 2 indoor_soil + 4 outdoor_soil >= 80\n     3 indoor_soil + 6 outdoor_soil >= 70"}
{"input": "A paint manufacturer <const_dir>produces</const_dir> <limit>350</limit> kg of dye and <limit>250</limit> kg of filler each week. By using different techniques, they can produce three different paint products for sale: <var>oil paintings</var>, <var>acrylic paintings</var>, and <var>watercolor paintings</var>. The <obj_name>profit</obj_name> per kg for selling the paint is $<param>150</param>, $<param>180</param>, $<param>220</param> for the <var>oil painting</var>, <var>acrylic painting</var>, and <var>watercolor painting</var> respectively. Producing 1 kg of <var>oil paintings</var> requires <param>6.5</param> kg of dye and <param>15</param> kg of filler. Producing 1 kg of <var>acrylic paintings</var> requires <param>8</param> kg of dye and <param>12</param> kg of filler. Producing 1 kg of <var>watercolor paintings</var> requires <param>16</param> kg of dye and <param>5</param> kg of filler. Formulate the problem of deciding how much of each paint to make each week as a LP problem in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>.", "output": "max: 150 oil_painting + 180 acrylic_painting + 220 watercolor_painting\nst: 6.5 oil_paintings + 8 acrylic_paintings + 16 watercolor_paintings <= 350\n     15 oil_paintings + 12 acrylic_paintings + 5 watercolor_paintings <= 250"}
{"input": "Bob wants to mix his animal feeds, <var>oats</var> and <var>sunflower seeds</var>, in such a way that the mixture will contain a <const_dir>minimum</const_dir> of <limit>250</limit> units of protein and <limit>400</limit> units of fat. <var>Oats</var> <obj_name>cost</obj_name> $<param>50</param> per kilogram and contain <param>5</param> units of protein and <param>16</param> units of fat. <var>Sunflower seeds</var> <obj_name>cost</obj_name> $<param>70</param> per kilogram and contain <param>10</param> units of protein and <param>22</param> units of fat. <obj_dir>Minimize</obj_dir> the <obj_name>cost</obj_name> of the mixture.", "output": "Min: 50 Oats + 70 Sunflower_seeds\nst: 5 Oats + 10 Sunflower_seeds >= 250\n     16 Oats + 22 Sunflower_seeds >= 400"}
{"input": "A factory produces <var>1st</var> and <var>2nd generation motherboards</var>. A <var>1st generation motherboard</var> requires <param>4</param> units of silicon while a <var>2nd generation motherboard</var> requires <param>6</param> units of silicon. A <var>1st generation motherboard</var> requires <param>20</param> minutes of assembly and <param>30</param> minutes of soldering while a <var>2nd generation motherboard</var> requires <param>30</param> minutes of assembly and <param>40</param> minutes of soldering. The factory has <const_dir>available</const_dir> <limit>450</limit> units of silicon, <limit>900</limit> minutes of assembly time, and <limit>500</limit> minutes of soldering time. They also want to make a <const_dir>minimum</const_dir> of <limit>6</limit> <var>1st generation motherboards</var> and <limit>7</limit> <var>2nd generation motherboards</var>. If the <obj_name>profit</obj_name> per <var>1st generation motherboard</var> is $<param>100</param> and the <obj_name>profit</obj_name> per <var>2nd generation motherboard</var> is $<param>125</param>, how many of each should the factory make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 125 2nd_generation_motherboard + 100 1st_generation_motherboard\nst: 4 1st_generation_motherboard + 6 2nd_generation_motherboard <= 450\n     20 1st_generation_motherboard + 30 2nd_generation_motherboard <= 900\n     30 1st_generation_motherboard + 40 2nd_generation_motherboard <= 500\n     1st_generation_motherboards >= 6\n     2nd_generation_motherboards >= 7"}
{"input": "A construction company installs <var>hardwood flooring</var> and <var>carpet</var>. It takes <param>1</param> hour of cutting and <param>3</param> hours of installation for <var>hardwood flooring</var>. It takes <param>0.5</param> hours of cutting and <param>4</param> hours of installation for <var>carpet</var>. The company has <const_dir>available</const_dir> <limit>200</limit> hours for cutting and <limit>400</limit> hours for installation. If the <obj_name>profit</obj_name> per <var>hardwood flooring</var> is $<param>400</param> and the <obj_name>profit</obj_name> per <var>carpet</var> is $<param>650</param>, how many of each should be installed to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 650 carpet + 400 hardwood_flooring\nst: 1 hardwood_flooring + 0.5 carpet <= 200\n     4 carpet + 3 hardwood_flooring <= 400"}
{"input": "You have two instant coffees that contain caffeine and sugar. <var>Vanilla flavor</var> contains <param>2</param> units of caffeine and <param>2</param> units of sugar per package. <var>Mocha flavor</var> contains <param>3</param> units of caffeine and <param>5</param> units of sugar per package. You must consume <const_dir>at least</const_dir> <limit>60</limit> units of caffeine and <limit>50</limit> units of sugar. If a package of <var>vanilla flavor</var> <obj_name>costs</obj_name> $<param>2</param> and a package of <var>mocha flavor</var> <obj_name>costs</obj_name> $<param>3</param>, how many of each should you buy to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 2 vanilla_flavor + 3 mocha_flavor\nst: 2 Vanilla_flavor + 3 Mocha_flavor >= 60\n     2 Vanilla_flavor + 5 Mocha_flavor >= 50"}
{"input": "A steel shop makes <var>fences</var> and <var>doors</var> using stainless steel and aluminum. Each <var>fence</var> requires <param>2</param> units of stainless steel and <param>10</param> units of aluminum. Each <var>door</var> requires <param>5</param> units of stainless steel and <param>1</param> unit of aluminum. The steel shop has <const_dir>available</const_dir> <limit>400</limit> units of stainless steel and <limit>500</limit> units of aluminum. If the <obj_name>profit</obj_name> per <var>fence</var> is $<param>200</param> and the <obj_name>profit</obj_name> per <var>door</var> is $<param>100</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 fence + 100 door\nst: 2 fence + 5 door <= 400\n     10 fence + 1 door <= 500"}
{"input": "An ice cream truck sells <var>ice cream cones</var> and <var>ice cream cups</var>. Each <var>ice cream cone</var> requires <param>3</param> scoops of ice cream and <param>5</param> grams of toppings. Each <var>ice cream cup</var> requires <param>4</param> scoops of ice cream and <param>6</param> grams of toppings. The truck has <const_dir>available</const_dir> <limit>500</limit> scoops of ice cream and <limit>1000</limit> grams of toppings. If the <obj_name>revenue</obj_name> per <var>ice cream cone</var> is $<param>3</param> and the <obj_name>revenue</obj_name> per <var>ice cream cup</var> is $<param>3.50</param>, how many of each should it sell to <obj_dir>maximize</obj_dir> <obj_name>revenue</obj_name>?", "output": "max: 3 ice_cream_cone + 3.50 ice_cream_cup\nst: 3 ice_cream_cone + 4 ice_cream_cup <= 500\n     5 ice_cream_cone + 6 ice_cream_cup <= 1000"}
{"input": "Julia goes to a supplement store that sells two powders, <var>Gamma</var> and <var>Delta</var>, for iron and biotin. The <obj_name>cost</obj_name> per scoop of <var>Gamma</var> is $<param>1.5</param> while the <obj_name>cost</obj_name> per scoop of <var>Delta</var> is $<param>2.5</param>. A scoop of <var>Gamma</var> contains <param>7</param> grams of iron and <param>10</param> grams of biotin. A scoop of <var>Delta</var> contains <param>12</param> grams of iron and <param>9</param> grams of biotin. A doctor has recommended that Julia takes <const_dir>at least</const_dir> <limit>60</limit> grams of iron and <limit>45</limit> grams of biotin daily. How can Julia <obj_dir>minimize</obj_dir> <obj_name>cost</obj_name>?", "output": "min: 1.5 Gamma + 2.5 Delta\nst: 7 Gamma + 12 Delta >= 60\n     10 Gamma + 9 Delta >= 45"}
{"input": "A hiker eats two types of berry mix and wants to make sure he eats <const_dir>at least</const_dir> <limit>150</limit> g of blueberries and <limit>125</limit> g of blackberries. <var>Berry mix A</var> contains <param>30</param> g of blueberries and <param>45</param> g of blackberries per bag. <var>Berry mix B</var> contains <param>20</param> g of blueberries and <param>15</param> g of blackberries per bag. If <var>berry mix A</var> <obj_name>costs</obj_name> $<param>5</param> per bag and <var>berry mix B</var> <obj_name>costs</obj_name> $<param>3</param> per bag, how many bags of each should the hiker purchase to <obj_dir>minimize</obj_dir> <obj_name>costs</obj_name>?", "output": "min: 5 berry_mix_A + 3 berry_mix_B\nst: 30 Berry_mix_A + 20 Berry_mix_B >= 150\n     45 Berry_mix_A + 15 Berry_mix_B >= 125"}
{"input": "A wood factory produces <var>lumbers</var> and <var>plywood</var> using workers and machines. The factory has a <const_dir>total</const_dir> of <limit>2500</limit> worker-hours and <limit>4000</limit> machine-hours <const_dir>available</const_dir>. Each <var>lumber</var> takes <param>3</param> worker-hours and <param>8</param> works of machine-hours. On the other hand, each <var>plywood</var> requires <param>2</param> worker-hours and <param>12</param> machine-hours. The factory must make <const_dir>at least</const_dir> <limit>200</limit> <var>lumbers</var> and <const_dir>at least</const_dir> <limit>300</limit> <var>plywood</var>. If the <obj_name>profit</obj_name> per <var>lumber</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>plywood</var> is $<param>35</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 10 lumber + 35 plywood\nst: 3 lumber + 2 plywood <= 2500\n     8 lumber + 12 plywood <= 4000\n     lumbers >= 200\n     plywood >= 300"}
{"input": "A tasty burrito is to be made from units of <var>beans</var> and <var>onions</var> and is to contain a <const_dir>minimum</const_dir> of <limit>110</limit> units of spice and <limit>80</limit> units of flavor. <var>Beans</var> <obj_name>cost</obj_name> $<param>6</param> per unit and <var>onion</var> <obj_name>cost</obj_name> $<param>8</param> per unit. One unit of <var>beans</var> contains <param>10</param> units of spice and <param>3</param> units of flavor. One unit of <var>onions</var> contains <param>2</param> units of spice and <param>6</param> units of flavor. Formulate this as an LP and find the <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name> burrito that can be made.", "output": "min: 6 Beans + 8 onion\nst: 10 beans + 2 onions >= 110\n     3 beans + 6 onions >= 80"}
{"input": "Alpha Nut <const_dir>has</const_dir> <limit>35</limit> kilograms of almonds and <limit>20</limit> kilograms of hazelnuts. They sell two combos of these nuts: <var>Combo X</var> and <var>Combo Y.</var> <var>Combo X</var> is <param>70%</param> almonds and <param>30%</param> hazelnuts. <var>Combo Y</var> is <param>35%</param> almonds and <param>65%</param> hazelnuts. A kilogram of <var>Combo X</var> yields a <obj_name>profit</obj_name> of $<param>35</param> and a kilogram of <var>Combo Y</var> yields a <obj_name>profit</obj_name> of $<param>55</param>. How many kilograms of each combo should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 35 Combo_X + 55 Combo_Y\nst: 35% Combo_Y + 70% Combo_X <= 35\n     30% Combo_X + 65% Combo_Y <= 20"}
{"input": "A tea shop sells two products: <var>oolong tea</var> and <var>green tea</var>. The shop makes x1 bottles of <var>oolong tea</var> per day and x2 bottles of <var>green tea</var> per day (x1 and x2 are unknown values greater than or equal to 0). The <obj_name>profit</obj_name> per bottle of <var>oolong tea</var> is $<param>30</param> and the <obj_name>profit</obj_name> per bottle of <var>green tea</var> is $<param>20</param>. Current demand for tea is <const_dir>at most</const_dir> <limit>100</limit> bottles of <var>oolong tea</var> per day and <const_dir>at most</const_dir> <limit>80</limit> bottles of <var>green tea</var> per day. The shop <const_dir>only</const_dir> has enough supply to make <limit>150</limit> bottles of either type each day. How many bottles of each tea, <var>oolong tea</var> and <var>green tea</var>, should the shop make to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 30 oolong_tea + 20 green_tea\nst: oolong_tea <= 100\n     green_tea <= 80\n     oolong_tea + green_tea <= 150"}
{"input": "A car company manufactures two types of vehicles: <var>minivans</var> and <var>SUVs</var>. A <var>minivan</var> requires <param>9</param> hours of engineering time while an <var>SUV</var> requires <param>7</param> hours of engineering time. Both vehicles require <param>25</param> kg of steel. The company <const_dir>receives</const_dir> <limit>1200</limit> kg of steel each week and a total of <limit>450</limit> hours of engineering time is <const_dir>available</const_dir>. Each <var>minivan</var> nets $<param>5500</param> in <obj_name>profit</obj_name>, while each <var>SUV</var> nets $<param>4000</param> in <obj_name>profit</obj_name>. The company wishes to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>. Ignoring the divisibility issues, construct a linear programming problem whose solution will determine the number of each type of vehicle the company should produce.", "output": "max: 5500 minivan + 4000 SUV\nst: 9 minivan + 7 SUV <= 450\n     25 minivan + 25 SUV <= 1200"}
{"input": "A battery store sells <var>AA</var> and <var>D batteries</var>. The store has a <const_dir>budget</const_dir> of $<limit>1000</limit> and each <var>AA battery</var> costs $<param>1</param> and each <var>D battery</var> costs $<param>3</param>. The monthly demand for both batteries will <const_dir>not exceed</const_dir> <limit>1000</limit>. If the <obj_name>profit</obj_name> per <var>AA battery</var> is $<param>0.50</param> and the <obj_name>profit</obj_name> per <var>D battery</var> is $<param>1</param>, how many of each should the store stock in order to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 1 D_battery + 0.50 AA_battery\nst: 1 AA_battery + 3 D_battery <= 1000\n     D_battery + AA_battery <= 1000"}
{"input": "Andy <const_dir>has</const_dir> decided to put $<limit>10</limit> million of his wealth in a trust fund for his children. His financial advisor has evaluated that the money should be invested in the <var>energy sector</var> or in the <var>travel sector</var>. Money placed in the <var>energy sector</var> is likely to give a <param>32%</param> total <obj_name>return</obj_name> while money placed in the <var>travel sector</var> yields a <param>20%</param> total <obj_name>return</obj_name>. Andy wants to place <const_dir>at least</const_dir> <limit>25%</limit> of the investment in the <var>energy sector</var> and <const_dir>at most</const_dir> <limit>50%</limit> of the investment in the <var>travel sector</var>. How much money should be placed in each sector to <obj_dir>maximize</obj_dir> <obj_name>return</obj_name> on investment?", "output": "max: 32% energy_sector + 20% travel_sector\nst: energy_sector + travel_sector <= 10\n     energy_sector >= 25%\n     travel_sector <= 50%"}
{"input": "You <const_dir>have</const_dir> <limit>40</limit> acres of land on which you grow <var>corn</var> and <var>peas</var>. Each acre of <var>corn</var> requires $<param>50</param> worth of fertilizer and <param>60</param> minutes of time to lay the fertilizer. Each acre of <var>peas</var> requires $<param>60</param> worth of fertilizer and <param>90</param> minutes of time to lay the fertilizer. You have <const_dir>available</const_dir> $<limit>4350</limit> to spend on fertilizer and <limit>6000</limit> minutes <const_dir>available</const_dir> to lay the fertilizer. If the <obj_name>profit</obj_name> per acre of <var>corn</var> is $<param>200</param> and the <obj_name>profit</obj_name> per acre of <var>peas</var> is $<param>250</param>, how many acres of each should be grown to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 200 corn + 250 peas\nst: 50 corn + 60 peas <= 4350\n     60 corn + 90 peas <= 6000"}
{"input": "A sauce factory mass produces <var>pasta sauce</var> and <var>barbecue sauce</var> on an assembly line. Each jar of <var>pasta sauce</var> takes <param>1</param> minute on the filling machine and <param>3</param> minutes on the jarring machine. Each jar of <var>barbecue sauce</var> takes <param>3</param> minutes on the filling machine and <param>4</param> minutes on the jarring machine. The filling machine is <const_dir>available</const_dir> for <limit>12500</limit> minutes while the jarring machine is <const_dir>available</const_dir> for <limit>20000</limit> minutes. If the <obj_name>profit</obj_name> per jar of <var>pasta sauce</var> is $<param>3</param> and the <obj_name>profit</obj_name> per jar of <var>barbecue sauce</var> is $<param>5</param>, how many jars of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 pasta_sauce + 5 barbecue_sauce\nst: 1 pasta_sauce + 3 barbecue_sauce <= 12500\n     3 pasta_sauce + 4 barbecue_sauce <= 20000"}
{"input": "A taco restaurant sells <var>burritos</var> and <var>tacos</var>. Each <var>burrito</var> contains <param>4</param> units of beef and <param>4</param> units of toppings. Each <var>taco</var> contains <param>4.5</param> units of beef and <param>3</param> units of toppings. The restaurant has <limit>500</limit> units of beef <const_dir>available</const_dir> and <limit>400</limit> units of toppings <const_dir>available</const_dir>. If the <obj_name>profit</obj_name> per <var>burrito</var> is $<param>3</param> and the <obj_name>profit</obj_name> per <var>taco</var> is $<param>3.50</param>, how many of each should the restaurant sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 3 burrito + 3.50 taco\nst: 4 burrito + 4.5 taco <= 500\n     4 burrito + 3 taco <= 400"}
{"input": "Eric wants to sell his <const_dir>inventory</const_dir> of <limit>25</limit> wireless keyboards, <limit>13</limit> wired earbuds, and <limit>19</limit> USB hubs. He decides to offer two combos: <var>Combo X</var> and <var>Combo Y.</var> <var>Combo X</var> brings a <obj_name>profit</obj_name> of $<param>12</param> and contains <param>2</param> wireless keyboards and <param>2</param> USB hubs. <var>Combo Y</var> yields a <obj_name>profit</obj_name> of $<param>15</param> and contains <param>1</param> wireless keyboard, <param>3</param> wired earbuds, and <param>1</param> USB hub. Assuming he can sell all combos, how many of each should he prepare to <obj_dir>maximize</obj_dir> his <obj_name>profit</obj_name>?", "output": "max: 15 Combo_Y + 12 Combo_X\nst: 2 Combo_X + 1 Combo_Y <= 25\n     3 Combo_Y <= 13\n     2 Combo_X + 1 Combo_Y <= 19"}
{"input": "Autumn Auto wants to promote new types of minivans and supercars that are targeted at baby boomers and millennials. To market these products, Autumn Auto has launched a boisterous ads campaign and has decided to purchase TV commercial spots on two channels: (1) <var>global news</var> and (2) <var>talent shows</var>. Each <var>talent show</var> ad is seen by <param>5</param> million baby boomers and <param>20</param> million millennials and <obj_name>costs</obj_name> $<param>80,000</param>. Each <var>global news</var> commercial is watched by <param>13</param> million baby boomers and <param>7</param> million millennials, and <obj_name>costs</obj_name> $<param>30,000</param>. Autumn Auto would like to reach <const_dir>at least</const_dir> <limit>50</limit> million baby boomers and <limit>30</limit> million millennials. Determine how Autumn Auto can meet its advertising requirements at <obj_dir>minimum</obj_dir> <obj_name>cost</obj_name>.", "output": "min: 80,000 talent_show + 30,000 global_news\nst: 5 talent_show + 13 global_news >= 50\n     20 talent_show + 7 global_news >= 30"}
{"input": "Kevin needs vitamins to supplement his diet. He needs to get <const_dir>at least</const_dir> <limit>25</limit> units of vitamin A and <limit>40</limit> units of vitamin B everyday. In order to do so, he can buy capsules named <var>Special Formula</var> and <var>One Daily</var>. Each capsule of <var>Special Formula</var> contains <param>4</param> units of vitamin A and <param>5</param> units of vitamin B. Each capsule of <var>One Daily</var> contains <param>3</param> units of vitamin A and <param>7</param> units of vitamin B. If the <obj_name>cost</obj_name> per <var>Special Formula</var> capsule is $<param>0.50</param> and the <obj_name>cost</obj_name> per <var>One Daily</var> capsule is $<param>0.20</param>, how many of each should he buy to <obj_dir>minimize</obj_dir> his <obj_name>cost</obj_name>?", "output": "min: 0.50 Special_Formula + 0.20 One_Daily\nst: 4 Special_Formula + 3 One_Daily >= 25\n     5 Special_Formula + 7 One_Daily >= 40"}
{"input": "Nolan has to allocate his farming equipment between his two farms, a <var>pumpkin farm</var> and a <var>potato farm</var>. The <obj_name>revenue</obj_name> per acre of <var>pumpkins</var> is $<param>150</param> and the <obj_name>revenue</obj_name> per acre of <var>potatoes</var> is $<param>200</param>. He has one tractor, one plow, and one combine. Each equipment <const_dir>can be used for</const_dir> <limit>12</limit> hours a day divided in any way between his two farms. On his <var>pumpkin farm</var>, harvesting an acre of <var>pumpkins</var> requires <param>0.5</param> hours on the tractor, <param>0.6</param> hours on the plow, and <param>0.4</param> hours on the combine. On his <var>potato farm</var>, harvesting an acre of <var>potatoes</var> requires <param>0.9</param> hours on the tractor, <param>0.5</param> hours on the plow, and <param>0.3</param> hours on the combine. How should Nolan allocate his equipment between his farms to <obj_dir>maximize</obj_dir> his <obj_name>revenue</obj_name>?", "output": "max: 150 pumpkins + 200 potatoes\nst: 0.5 pumpkins + 0.9 potatoes <= 12\n     0.6 pumpkins + 0.5 potatoes <= 12\n     0.4 pumpkins + 0.3 potatoes <= 12"}
{"input": "A museum gift shop sells gifts in two packages. <var>Package 1</var> contains <param>5</param> souvenirs and <param>10</param> snacks. <var>Package 2</var> contains <param>4</param> souvenirs and <param>15</param> snacks. The museum <const_dir>has</const_dir> <limit>1000</limit> souvenirs and <limit>1400</limit> snacks. If the <obj_name>profit</obj_name> per <var>package 1</var> is $<param>10</param> and the <obj_name>profit</obj_name> per <var>package 2</var> is $<param>12</param>, how many of each package should they sell to <obj_dir>maximize</obj_dir> <obj_name>profit</obj_name>?", "output": "max: 12 package_2 + 10 package_1\nst: 5 Package_1 + 4 Package_2 <= 1000\n     10 Package_1 + 15 Package_2 <= 1400"}
{"input": "A tea company makes <var>low</var>, <var>medium</var>, and <var>high quality tea</var>. A <var>low quality tea</var> contains <param>2</param> units of rare additives and <param>6</param> units of tea leaves. A <var>medium quality tea</var> contains <param>3</param> units of rare additives and <param>7</param> units of tea leaves. A <var>high quality tea</var> contains <param>4</param> units of rare additives and <param>8</param> units of tea leaves. The company has <const_dir>available</const_dir> <limit>200</limit> units of rare additives and <limit>400</limit> units of tea leaves. If the <obj_name>profit</obj_name> per <var>low quality tea</var> is $<param>1</param>, the <obj_name>profit</obj_name> per <var>medium quality tea</var> is $<param>3</param>, and the <obj_name>profit</obj_name> per <var>high quality tea</var> is $<param>5</param>, how many of each should be made to <obj_dir>maximize</obj_dir> <obj_name>profits</obj_name>?", "output": "max: 3 medium_quality_tea + 5 high_quality_tea + 1 low_quality_tea\nst: 2 low_quality_tea + 3 medium_quality_tea + 4 high_quality_tea <= 200\n     6 low_quality_tea + 7 medium_quality_tea + 8 high_quality_tea <= 400"}
